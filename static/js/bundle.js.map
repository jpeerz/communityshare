{"version":3,"sources":["webpack:///bundle.js","webpack:///webpack/bootstrap 28e7474eb05a87bea759","webpack:///./index.js","webpack:///external \"angular\"","webpack:///./controllers/authentication_controllers.js","webpack:///./controllers/conversation_controllers.js","webpack:///./controllers/index.js","webpack:///./controllers/message_controllers.js","webpack:///./controllers/misc_controllers.js","webpack:///./controllers/search_controllers.js","webpack:///./controllers/share_controllers.js","webpack:///./controllers/user_controllers.js","webpack:///./directives/index.js","webpack:///./directives/institution_directives.js","webpack:///./directives/label_directives.js","webpack:///./directives/mainview_directives.js","webpack:///./directives/survey_directives.js","webpack:///./directives/user_directives.js","webpack:///./services/authentication_services.js","webpack:///./services/conversation_services.js","webpack:///./services/index.js","webpack:///./services/item_services.js","webpack:///./services/map_services.js","webpack:///./services/message_services.js","webpack:///./services/modal_services.js","webpack:///./services/search_services.js","webpack:///./services/share_services.js","webpack:///./services/stacktrace_services.js","webpack:///./services/statistic_services.js","webpack:///./services/survey_services.js","webpack:///./services/user_services.js","webpack:///./services/utility_services.js"],"names":["modules","__webpack_require__","moduleId","installedModules","exports","module","id","loaded","call","m","c","p","angular","controller","$scope","Authenticator","$routeParams","$location","key","password","repeat_password","successfulReset","failedReset","passwordMethods","resetPassword","promise","then","path","search","message","errorMessage","email","value","successfulRequest","failedRequest","requestResetPassword","msg","confirmed","confirmEmail","user","User","signUp","Messages","$modal","support","accountCreationStatus","is_educator","showModal","newUser","emailRegex","pg","user_type","completeSplash","name","firstName","lastName","userPromise","showTerms","open","templateUrl","showPrivacy","showChoiceText","showEducatorText","showPartnerText","resendEmailConfirmation","emailConfirmPromise","requestConfirmEmail","info","error","Session","nextLocation","undefined","login","authenticateWithEmailAndPassword","activeUser","email_confirmed","combineMessages","baseMessage","specificMessage","Conversation","conversationsPromise","get_many","user_id","conversations","sort","a","b","datetime_last_message","showConversation","conversationId","showThankYou","first","$q","$timeout","Message","Share","makeDialog","conversation","conversation_id","otherUser","newMessage","makeNewMessage","sender_user_id","content","showErrorMessage","refreshConversation","refreshedConversationPromise","get","conversationErrorMessage","refreshShares","refreshedSharesPromise","shares","sortShares","sharesErrorMessage","markMessagesAsViewed","userA","userB","messageHighlightClasses","createNewShare","share","makeShare","editShare","opts","resolve","sortedShares","futureShares","future","pastShares","past","sendMessage","messagePromise","save","sender_user","messages","push","now","Date","reviewEvent","event","confirmShare","cancelShare","title","btns","result","label","cssClass","d","deletePromise","destroy","$modalInstance","userId","searchId","search_id","userA_id","userB_id","cancel","close","startConversation","conversationPromise","closeModal","logout","clean","$http","getStatistics","searchText","tomorrow","setDate","getDate","daysAgo7","daysAgo30","searchForUsers","searchParams","activateEmails","method","url","outputUserData","success","data","status","headers","config","console","log","statisticsPromise","statistics","dateString","date","comp","l","length","statisticsDate","nTotalUsers","n_total_users","nTotalEvents","n_total_events_done","nUpcomingEvents","n_upcoming_events","newUsersIn7Days","eventsIn7Days","i","n_new_users","n_events_done","newUsersIn30Days","eventsIn30Days","j","deleteAccount","Search","labelMapping","labelClasses","gradeLevels","engagementLevels","subjectAreas","infoMessage","goToConversation","searchesPromise","searcher_user_id","searches","compareSearchDate","search1","search2","output","created","gotSomeMatches","page","labels","getMatches","matchesPromise","getResults","show","matches","editProfile","deleteSearch","goToPage","paginationRange","max","pages","min","searcher_role","searchPromise","searching_for_role","zipcode","saveSettings","userSearch","parseyyyyMMdd","users","prevSearchText","start","created_start","stop","created_stop","date_created.greaterthan","date_created.lessthan","search_text","results","addedIds","uniqueUsers","byName","concat","byEmail","compare","aUC","toUpperCase","bUC","newSearch","sharesPromise","shareId","sharePromise","events","updateDateTimes","Evnt","eventsPromise","evnt","Question","questions","questionsPromise","get_many_with_answers","question_type","about_event_id","question","answer","text","makeQuestionRemover","index","indexOf","splice","allPromises","saveAnswerPromises","saveAnswerPromise","communityPartnerViewMethods","onUserUpdate","educatorViewMethods","question_type.in","is_administrator","deleteUser","commonSignupLogic","Answer","institutionMethods","agreeToFollowHomePolicies","question_id","enoughLabelsSelected","cpl","community_partner_profile_search","el","educator_profile_search","enoughSelected","submit","isValid","isEducator","form","submitted","all","isCommunityPartner","showTutorial","$fileUploader","submitAttempted","wants_update_emails","personalSettingsForm","$valid","uploader","uploadAll","validImage","fileUploader","create","scope","defaults","common","filters","item","is_image","type","substring","queue","bind","$rootScope","turnOffLocationChangeHandler","justSaved","onLocationChange","newUrl","$dirty","accountSettingsForm","dirty","relUrl","replace","preventDefault","$on","is_community_partner","properties","settingsTabSet","onError","successMessage","saveUserPromise","combinedPromise","updateFromData","toData","directive","Institution","methods","updateInstitutions","noInstitutions","institution_associations","addNewInstitutionAssociation","institutionsForm","$watch","institutionsPromise","options","institutions","institutionTypes","roles","institution","factory","makeBaseLabels","suggested","other","communityPartnerSuggested","educatorSuggested","allLabels","educatorSuggestedLabels","communityPartnerSuggestedLabels","communityPartnerAndEducatorSuggestedLabels","communityPartnerAndEducatorSuggested","labellists","orderLabels","combinedLabels","LabelDisplay","this","baseLabels","active","prototype","setSelected","setUnselected","toggle","update","onUpdate","link","elm","ENTERCODE","TABCODE","keyCode","$apply","LabelsController","getAllLabels","display","newLabel","labelsPromise","typeaheadSelect","newLabelMethods","splitNames","newLabelName","split","trim","toLowerCase","toggleLabel","onlyShowActive","$inject","gradeLevelsTitle","engagementLevelsTitle","subjectAreasTitle","subjectAreasLabel","transclude","thisLocation","ngModel","today","clear","minDate","maxDate","setFullYear","getFullYear","$event","stopPropagation","opened","dateOptions","formatYear","startingDay","restrict","require","element","on","inputTag","fieldName","attrs","formController","inputTagType","inputElement","find","attr","formScope","makeDirty","field","$setViewValue","$viewValue","answers","custom_answer","CommunityPartnerUtils","getSearches","searchesPromiseToSearchPromise","searchesAsEducator","elem","ctrl","methodName","csParserHook","$parsers","otherValue","csMatch","isMatch","value1","value2","$setValidity","$emit","emitScope","SessionBase","getActiveUserPromise","deferred","clearUser","defer","setUser","updateUnviewedConversations","authenticateFromCookie","$cookies","$cookieStore","Authorization","remove","setApiKey","apiKey","setEmail","getByEmail","reject","promiseApiKey","response","itemFactory","UserBase","fields","_this","make","messageData","date_created","getUnviewedMessages","unviewedMessages","viewed","educator_user_id","community_partner_user_id","description","educator_approved","community_partner_approved","addNewEvent","getUnviewedForUser","with_unviewed_messages","resourceName","Item","itemData","initialize","cache","searchCache","JSON","parse","stringify","clone","makeUrl","forceRefresh","dataPromise","searchHash","items","params","_baseUpdateFromData","geocoder","google","maps","Geocoder","locationFromAddress","address","geocode","GeocoderStatus","OK","geometry","location","Map","elementId","document","getElementById","latlng","LatLng","mapOptions","zoom","center","map","codeAddress","locationPromise","setCenter","setZoom","$log","MESSAGETIME","MessageHolder","errorText","removeMessage","messageText","onClick","returnValue","compareLabels","targetLabels","retrievedLabels","matchingLabels","missingLabels","lcTargetLabels","lcRetrievedLabels","k","lcTargetLabel","comparison","matching","missing","searcher_user","isProfile","resultsPromise","searchAndResultsPromise","responses","baseSearch","resultsResponse","EvntBase","shareData","largest_datetime_start","datetime_start","iAmCommunityPartner","iAmEducator","educator","community_partner","canApprove","approved","hasActiveEvent","hasEvents","share_id","datetime_stop","splitDateTime","datetime","getMonth","time","getHours","getMinutes","combined","combineDateTime","eventId","eventPromise","default_datetime","setHours","eventData","splitstart","time_start","splitstop","time_stop","print","printStackTrace","provider","$get","errorLogService","$window","stacktraceService","exception","cause","apply","arguments","toString","stackTrace","e","$","ajax","contentType","toJson","errorUrl","href","browser","navigator","userAgent","loggingError","warn","answerParams","responder_id","answersPromise","answersByQuestionId","sort_fn","created_date","some_answers","warningMessage","cleanInstitutionAssociations","filteredInstitutionAssociations","institution_association","addInstitutionAssociationRemoveMethod","ia","bio","conversationsWithMe","role","getRecentConversations","oneMonthAgo","conversationParams","messages.date_created.greaterthan","getUpcomingEvents","datetime_start.greaterthan","nUnviewedMessages","thisUser","directToConversation","other_user_id","newConversationOpts","withNewConversation","isIE","version","cc","createElement","docElem","documentElement","innerHTML","appendChild","removeChild","nativePlaceholderSupport","placeholder","filter","end","String","yyyyMMdd","setMonth"],"mappings":"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","file":"bundle.js","sourcesContent":["/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\t__webpack_require__( 4 );\n\t__webpack_require__( 18 );\n\t__webpack_require__( 10 );\n\n\n/***/ },\n/* 1 */\n/***/ function(module, exports) {\n\n\tmodule.exports = angular;\n\n/***/ },\n/* 2 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar angular = __webpack_require__( 1 );\n\t\n\tvar module = angular.module(\n\t'communityshare.controllers.authentication',\n\t[\n\t  'communityshare.services.authentication'\n\t]);\n\t\n\tmodule.controller(\n\t'ResetPasswordController',\n\t[\"$scope\", \"Authenticator\", \"$routeParams\", \"$location\", function($scope, Authenticator, $routeParams, $location) {\n\t  var key = $routeParams.key;\n\t  $scope.password = {\n\t    password: '',\n\t    repeat_password: ''\n\t  };\n\t  $scope.successfulReset = false;\n\t  $scope.failedReset = false;\n\t  // passwordMethods is used for communication between password and\n\t  // password_repeat directives.\n\t  $scope.passwordMethods = {};\n\t  $scope.resetPassword = function() {\n\t    var promise = Authenticator.resetPassword(key, $scope.password.password);\n\t    promise.then(\n\t      function() {\n\t        $location.path('/login').search({});\n\t        $scope.successfulReset = true;\n\t      },\n\t      function(message) {\n\t        $scope.errorMessage = message;\n\t      });\n\t  };\n\t}]);\n\t\n\tmodule.controller(\n\t'RequestResetPasswordController',\n\t[\"$scope\", \"Authenticator\", function($scope, Authenticator) {\n\t  $scope.email = {value: ''};\n\t  $scope.successfulRequest = false;\n\t  $scope.failedRequest = false;\n\t  $scope.requestResetPassword = function() {\n\t    var promise = Authenticator.requestResetPassword($scope.email.value);\n\t    promise.then(\n\t      function() {\n\t        $scope.successfulRequest = true;\n\t        $scope.errorMessage = '';\n\t      },\n\t      function(message) {\n\t        $scope.successfulRequest = false;\n\t        var msg = 'Failed to reset password';\n\t        if (message) {\n\t          if (message === 'Not found') {\n\t            msg += ': ' + 'Unknown email address';\n\t          } else {\n\t            msg += ': ' + message;\n\t          }\n\t        }\n\t        $scope.errorMessage = msg;\n\t      });\n\t  };\n\t}]);\n\t\n\tmodule.controller(\n\t'ConfirmEmailController',\n\t[\"$scope\", \"Authenticator\", \"$routeParams\", function($scope, Authenticator, $routeParams) {\n\t  var key = $routeParams.key;\n\t  $scope.confirmed = false;\n\t  $scope.failedReset = false;\n\t  var promise = Authenticator.confirmEmail(key);\n\t  promise.then(\n\t    function() {\n\t      $scope.confirmed = true;\n\t    },\n\t    function(message) {\n\t      $scope.errorMessage = message;\n\t    });\n\t}]);\n\t\n\tmodule.controller(\n\t'DefaultController',\n\t[\"$scope\", \"user\", \"$location\", \"User\", \"signUp\", \"Messages\", \"$modal\", \"support\", function($scope, user, $location, User, signUp, Messages, $modal, support) {\n\t  $scope.support = support;\n\t  if (user) {\n\t    if (user.accountCreationStatus === 'choice') {\n\t      $location.path('signup/choice');\n\t    } else if (user.accountCreationStatus === 'personal') {\n\t      $location.path('signup/personal');\n\t    } else if (user.is_educator) {\n\t      $location.path('matches');\n\t    } else {\n\t\n\t      $location.path('messages');\n\t    }\n\t  }\n\t\n\t  var showModal = $location.search().showModal;\n\t\n\t  $scope.newUser = new User();\n\t  $scope.emailRegex = /.+@.+\\..+/i;\n\t  $scope.passwordMethods = {};\n\t  $scope.pg = 'default';\n\t  $scope.user_type = {value: ''};\n\t  $scope.completeSplash = function() {\n\t    $scope.newUser.name = $scope.newUser.firstName + ' ' + $scope.newUser.lastName;\n\t    var userPromise = signUp($scope.newUser, $scope.newUser.password);\n\t    userPromise.then(\n\t      function() {\n\t        $scope.errorMessage = '';\n\t        if ($scope.user_type.value === 'communityPartner') {\n\t          $location.path('/signup/communitypartner');\n\t        } else if ($scope.user_type.value === 'educator') {\n\t          $location.path('/signup/educator');\n\t        } else {\n\t          $location.path('signup/choice');\n\t        }\n\t      },\n\t      function(message) {\n\t        $scope.errorMessage = message;\n\t      });\n\t/*        if ($scope.user_type == 'communityPartner') {\n\t      $scope.pg = 'partner1';\n\t      $scope.isCommunityPartner = true;\n\t    } else if ($scope.user_type == 'educator') {\n\t      $scope.pg = 'educator1';\n\t      $scope.isEducator = true;\n\t    }*/\n\t  };\n\t  $scope.showTerms = function() {\n\t    $modal.open({\n\t      templateUrl: './static/templates/terms.html',\n\t      controller: 'ModalController'\n\t    });\n\t  };\n\t  $scope.showPrivacy = function() {\n\t    $modal.open({\n\t      templateUrl: './static/templates/privacy.html',\n\t      controller: 'ModalController'\n\t    });\n\t  };\n\t\n\t  $scope.showChoiceText = function() {\n\t    $modal.open({\n\t      templateUrl: './static/templates/choice_educator_modal.html',\n\t      controller: 'ModalController'\n\t    });\n\t  };\n\t\n\t  $scope.showEducatorText = function() {\n\t    $modal.open({\n\t      templateUrl: './static/templates/choice_educator_modal.html',\n\t      controller: 'ModalController'\n\t    });\n\t  };\n\t\n\t  $scope.showPartnerText = function() {\n\t    $modal.open({\n\t      templateUrl: './static/templates/choice_partner_modal.html',\n\t      controller: 'ModalController'\n\t    });\n\t  };\n\t\n\t  if (showModal == 'terms') {\n\t    $scope.showTerms();\n\t  }\n\t  if (showModal == 'privacy') {\n\t    $scope.showPrivacy();\n\t  }\n\t}]);\n\t\n\tmodule.controller(\n\t'AuthRedirectController',\n\t[\"$scope\", \"Authenticator\", \"Messages\", function ($scope, Authenticator, Messages) {\n\t  $scope.resendEmailConfirmation = function() {\n\t    var emailConfirmPromise = Authenticator.requestConfirmEmail();\n\t    emailConfirmPromise.then(\n\t      function() {\n\t        Messages.info('Sent email confirmation email.');\n\t      },\n\t      function(errorMessage) {\n\t        Messages.error(errorMessage);\n\t      });\n\t  };\n\t}]\n\t);\n\t\n\tmodule.controller(\n\t'LoginController',\n\t[\"Session\", \"$scope\", \"$location\", \"Authenticator\", function(Session, $scope, $location, Authenticator) {\n\t  var nextLocation = $location.search().goto;\n\t  $scope.email = {value: undefined};\n\t  $scope.password = {value: undefined};\n\t  $scope.errorMessage = '';\n\t\n\t  $scope.login = function() {\n\t    var userPromise = Authenticator.authenticateWithEmailAndPassword(\n\t      $scope.email.value, $scope.password.value);\n\t    userPromise.then(\n\t      function() {\n\t\n\t        if (!Session.activeUser.email_confirmed) {\n\t          $location.path(\"/auth_redirect\");\n\t        } else {\n\t          $location.search('goto', null);\n\t          if (nextLocation) {\n\t            $location.path(nextLocation);\n\t          } else {\n\t            $location.path(\"/\");\n\t          }\n\t        }\n\t      },\n\t      function(message) {\n\t        var msg = '';\n\t        if (message) {\n\t          msg = ': ' + message;\n\t        }\n\t        $scope.errorMessage = 'Authentication failed' + msg;\n\t      }\n\t    );\n\t  };\n\t}]);\n\t\n\n\n/***/ },\n/* 3 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar angular = __webpack_require__( 1 );\n\t\n\tvar module = angular.module(\n\t'communityshare.controllers.conversation',\n\t[\n\t  'communityshare.services.authentication',\n\t  'communityshare.services.utility',\n\t  'communityshare.services.conversation'\n\t]);\n\t\n\tvar combineMessages = function(baseMessage, specificMessage) {\n\tvar msg = '';\n\tif (specificMessage) {\n\t  msg = ': ' + specificMessage;\n\t}\n\tvar message = baseMessage + msg;\n\treturn message;\n\t};\n\t\n\tmodule.controller(\n\t'MessagesController',\n\t[\"$scope\", \"Session\", \"Conversation\", \"$location\", \"$modal\", function($scope, Session, Conversation, $location, $modal) {\n\t  $scope.Session = Session;\n\t  var user = Session.activeUser;\n\t  if (user) {\n\t    var conversationsPromise = Conversation.get_many({'user_id': user.id}, true);\n\t    conversationsPromise.then(\n\t      function(conversations) {\n\t        conversations.sort(function(a, b) {\n\t          return a.datetime_last_message < b.datetime_last_message;});\n\t        $scope.conversations = conversations;\n\t      },\n\t      function(errorMessage) {\n\t      });\n\t  }\n\t  $scope.showConversation = function(conversationId) {\n\t    $location.path('/conversation/' + conversationId);\n\t  };\n\t\n\t  $scope.showThankYou = function() {\n\t    $modal.open({\n\t      templateUrl: './static/templates/community_partner_thankyou.html',\n\t      controller: 'ModalController'\n\t    });\n\t  };\n\t\n\t  var showModal = $location.search().first;\n\t  if (showModal) {\n\t    $scope.showThankYou();\n\t  }\n\t}]);\n\t\n\tmodule.controller(\n\t'ConversationController',\n\t[\"$scope\", \"$q\", \"$location\", \"$timeout\", \"$modal\", \"Session\", \"Conversation\", \"Message\", \"User\", \"Share\", \"makeDialog\", \"conversation\", function($scope, $q, $location, $timeout, $modal, Session,\n\t         Conversation, Message, User, Share, makeDialog, conversation) {\n\t  $scope.Session = Session;\n\t  if ((conversation === undefined) || (Session.activeUser === undefined)) {\n\t    return;\n\t  }\n\t\n\t  var sharesPromise = Share.get_many({conversation_id: conversation.id});\n\t  $scope.otherUser = undefined;\n\t  $scope.conversation = conversation;\n\t  $scope.newMessage = undefined;\n\t  var makeNewMessage = function() {\n\t    var newMessage = new Message({\n\t      conversation_id: conversation.id,\n\t      sender_user_id: Session.activeUser.id,\n\t      content: ''\n\t    });\n\t    return newMessage;\n\t  };\n\t  var showErrorMessage = function(message) {\n\t    var baseMessage = 'Failed to load conversation';\n\t    var msg = combineMessages(baseMessage, message);\n\t    $scope.errorMessage = msg;\n\t  };\n\t  var refreshConversation = function() {\n\t    var refreshedConversationPromise = Conversation.get(conversation.id, true);\n\t    refreshedConversationPromise.then(\n\t      function(conversation) {\n\t        $scope.conversation = conversation;\n\t        $timeout(refreshConversation, 5000);\n\t        $scope.conversationErrorMessage = '';\n\t      },\n\t      function(message) {\n\t        var baseMessage = 'Failed to load conversation';\n\t        var msg = combineMessages(baseMessage, message);\n\t        $scope.conversationErrorMessage = msg;\n\t      }\n\t    );\n\t  };\n\t  var refreshShares = function() {\n\t    var refreshedSharesPromise = Share.get_many({conversation_id: conversation.id}, true);\n\t    refreshedSharesPromise.then(\n\t      function(shares) {\n\t        sortShares(shares);\n\t        $scope.shares = shares;\n\t        $timeout(refreshShares, 5000);\n\t        $scope.sharesErrorMessage = '';\n\t      },\n\t      function(message) {\n\t        var baseMessage = 'Failed to load shares';\n\t        var msg = combineMessages(baseMessage, message);\n\t        $scope.sharesErrorMessage = msg;\n\t      }\n\t    );\n\t  };\n\t  conversation.markMessagesAsViewed();\n\t  if (conversation.userA.id === Session.activeUser.id) {\n\t    $scope.otherUser = conversation.userB;\n\t  } else {\n\t    $scope.otherUser = conversation.userA;\n\t  }\n\t  $scope.messageHighlightClasses = {};\n\t  $scope.messageHighlightClasses[Session.activeUser.id] = 'highlight1';\n\t  $scope.messageHighlightClasses[$scope.otherUser.id] = 'highlight2';\n\t  $scope.newMessage = makeNewMessage();\n\t  refreshShares();\n\t  $timeout(refreshConversation, 5000);\n\t  $scope.createNewShare = function() {\n\t    var share = conversation.makeShare();\n\t    $scope.editShare(share);\n\t  };\n\t  $scope.editShare = function(share) {\n\t    var opts = {\n\t      templateUrl: './static/templates/share_edit.html',\n\t      controller: 'EditShareController',\n\t      resolve: {\n\t        share: function() {return share;}\n\t      }\n\t    };\n\t    $modal.open(opts);\n\t  };\n\t  var sortShares = function(shares) {\n\t    var sortedShares = Share.sortShares(shares);\n\t    $scope.futureShares = sortedShares.future;\n\t    $scope.pastShares = sortedShares.past;\n\t  };\n\t  $scope.sendMessage = function() {\n\t    var messagePromise = $scope.newMessage.save();\n\t    messagePromise.then(\n\t      function(message) {\n\t        message.sender_user = Session.activeUser;\n\t        $scope.conversation.messages.push(message);\n\t        $scope.newMessage = makeNewMessage();\n\t      },\n\t      showErrorMessage\n\t    );\n\t  };\n\t  $scope.now = new Date();\n\t  $scope.reviewEvent = function(event) {\n\t    $location.path('/event/' + event.id);\n\t  };\n\t  $scope.confirmShare = function(share) {\n\t    // Saving with no changes acts as an approve.\n\t    share.save();\n\t  };\n\t  $scope.cancelShare = function(share) {\n\t    var title = 'Cancel Share';\n\t    var msg = 'Do you really want to cancel this share with ' +\n\t      $scope.otherUser.name;\n\t    var btns = [{result:'yes', label: 'Yes', cssClass: 'btn-primary'},\n\t                {result:'no', label: 'No'}];\n\t    var d = makeDialog(title, msg, btns);\n\t    d.result.then(\n\t      function(result) {\n\t        if (result === 'yes') {\n\t          // FIXME: Send email to otherUser saying they want to cancel it.\n\t          var deletePromise = share.destroy();\n\t          deletePromise.then(\n\t            function() {\n\t            },\n\t            function(message) {\n\t              var baseMessage = 'Failed to cancel share';\n\t              var msg = combineMessages(baseMessage, message);\n\t              $scope.errorMessage = msg;\n\t            });\n\t        }\n\t      });\n\t  };\n\t}]);\n\t\n\tmodule.controller(\n\t'NewConversationController',\n\t[\"Session\", \"$scope\", \"$modalInstance\", \"userId\", \"searchId\", \"User\", \"Conversation\", \"Message\", \"Authenticator\", \"Messages\", function (Session, $scope, $modalInstance, userId, searchId, User,\n\t          Conversation, Message, Authenticator, Messages) {\n\t  var userPromise = User.get(userId);\n\t  $scope.Session = Session;\n\t  $scope.errorMessage = '';\n\t  if (!Session.activeUser.email_confirmed) {\n\t    // Refresh active User to make sure email is still unconfirmed.\n\t    User.get(Session.activeUser.id, true);\n\t  }\n\t  $scope.conversation = new Conversation({\n\t    title: undefined,\n\t    search_id: searchId,\n\t    userA_id: Session.activeUser.id,\n\t    userB_id: userId\n\t  });\n\t  $scope.resendEmailConfirmation = function() {\n\t    var emailConfirmPromise = Authenticator.requestConfirmEmail();\n\t    emailConfirmPromise.then(\n\t      function() {\n\t        Messages.info('Sent email confirmation email.');\n\t      },\n\t      function(errorMessage) {\n\t        Messages.error(errorMessage);\n\t      });\n\t  };\n\t  $scope.message = new Message({\n\t    conversation_id: undefined,\n\t    sender_user_id: Session.activeUser.id,\n\t    content: undefined\n\t  });\n\t  userPromise.then(\n\t    function(user) {\n\t      $scope.user = user;\n\t    });\n\t  $scope.cancel = function() {\n\t    $modalInstance.close();\n\t  };\n\t  $scope.startConversation = function() {\n\t    var conversationPromise = $scope.conversation.save();\n\t    conversationPromise.then(\n\t      function(conversation) {\n\t        $scope.errorMessage = '';\n\t        $scope.message.conversation_id = conversation.id;\n\t        var messagePromise = $scope.message.save();\n\t        messagePromise.then(\n\t          function() {\n\t            $modalInstance.close(conversation);\n\t          },\n\t          function(message) {\n\t            var baseMessage = 'Failed to save message';\n\t            $scope.errorMessage = combineMessages(baseMessage, message);\n\t          });\n\t      },\n\t      function(message) {\n\t        var baseMessage = 'Failed to save conversation';\n\t        $scope.errorMessage = combineMessages(baseMessage, message);\n\t      });\n\t  };\n\t}]);\n\t\n\n\n/***/ },\n/* 4 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\t__webpack_require__( 2 );\n\t__webpack_require__( 6 );\n\t__webpack_require__( 9 );\n\t__webpack_require__( 7 );\n\t__webpack_require__( 5 );\n\t__webpack_require__( 3 );\n\t__webpack_require__( 8 );\n\n\n/***/ },\n/* 5 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar angular = __webpack_require__( 1 );\n\t\n\tvar module = angular.module('communityshare.controllers.message', ['ngAnimate']);\n\t\n\tmodule.controller(\n\t'MessageController',\n\t[\"$scope\", \"Messages\", function ($scope, Messages) {\n\t  $scope.messages = Messages;\n\t}]);\n\t\n\n\n/***/ },\n/* 6 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar angular = __webpack_require__( 1 );\n\t\n\tvar module = angular.module(\n\t'communityshare.controllers.misc',\n\t[\n\t  'communityshare.services.authentication',\n\t  'communityshare.services.modal',\n\t  'communityshare.services.statistics',\n\t  'communityshare.services.message'\n\t]);\n\t\n\tmodule.controller(\n\t'ModalController',\n\t[\"$scope\", \"$modalInstance\", function($scope, $modalInstance) {\n\t  $scope.closeModal = function() {\n\t    $modalInstance.close();\n\t  };\n\t}]);\n\t\n\tmodule.controller(\n\t'NavigationController',\n\t[\"$scope\", \"Session\", \"Authenticator\", \"$location\", function($scope, Session, Authenticator, $location) {\n\t  $scope.Session = Session;\n\t  $scope.logout = function() {\n\t    Authenticator.clean();\n\t    $location.path('');\n\t  };\n\t}]);\n\t\n\tmodule.controller(\n\t'MainController',\n\t[\"$scope\", \"Session\", function($scope, Session) {\n\t  $scope.Session = Session;\n\t}]);\n\t\n\tmodule.controller(\n\t'AdminController',\n\t[\"Session\", \"$scope\", \"$location\", \"$http\", \"getStatistics\", function(Session, $scope, $location, $http, getStatistics) {\n\t  $scope.Session = Session;\n\t  $scope.searchText = {value: ''};\n\t  $scope.now = new Date();\n\t  $scope.tomorrow = new Date();\n\t  $scope.tomorrow.setDate($scope.tomorrow.getDate()+1);\n\t  $scope.daysAgo7 = new Date();\n\t  $scope.daysAgo7.setDate($scope.daysAgo7.getDate()-6);\n\t  $scope.daysAgo30 = new Date();\n\t  $scope.daysAgo30.setDate($scope.daysAgo7.getDate()-29);\n\t  $scope.searchForUsers = function() {\n\t    var searchParams = {\n\t      'searchText': $scope.searchText.value\n\t    };\n\t    $location.path('/searchusers').search(searchParams);\n\t  };\n\t  $scope.activateEmails = function () {\n\t    $http({\n\t      method: 'POST',\n\t      url: '/api/activate_email'\n\t    })\n\t  };\n\t  $scope.outputUserData = function () {\n\t    $http({\n\t      method: 'GET',\n\t      url: '/api/dump_csv'\n\t    })\n\t    .success(function (data, status, headers, config) {\n\t      console.log(data);\n\t    })\n\t    .error(function (data, status, headers, config) {\n\t      console.log(status);\n\t    })\n\t  };\n\t  var statisticsPromise = getStatistics();\n\t  $scope.statistics = [];\n\t  statisticsPromise.then(function(statistics) {\n\t    for (var dateString in statistics) {\n\t      var date = new Date(dateString);\n\t      statistics[dateString].date = date;\n\t      $scope.statistics.push(statistics[dateString]);\n\t    }\n\t    var comp = function(a, b) {\n\t      if (a.date > b.date) {\n\t        return 1;\n\t      } else if (a.date < b.date) {\n\t        return -1;\n\t      } else {\n\t        return 0;\n\t      }\n\t    };\n\t    $scope.statistics.sort(comp);\n\t    var l = $scope.statistics.length;\n\t    $scope.statisticsDate = $scope.statistics[l-1].date;\n\t    $scope.nTotalUsers = $scope.statistics[l-1].n_total_users;\n\t    $scope.nTotalEvents = $scope.statistics[l-1].n_total_events_done;\n\t    $scope.nUpcomingEvents = $scope.statistics[l-1].n_upcoming_events;\n\t    $scope.newUsersIn7Days = 0;\n\t    $scope.eventsIn7Days = 0;\n\t    for (var i=0; i<7; i++) {\n\t      $scope.newUsersIn7Days += $scope.statistics[l-1-i].n_new_users;\n\t      $scope.eventsIn7Days += $scope.statistics[l-1-i].n_events_done;\n\t    }\n\t    $scope.newUsersIn30Days = $scope.newUsersIn7Days;\n\t    $scope.eventsIn30Days = $scope.eventsIn7Days;\n\t    for (var j=7; j<30; j++) {\n\t      $scope.newUsersIn30Days += $scope.statistics[l-1-j].n_new_users;\n\t      $scope.eventsIn30Days += $scope.statistics[l-1-j].n_events_done;\n\t    }\n\t  });\n\t}]);\n\t\n\tmodule.controller(\n\t'NavbarController',\n\t[\"$scope\", \"Messages\", \"Session\", \"$modal\", \"Authenticator\", \"$location\", \"makeDialog\", function($scope, Messages, Session, $modal, Authenticator, $location,\n\t         makeDialog) {\n\t  $scope.deleteAccount = function() {\n\t    var title = 'Delete Account';\n\t      var msg = 'Do you really want to delete your Community Share account?';\n\t    var btns = [{result:'yes', label: 'Yes'},\n\t                {result:'no', label: 'No', cssClass: 'btn-primary'}];\n\t    var d = makeDialog(title, msg, btns);\n\t    d.result.then(\n\t      function(result) {\n\t        if (result === 'yes') {\n\t          var deletePromise = Session.activeUser.destroy();\n\t          deletePromise.then(\n\t            function() {\n\t              Authenticator.clean();\n\t              $location.path('/');\n\t            },\n\t            function(message) {\n\t                Messages.error(message);\n\t            });\n\t        }\n\t      });\n\t  };\n\t}]);\n\t\n\n\n/***/ },\n/* 7 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar angular = __webpack_require__( 1 );\n\t\n\tvar module = angular.module(\n\t'communityshare.controllers.search',\n\t[\n\t  'communityshare.controllers.conversation'\n\t]);\n\t\n\tmodule.controller(\n\t'MatchesController',\n\t[\"$scope\", \"Session\", \"Search\", \"$location\", \"labelMapping\", \"makeDialog\", \"startConversation\", \"Messages\", \"$modal\", function($scope, Session, Search, $location, labelMapping, makeDialog,\n\t         startConversation, Messages, $modal) {\n\t  $scope.Session = Session;\n\t  $scope.labelMapping = labelMapping;\n\t  $scope.labelClasses = {\n\t    gradeLevels: 'grade-level-button',\n\t    engagementLevels: 'engagement-button',\n\t    subjectAreas: 'subject-area-button',\n\t    undefined: 'subject-area-button'\n\t  };\n\t  var user = Session.activeUser;\n\t  $scope.infoMessage = 'Loading searches...';\n\t  $scope.errorMessage = '';\n\t  $scope.title = '';\n\t  $scope.goToConversation = function(conversation) {\n\t    $location.path('/conversation/' + conversation.id);\n\t  };\n\t\n\t  $scope.showThankYou = function() {\n\t    $modal.open({\n\t      templateUrl: './static/templates/educator_thankyou.html',\n\t      controller: 'ModalController'\n\t    });\n\t  };\n\t\n\t  var showModal = $location.search().first;\n\t  if (showModal) {\n\t    $scope.showThankYou();\n\t  }\n\t\n\t  if (user) {\n\t    var searchesPromise = Search.get_many({'searcher_user_id': user.id}, true);\n\t    searchesPromise.then(\n\t      function(searches) {\n\t        $scope.infoMessage = '';\n\t        $scope.errorMessage = '';\n\t        $scope.searches = searches;\n\t        var compareSearchDate = function(search1, search2) {\n\t          var output = -1;\n\t          if (search1.created === search2.created) {\n\t            output = 0;\n\t          } else if (search1.created < search2.created) {\n\t            output = 1;\n\t          }\n\t          return output;\n\t        };\n\t        $scope.searches.sort(compareSearchDate);\n\t        var gotSomeMatches = false;\n\t        $scope.page = 0;\n\t        var page = $scope.page;\n\t        for (var i=0; i<$scope.searches.length; i++) {\n\t          var search = $scope.searches[i];\n\t          if ((!gotSomeMatches) && (search.labels.length > 0)) {\n\t            $scope.getMatches(search, page);\n\t            gotSomeMatches = true;\n\t          }\n\t        }\n\t      }\n\t    );\n\t  }\n\t  $scope.getMatches = function(search, page) {\n\t    $scope.page = page;\n\t    var matchesPromise = Search.getResults(search.id, page);\n\t    search.show = true;\n\t    search.infoMessage = 'Loading matches...';\n\t    search.errorMessage = '';\n\t    matchesPromise.then(\n\t      function(matches) {\n\t        search.matches = matches;\n\t        search.infoMessage = '';\n\t        search.errorMessage = '';\n\t      },\n\t      function(errorMessage) {\n\t        search.infoMessage = '';\n\t        search.errorMessage = errorMessage;\n\t      });\n\t  };\n\t  $scope.startConversation = startConversation;\n\t  $scope.editProfile = function() {\n\t    $location.path('settings');\n\t  };\n\t  $scope.deleteSearch = function(search) {\n\t    var title = 'Delete Search';\n\t    var msg = 'Do you really want to delete this search?  Others will no longer be able to find you by matching to the contents of this search.';\n\t    var btns = [{result:'yes', label: 'Yes'},\n\t                {result:'no', label: 'No', cssClass: 'btn-primary'}];\n\t    var d = makeDialog(title, msg, btns);\n\t    d.result.then(\n\t      function(result) {\n\t        if (result === 'yes') {\n\t          var deletePromise = search.destroy();\n\t          deletePromise.then(\n\t            function() {\n\t            },\n\t            function(message) {\n\t                Messages.error(message);\n\t            });\n\t        }\n\t      });\n\t  };\n\t  $scope.goToPage = function (search, page) {\n\t    $scope.page = page;\n\t    $scope.getMatches(search, page);\n\t  };\n\t  $scope.paginationRange = function (max) {\n\t    var pages, min, i;\n\t    min = $scope.page;\n\t    pages = [];\n\t\n\t    if (min < 5) {\n\t      min = 0;\n\t      max = 5;\n\t    }\n\t\n\t    if (min >= 5) {\n\t      max = min + 2;\n\t      min -= 2;\n\t    }\n\t\n\t    for (i = min; i <= max; i++) {\n\t      pages.push(i);\n\t    }\n\t    return pages;\n\t  };\n\t}]);\n\t\n\tmodule.controller(\n\t'SearchResultsController',\n\t[\"Session\", \"$scope\", \"$location\", \"$routeParams\", \"$modal\", \"Search\", \"Messages\", \"labelMapping\", function(Session, $scope, $location, $routeParams, $modal, Search, Messages, labelMapping) {\n\t  $scope.Session = Session;\n\t  var searchId = $routeParams.searchId;\n\t  $scope.infoMessage = 'Searching for matches...';\n\t  $scope.errorMessage = '';\n\t  $scope.title = '';\n\t  $scope.goToConversation = function(conversation) {\n\t    $location.path('/conversation/' + conversation.id);\n\t  };\n\t\n\t  $scope.labelClasses = {\n\t    gradeLevels: 'light-yellow-button',\n\t    engagementLevels: 'light-blue-button',\n\t    subjectAreas: 'light-green-button',\n\t    undefined: 'light-green-button'\n\t  };\n\t  $scope.labelMapping = labelMapping;\n\t\n\t  if (searchId !== undefined) {\n\t    var searchesPromise = Search.getResults(searchId);\n\t    searchesPromise.then(\n\t      function(searches) {\n\t        $scope.searches = searches;\n\t        if (searches.length === 0) {\n\t          $scope.infoMessage = 'No matches found.';\n\t        } else {\n\t          $scope.infoMessage = '';\n\t          if (searches[0].searcher_role === 'educator') {\n\t            $scope.title = 'Best Educator Matches';\n\t          } else {\n\t            $scope.title = 'Best Community Partner Matches';\n\t          }\n\t        }\n\t        $scope.errorMessage = '';\n\t      },\n\t      function(message) {\n\t        var msg = '';\n\t        if (message) {\n\t          msg = ': ' + message;\n\t        }\n\t        $scope.errorMessage = 'Failed to find matches' + msg;\n\t      });\n\t  }\n\t}]);\n\t\n\tmodule.controller(\n\t'SearchEditController',\n\t[\"Session\", \"$location\", \"$scope\", \"$routeParams\", \"Search\", \"Messages\", function(Session, $location, $scope, $routeParams, Search, Messages) {\n\t  $scope.Session = Session;\n\t  var searchId = $routeParams.searchId;\n\t  if (searchId !== undefined) {\n\t    var searchPromise = Search.get(searchId);\n\t    searchPromise.then(\n\t      function(search) {\n\t        $scope.search = search;\n\t      },\n\t      function(message) {\n\t        Messages.error(message);\n\t      });\n\t  } else {\n\t    var searcher_role;\n\t    var searching_for_role;\n\t    if (Session.activeUser.is_educator) {\n\t      searcher_role = 'educator';\n\t      searching_for_role = 'partner';\n\t    } else {\n\t      searcher_role = 'partner';\n\t      searching_for_role = 'educator';\n\t    }\n\t    $scope.search = new Search({\n\t      searcher_user_id: Session.activeUser.id,\n\t      searcher_role: searcher_role,\n\t      searching_for_role: searching_for_role,\n\t      zipcode: Session.activeUser.zipcode,\n\t      labels: []\n\t    });\n\t  }\n\t\n\t  $scope.saveSettings = function() {\n\t    var promise = $scope.search.save();\n\t    promise.then(\n\t      function() {\n\t        $location.path('/matches');\n\t      },\n\t      function(message) {\n\t        Messages.error(message);\n\t      });\n\t  };\n\t\n\t  $scope.searchText = {value: ''};\n\t  $scope.userSearch = function() {\n\t    if ($scope.searchText.value) {\n\t      $location.path('/searchusers/' + $scope.searchText.value);\n\t    }\n\t  };\n\t}]);\n\t\n\tmodule.controller(\n\t'SearchUsersController',\n\t[\"$scope\", \"$location\", \"$q\", \"User\", \"Session\", \"$routeParams\", \"parseyyyyMMdd\", \"startConversation\", function($scope, $location, $q, User, Session, $routeParams, parseyyyyMMdd,\n\t         startConversation) {\n\t  $scope.Session = Session;\n\t  $scope.startConversation = startConversation;\n\t  $scope.infoMessage = 'Searching for matching users...';\n\t  $scope.users = undefined;\n\t  $scope.prevSearchText = $routeParams.searchText;\n\t  $scope.searchText = {value: $routeParams.searchText};\n\t  var start = $routeParams.created_start;\n\t  if (start) {\n\t    start = parseyyyyMMdd(start);\n\t  }\n\t  var stop = $routeParams.created_stop;\n\t  if (stop) {\n\t    stop = parseyyyyMMdd(stop);\n\t  }\n\t  $scope.start = start;\n\t  $scope.stop = stop;\n\t  var searchForUsers = function() {\n\t    var searchParams = {\n\t      'date_created.greaterthan': start,\n\t      'date_created.lessthan': stop,\n\t      'search_text': $routeParams.searchText\n\t    };\n\t    var searchPromise = User.search(searchParams);\n\t    searchPromise.then(\n\t      function(results) {\n\t        var addedIds = {};\n\t        var uniqueUsers = [];\n\t        var users;\n\t        if (results.byName === undefined) {\n\t          users = results;\n\t        } else {\n\t          users = results.byName.concat(results.byEmail);\n\t        }\n\t        for (var i=0; i<users.length; i++) {\n\t          var user = users[i];\n\t          if (!(user.id in addedIds)) {\n\t            uniqueUsers.push(user);\n\t            addedIds[user.id] = true;\n\t          }\n\t        }\n\t        var compare = function(a, b) {\n\t          var aUC = a.name.toUpperCase();\n\t          var bUC = b.name.toUpperCase();\n\t          if (aUC > bUC) {\n\t            return 1;\n\t          } else if (aUC < bUC) {\n\t            return -1;\n\t          } else {\n\t            return 0;\n\t          }\n\t        };\n\t        uniqueUsers.sort(compare);\n\t        $scope.users = uniqueUsers;\n\t        $scope.infoMessage = '';\n\t        $scope.errorMessage = '';\n\t      },\n\t      function(message) {\n\t        var msg = '';\n\t        if (message) {\n\t          msg = ': ' + message;\n\t        }\n\t        $scope.errorMessage = 'Failed to load users' + msg;\n\t        $scope.infoMessage = '';\n\t      });\n\t  };\n\t  searchForUsers();\n\t  $scope.newSearch = function() {\n\t    $location.path('/searchusers/' + $scope.searchText.value);\n\t  };\n\t}]);\n\t\n\n\n/***/ },\n/* 8 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar angular = __webpack_require__( 1 );\n\t\n\tvar module = angular.module(\n\t'communityshare.controllers.share',\n\t[\n\t  'communityshare.services.share',\n\t  'communityshare.services.conversation'\n\t]);\n\t\n\tmodule.controller(\n\t'SharesController',\n\t[\"Session\", \"$scope\", \"Share\", \"startConversation\", function(Session, $scope, Share, startConversation) {\n\t  $scope.Session = Session;\n\t  $scope.startConversation = startConversation;\n\t  if ($scope.Session.activeUser) {\n\t    var sharesPromise = Share.get_many({'user_id': Session.activeUser.id}, true);\n\t    $scope.errorMessage = '';\n\t    $scope.infoMessage = 'Loading shares...';\n\t    sharesPromise.then(\n\t      function(shares) {\n\t        $scope.errorMessage = '';\n\t        $scope.infoMessage = '';\n\t        $scope.shares = shares;\n\t        var sortedShares = Share.sortShares(shares);\n\t        $scope.futureShares = sortedShares.future;\n\t        $scope.pastShares = sortedShares.past;\n\t      },\n\t      function(errorMessage) {\n\t        $scope.errorMessage = errorMessage;\n\t      });\n\t  }\n\t}]);\n\t\n\tmodule.controller(\n\t'ShareController',\n\t[\"Session\", \"$scope\", \"$routeParams\", \"Share\", function(Session, $scope, $routeParams, Share) {\n\t  $scope.Session = Session;\n\t  var shareId = $routeParams.shareId;\n\t  if (shareId !== undefined) {\n\t    var sharePromise = Share.get(shareId);\n\t    sharePromise.then(\n\t      function(share) {\n\t        $scope.share = share;\n\t      },\n\t      function(message) {\n\t        var msg = 'Failed to load share';\n\t        if (message) {\n\t          msg += ': ' + message;\n\t        }\n\t        $scope.errorMessage = msg;\n\t      });\n\t  }\n\t}]);\n\t\n\t\n\tmodule.controller(\n\t'EditShareController',\n\t[\"$scope\", \"share\", \"$modalInstance\", function($scope, share, $modalInstance) {\n\t  $scope.share = share;\n\t  $scope.events = share.events;\n\t  $scope.cancel = $modalInstance.close;\n\t  var showErrorMessage = function(message) {\n\t    var msg = 'Failed to save share details';\n\t    if (message) {\n\t      msg += ': ' + message;\n\t    }\n\t    $scope.errorMessage = msg;\n\t  };\n\t  var close = function() {\n\t    $modalInstance.close($scope.share);\n\t  };\n\t  $scope.save = function() {\n\t    for (var i=0; i<$scope.share.events.length; i++) {\n\t      $scope.share.events[i].updateDateTimes();\n\t    }\n\t    var sharePromise = $scope.share.save();\n\t    sharePromise.then(\n\t      close,\n\t      showErrorMessage);\n\t  };\n\t}]);\n\t\n\tmodule.controller(\n\t'EventsController',\n\t[\"$scope\", \"$routeParams\", \"Session\", \"Evnt\", \"parseyyyyMMdd\", function($scope, $routeParams, Session, Evnt, parseyyyyMMdd) {\n\t  $scope.Session = Session;\n\t  var searchParams = {};\n\t  var start = $routeParams.start;\n\t  if (start) {\n\t    start = parseyyyyMMdd(start);\n\t    searchParams['datetime_start.greaterthan'] = start;\n\t  }\n\t  var stop = $routeParams.stop;\n\t  if (stop) {\n\t    stop = parseyyyyMMdd(stop);\n\t    searchParams['datetime_start.lessthan'] = stop;\n\t  }\n\t  $scope.start = start;\n\t  $scope.stop = stop;\n\t  var eventsPromise = Evnt.get_many(searchParams);\n\t  $scope.infoMessage = 'Loading events...';\n\t  $scope.errorMessage = '';\n\t  eventsPromise.then(\n\t    function(events) {\n\t      $scope.events = events;\n\t      $scope.infoMessage = '';\n\t      $scope.errorMessage = '';\n\t    },\n\t    function(message) {\n\t      $scope.events = [];\n\t      $scope.infoMessage = '';\n\t      var msg = 'Failed to load events';\n\t      if (message) {\n\t        msg += ': ' + message;\n\t      }\n\t      $scope.errorMessage = msg;\n\t    });\n\t}]);\n\t\n\tmodule.controller(\n\t'EventController',\n\t[\"$scope\", \"Session\", \"evnt\", \"Question\", function($scope, Session, evnt, Question) {\n\t  $scope.Session = Session;\n\t  $scope.evnt = evnt;\n\t  $scope.questions = [];\n\t  var questionsPromise = Question.get_many_with_answers(\n\t    Session.activeUser.id,\n\t    {question_type: 'post_event'},\n\t    {about_event_id: evnt.id}\n\t  );\n\t  questionsPromise.then(\n\t    function(questions) {\n\t      $scope.questions = [];\n\t      // We only show the unanswered questions.\n\t      for (var i=0; i<questions.length; i++) {\n\t        var question = questions[i];\n\t        if (!question.answer.text) {\n\t          question.answer.about_event_id = evnt.id;\n\t          $scope.questions.push(question);\n\t        }\n\t      }\n\t    });\n\t  $scope.questions = [];\n\t  var makeQuestionRemover = function(question) {\n\t    return function() {\n\t      var index = $scope.questions.indexOf(question);\n\t      if (index >= 0) {\n\t        $scope.questions.splice(index, 1);\n\t      }\n\t    };\n\t  };\n\t  $scope.save = function() {\n\t    var allPromises = [];\n\t    var saveAnswerPromises = [];\n\t    for (var i=0; i<$scope.questions.length; i++) {\n\t      var question = $scope.questions[i];\n\t      var answer = question.answer;\n\t      if (answer.text) {\n\t        var saveAnswerPromise = answer.save();\n\t        saveAnswerPromise.then(\n\t          // Wrapping function since it is in a loop.\n\t          makeQuestionRemover(question)\n\t        );\n\t        saveAnswerPromises.push(saveAnswerPromise);\n\t        allPromises.push(saveAnswerPromise);\n\t      }\n\t    }\n\t  };\n\t}]);\n\t\n\n\n/***/ },\n/* 9 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar angular = __webpack_require__( 1 );\n\t\n\tvar module = angular.module(\n\t'communityshare.controllers.user',\n\t[\n\t  'communityshare.services.user',\n\t  'communityshare.directives.user',\n\t  'communityshare.directives.institutions',\n\t  'angularFileUpload'\n\t]);\n\t\n\t// User Views\n\t\n\tmodule.controller(\n\t'UserController',\n\t[\"$scope\", \"$routeParams\", \"User\", \"Session\", \"Question\", \"Conversation\", \"Evnt\", \"startConversation\", \"makeDialog\", function($scope, $routeParams, User, Session, Question, Conversation,\n\t         Evnt, startConversation, makeDialog) {\n\t  $scope.Session = Session;\n\t  var userId = $routeParams.userId;\n\t  var userPromise = User.get(userId);\n\t  $scope.message = 'Loading user...';\n\t  $scope.startConversation = startConversation;\n\t  userPromise.then(\n\t    function(user) {\n\t      $scope.message = '';\n\t      $scope.user = user;\n\t      if ($scope.communityPartnerViewMethods.onUserUpdate) {\n\t        $scope.communityPartnerViewMethods.onUserUpdate(user);\n\t      }\n\t      if ($scope.educatorViewMethods.onUserUpdate) {\n\t        $scope.educatorViewMethods.onUserUpdate(user);\n\t      }\n\t    },\n\t    function() {\n\t      $scope.message = 'Could not find user with id=' + userId;\n\t    });\n\t  $scope.communityPartnerViewMethods = {};\n\t  $scope.educatorViewMethods = {};\n\t  var questionsPromise = Question.get_many_with_answers(\n\t    userId,\n\t    {'question_type.in': ['signup_community_partner', 'signup', 'signup_educator']}\n\t  );\n\t  if ($scope.Session.activeUser && $scope.Session.activeUser.is_administrator) {\n\t    var conversationsPromise = Conversation.get_many({user_id: userId});\n\t    conversationsPromise.then(\n\t      function(conversations) {\n\t        $scope.conversations = conversations;\n\t      });\n\t    var eventsPromise = Evnt.get_many({user_id: userId});\n\t    eventsPromise.then(\n\t      function(events) {\n\t        $scope.events = events;\n\t      });\n\t  }\n\t  questionsPromise.then(\n\t    function(questions) {\n\t      $scope.questions = [];\n\t      for (var i=0; i<questions.length; i++) {\n\t        var question = questions[i];\n\t        if (question.answer.text) {\n\t          $scope.questions.push(question);\n\t        }\n\t      }\n\t    });\n\t\n\t  $scope.deleteUser = function() {\n\t    var title = 'Delete User';\n\t    var msg = 'Do you really want to delete the account of \"' + $scope.user.name + '\"?';\n\t    var btns = [{result:'yes', label: 'Yes'},\n\t                {result:'no', label: 'No', cssClass: 'btn-primary'}];\n\t    var d = makeDialog(title, msg, btns);\n\t    d.result.then(\n\t      function(result) {\n\t        if (result === 'yes') {\n\t          var deletePromise = $scope.user.destroy();\n\t          deletePromise.then(\n\t            function() {\n\t            },\n\t            function(message) {\n\t                Messages.error(message);\n\t            });\n\t        }\n\t      });\n\t  };\n\t}]);\n\t\n\t// User Signups\n\t\n\tvar commonSignupLogic = function($scope, user, search, Messages, $location,\n\t                               $q, Question, Answer, support) {\n\t$scope.user = user;\n\t$scope.support = support;\n\t$scope.search = search;\n\t$scope.institutionMethods = {};\n\t$scope.agreeToFollowHomePolicies = {\n\t  value: false\n\t};\n\t\n\t// Get questions to display during signup.\n\t$scope.questions = [];\n\tvar questionsPromise = Question.get_many({\n\t  'question_type.in': ['signup_community_partner', 'signup', 'signup_educator']\n\t});\n\tquestionsPromise.then(\n\t  function(questions) {\n\t    $scope.questions = questions;\n\t    for (var i=0; i<$scope.questions.length; i++) {\n\t      var question = $scope.questions[i];\n\t      question.answer = new Answer({question_id: question.id});\n\t    }\n\t  });\n\t$scope.enoughLabelsSelected = function() {\n\t  var cpl = user.community_partner_profile_search.labels;\n\t  var el = user.educator_profile_search.labels;\n\t  var enoughSelected = ((cpl.length > 0) || (el.length > 0));\n\t  return enoughSelected;\n\t};\n\t$scope.submit = function() {\n\t  if ($scope.enoughLabelsSelected() && ($scope.institutionMethods.isValid())\n\t      && (($scope.agreeToFollowHomePolicies.value) || (!isEducator))) {\n\t    $scope.institutionMethods.form.submitted = true;\n\t    $scope.submitted = true;\n\t    var isEducator = false;\n\t    if ((user.educator_profile_search) && (user.educator_profile_search.labels) &&\n\t        (user.educator_profile_search.labels.length > 0)) {\n\t      isEducator = true;\n\t    }\n\t    // Save changes made to user.\n\t    var userPromise = user.save();\n\t    var allPromises = [userPromise];\n\t    // And save the answers to questions.\n\t    for (var i=0; i<$scope.questions.length; i++) {\n\t      var question = $scope.questions[i];\n\t      if (question.answer.text) {\n\t        allPromises.push(question.answer.save());\n\t      }\n\t    }\n\t    $q.all(allPromises).then(\n\t      function() {\n\t        $location.path('/signup/personal');\n\t      },\n\t      function(message) {\n\t        Messages.error(message);\n\t      });\n\t  }\n\t};\n\t};\n\t\n\tmodule.controller(\n\t'SignupCommunityPartnerController',\n\t[\"$scope\", \"Session\", \"Messages\", \"$location\", \"$q\", \"Search\", \"Question\", \"Answer\", \"$modal\", function($scope, Session, Messages, $location, $q, Search,\n\t         Question, Answer, $modal) {\n\t  $scope.Session = Session;\n\t  var user = Session.activeUser;\n\t  var search;\n\t  if (user) {\n\t    search = user.community_partner_profile_search;\n\t  }\n\t  $scope.isCommunityPartner = true;\n\t  // Signup logic common to Community Partners and Educators\n\t  commonSignupLogic($scope, user, search, Messages, $location, $q,\n\t                   Question, Answer);\n\t  $scope.showTutorial = function() {\n\t    $modal.open({\n\t      templateUrl: './static/templates/community_partner_tutorial.html',\n\t      controller: 'ModalController'\n\t    });\n\t  };\n\t  $scope.showTutorial();\n\t}]);\n\t\n\tmodule.controller(\n\t'SignupPersonalController',\n\t[\"$scope\", \"Session\", \"$fileUploader\", \"$http\", \"$location\", \"support\", function($scope, Session, $fileUploader, $http, $location, support) {\n\t  $scope.support = support;\n\t  $scope.Session = Session;\n\t  $scope.user = Session.activeUser;\n\t  $scope.submitAttempted = false;\n\t  if (Session.activeUser) {\n\t    $scope.user.wants_update_emails = true;\n\t    $scope.submit = function(personalSettingsForm) {\n\t      $scope.submitAttempted = true;\n\t      if (personalSettingsForm.$valid) {\n\t        if (uploader) {\n\t          uploader.uploadAll();\n\t        }\n\t        var userPromise = $scope.user.save();\n\t        userPromise.then(\n\t          function() {\n\t            $location.path('/');\n\t            $location.search('first');\n\t          },\n\t          function(errorMessage) {\n\t            $scope.errorMessage = errorMessage;\n\t          });\n\t      }\n\t    };\n\t    $scope.validImage = true;\n\t\n\t    if (support.fileUploader) {\n\t      var uploader = $scope.uploader = $fileUploader.create({\n\t        scope: $scope,\n\t        url: '/api/user/'+$scope.user.id+'/picture',\n\t        headers: $http.defaults.headers.common,\n\t        filters: [\n\t          function (item) {\n\t            var is_image = (item.type.substring(0, 5) === 'image');\n\t            $scope.validImage = is_image;\n\t            uploader.queue.splice(0, uploader.queue.length);\n\t            return is_image;\n\t          }\n\t        ]\n\t      });\n\t\n\t      // Make sure we only have one file in the uploader queue\n\t      uploader.bind('afteraddingfile', function () {\n\t        if (uploader.queue.length > 1) {\n\t          uploader.queue.splice(0, uploader.queue.length-1);\n\t        }\n\t      });\n\t    }\n\t\n\t  }\n\t}]);\n\t\n\tmodule.controller(\n\t'SignupEducatorController',\n\t[\"$scope\", \"Session\", \"Messages\", \"$location\", \"$q\", \"Search\", \"Question\", \"Answer\", \"$modal\", function($scope, Session, Messages, $location, $q, Search,\n\t        Question, Answer, $modal) {\n\t  $scope.Session = Session;\n\t  var user = Session.activeUser;\n\t  var search;\n\t  if (user) {\n\t    search = user.educator_profile_search;\n\t  }\n\t  $scope.isEducator = true;\n\t  $scope.questions = [];\n\t  // Signup logic common to Community Partners and Educators\n\t  commonSignupLogic($scope, user, search, Messages, $location, $q,\n\t                   Question, Answer);\n\t  $scope.showTutorial = function() {\n\t    $modal.open({\n\t      templateUrl: './static/templates/educator_tutorial.html',\n\t      controller: 'ModalController'\n\t    });\n\t  };\n\t  $scope.showTutorial();\n\t}]);\n\t\n\t// Settings Controller\n\t\n\tmodule.controller(\n\t'SettingsController',\n\t[\"$scope\", \"$location\", \"Session\", \"Messages\", \"$q\", \"Question\", \"Answer\", \"$fileUploader\", \"$http\", \"makeDialog\", \"Authenticator\", \"$rootScope\", \"support\", function($scope, $location, Session, Messages, $q,\n\t         Question, Answer, $fileUploader, $http, makeDialog, Authenticator, $rootScope,\n\t         support) {\n\t  $scope.support = support;\n\t\n\t  var justSaved = false;\n\t  var turnOffLocationChangeHandler;\n\t  $scope.institutionMethods = {};\n\t\n\t  var onLocationChange = function(event, newUrl) {\n\t    if (!justSaved && (($scope.personalSettingsForm && $scope.personalSettingsForm.$dirty) ||\n\t        ($scope.accountSettingsForm && $scope.accountSettingsForm.$dirty) ||\n\t        ($scope.user.community_partner_profile_search &&\n\t         $scope.user.community_partner_profile_search.dirty) ||\n\t        ($scope.user.educator_profile_search &&\n\t         $scope.user.educator_profile_search.dirty)))\n\t    {\n\t      var title = 'Changes not Saved';\n\t      var msg = 'Do you really want to leave this page without saving your changes?';\n\t      var btns = [{result:'yes', label: 'Yes'},\n\t                  {result:'no', label: 'No', cssClass: 'btn-primary'}];\n\t      var d = makeDialog(title, msg, btns);\n\t      d.result.then(\n\t        function(result) {\n\t          if (result === 'yes') {\n\t            turnOffLocationChangeHandler();\n\t            var relUrl = newUrl.replace(/^.*\\#/, \"\");\n\t            $location.path(relUrl);\n\t          }\n\t        });\n\t      event.preventDefault();\n\t    }\n\t  };\n\t\n\t  turnOffLocationChangeHandler = $rootScope.$on('$locationChangeStart', onLocationChange);\n\t\n\t  $scope.Session = Session;\n\t  if (!Session.activeUser) {\n\t    return;\n\t  }\n\t  $scope.user = Session.activeUser;\n\t  $scope.isCommunityPartner = $scope.user.is_community_partner;\n\t  $scope.isEducator = $scope.user.is_educator;\n\t  $scope.properties = {};\n\t  $scope.settingsTabSet = {};\n\t  // passwordMethods hooks up the password matching directives.\n\t  $scope.passwordMethods = {};\n\t  // Get the questions\n\t  if ($scope.user) {\n\t    var questionsPromise = Question.get_many_with_answers(\n\t      $scope.user.id,\n\t      {'question_type.in': ['signup_community_partner', 'signup_educator']}\n\t    );\n\t    questionsPromise.then(\n\t      function(questions) {\n\t        $scope.questions = questions;\n\t      });\n\t  }\n\t\n\t  $scope.$on('personalSettingsForm', function(event, value) {\n\t    $scope.personalSettingsForm = value.personalSettingsForm;\n\t  });\n\t  $scope.$on('accountSettingsForm', function(event, value) {\n\t    $scope.accountSettingsForm = value.accountSettingsForm;\n\t  });\n\t\n\t  var onError = function(message) {\n\t    var msg = 'Failed to update settings';\n\t    if (message) {\n\t      msg += ': ' + message;\n\t    }\n\t    $scope.errorMessage = msg;\n\t    $scope.successMessage = '';\n\t  };\n\t\n\t  if (support.fileUploader) {\n\t    $scope.validImage = true;\n\t    var uploader = $scope.uploader = $fileUploader.create({\n\t      scope: $scope,\n\t      url: '/api/user/'+$scope.user.id+'/picture',\n\t      headers: $http.defaults.headers.common,\n\t      filters: [\n\t        function (item) {\n\t          var is_image = (item.type.substring(0, 5) === 'image');\n\t          $scope.validImage = is_image;\n\t          uploader.queue.splice(0, uploader.queue.length);\n\t          return is_image;\n\t        }\n\t      ]\n\t    });\n\t\n\t    // Make sure we only have one file in the uploader queue\n\t    uploader.bind('afteraddingfile', function () {\n\t      if (uploader.queue.length > 1) {\n\t        uploader.queue.splice(0, uploader.queue.length-1);\n\t      }\n\t    });\n\t  }\n\t\n\t  $scope.resendEmailConfirmation = function() {\n\t    var emailConfirmPromise = Authenticator.requestConfirmEmail();\n\t    emailConfirmPromise.then(\n\t      function() {\n\t        Messages.info('Sent email confirmation email.');\n\t      },\n\t      function(errorMessage) {\n\t        Messages.error(errorMessage);\n\t      });\n\t  };\n\t\n\t  $scope.save = function() {\n\t    var saveUserPromise = $scope.user.save();\n\t    if (uploader) {\n\t      uploader.uploadAll();\n\t    }\n\t    var allPromises = [saveUserPromise];\n\t    if ($scope.questions) {\n\t      var saveAnswerPromises = [];\n\t      for (var i=0; i<$scope.questions.length; i++) {\n\t        var answer = $scope.questions[i].answer;\n\t        if (answer.text) {\n\t          var saveAnswerPromise = answer.save();\n\t          saveAnswerPromises.push(saveAnswerPromise);\n\t          allPromises.push(saveAnswerPromise);\n\t        }\n\t      }\n\t    }\n\t    var combinedPromise = $q.all(allPromises);\n\t    saveUserPromise.then(\n\t      function(user) {\n\t        Session.activeUser.updateFromData(user.toData());\n\t      },\n\t      onError);\n\t    combinedPromise.then(\n\t      function() {\n\t        justSaved = true;\n\t        $location.path('/');\n\t      });\n\t  };\n\t\n\t}]);\n\t\n\n\n/***/ },\n/* 10 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\t__webpack_require__( 13 );\n\t__webpack_require__( 15 );\n\t__webpack_require__( 12 );\n\t__webpack_require__( 11 );\n\t__webpack_require__( 14 );\n\t\n\n\n/***/ },\n/* 11 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar angular = __webpack_require__( 1 );\n\t\n\tvar module = angular.module('communityshare.directives.institutions', [\n\t'communityshare.services.user'\n\t]);\n\t\n\tmodule.directive(\n\t'csInstitutions',\n\t [\"Session\", \"Institution\", function(Session, Institution) {\n\t   return {\n\t     scope: {\n\t       user: '=',\n\t       methods: '=',\n\t       isEducator: '@',\n\t       isCommunityPartner: '@'\n\t     },\n\t     templateUrl: './static/templates/institution_adder.html',\n\t     controller: [\"$scope\", function($scope) {\n\t       $scope.isEducator = ($scope.isEducator === 'true');\n\t       $scope.isCommunityPartner = ($scope.isCommunityPartner === 'true');\n\t       $scope.updateInstitutions = function() {\n\t         if ($scope.noInstitutions) {\n\t           $scope.user.institution_associations = [];\n\t           $scope.user.addNewInstitutionAssociation();\n\t           $scope.institutionsForm.submitted = false;\n\t         }\n\t       };\n\t       $scope.$watch('institutionsForm', function() {\n\t         $scope.methods.form = $scope.institutionsForm;\n\t       });\n\t       $scope.methods.isValid = function() {\n\t         return $scope.institutionsForm.$valid || $scope.noInstitutions;\n\t       };\n\t       // FIXME: Not scaleable.  Change to get the most popular.\n\t       var institutionsPromise = Institution.get_many();\n\t       $scope.options = {institutions: [],\n\t                         institutionTypes: []\n\t                        };\n\t       if ($scope.isCommunityPartner) {\n\t         $scope.institutionTypes = [\n\t           'Corporation', 'Freelancer', 'Nonprofit', 'Academic',\n\t           'Government', 'Other'\n\t           ];\n\t         $scope.roles = [];\n\t       } else if ($scope.isEducator) {\n\t         $scope.institutionTypes = [\n\t           'Public District School',\n\t           'Public Charter',\n\t           'Private School',\n\t           'Home School',\n\t           'Higher Education',\n\t           'Nonprofit',\n\t           'After School Program',\n\t           'Other'\n\t         ];\n\t        $scope.roles = [\n\t          'Classroom teacher',\n\t          'Curriculum Coordinator',\n\t          'Administator',\n\t          'Parent',\n\t          'Other'\n\t        ];\n\t       }\n\t       if ($scope.user.institution_associations.length === 0) {\n\t         $scope.user.institution_associations.push({institution: {}});\n\t       }\n\t       institutionsPromise.then(\n\t         function(institutions) {\n\t           $scope.institutions = institutions;\n\t         });\n\t     }]\n\t   };\n\t }]);\n\t\n\tmodule.directive(\n\t'csInstitutionAssociationEdit',\n\tfunction() {\n\t  return {\n\t    templateUrl: 'static/templates/institution_association.html',\n\t    controller: [\"$scope\", function($scope) {\n\t      $scope.$watch('institutionsForm.submitted', function() {\n\t        if ($scope.institutionsForm) {\n\t          $scope.submitted = $scope.institutionsForm.submitted;\n\t        }\n\t      });\n\t    }]\n\t  };\n\t});\n\t\n\n\n/***/ },\n/* 12 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar angular = __webpack_require__( 1 );\n\t\n\tvar module = angular.module('communityshare.directives.labels', [\n\t'communityshare.services.search'\n\t]);\n\t\n\tmodule.factory(\n\t'makeBaseLabels',\n\tfunction() {\n\t  var makeBaseLabels = function() {\n\t    var labels = {\n\t      // Grade levels\n\t      gradeLevels: {\n\t        suggested: ['K-5', '6-8', '9-12', 'College', 'Adult'] ,\n\t        other: ['K-3', '4-5', '6-8', '9-12', 'Preschool']\n\t      },\n\t      subjectAreas: {\n\t        communityPartnerSuggested: [\n\t          'Science', 'Technology', 'Engineering', 'Math',\n\t          'Visual Arts', 'Digital Media', 'Wildlife Biology',\n\t          'English/Literature', 'Performing Arts', 'History',\n\t          'PE/Sports', 'Foreign Languages', 'Government',\n\t          'Health', 'Journalism', 'Culinary Arts',\n\t          'Entrepreneurship'\n\t        ],\n\t        educatorSuggested: [\n\t          'Science', 'Technology', 'Engineering', 'Math',\n\t          'Visual Arts', 'Digital Media', 'Wildlife Biology',\n\t          'English/Literature', 'Performing Arts', 'History',\n\t          'PE/Sports', 'Foreign Languages', 'Government',\n\t          'Health', 'Journalism', 'Culinary Arts',\n\t          'Entrepreneurship'\n\t        ],\n\t        other: []\n\t      },\n\t      // Level of Engagement\n\t      engagementLevels: {\n\t        suggested: [\n\t          'Guest Speaker', 'Host Field Trip', 'Judge Student Competition',\n\t          'Participate in Career Day', 'Collaborate on a Class Project',\n\t          'Mentor Students', 'Brainstorm Curriculum Ideas with Educator',\n\t          'Hands-On Demonstration'\n\t        ],\n\t        other: [\n\t        ]\n\t      }\n\t    };\n\t\n\t    var allLabels = {\n\t      gradeLevels: labels.gradeLevels.suggested.concat(\n\t        labels.gradeLevels.other),\n\t      engagementLevels: labels.engagementLevels.suggested.concat(\n\t        labels.engagementLevels.other),\n\t      subjectAreas: labels.subjectAreas.communityPartnerSuggested.concat(\n\t        labels.subjectAreas.educatorSuggested).concat(\n\t          labels.subjectAreas.other)\n\t    };\n\t    var educatorSuggestedLabels = {\n\t      gradeLevels: labels.gradeLevels.suggested,\n\t      engagementLevels: labels.engagementLevels.suggested,\n\t      subjectAreas: labels.subjectAreas.educatorSuggested\n\t    };\n\t    var communityPartnerSuggestedLabels = {\n\t      gradeLevels: labels.gradeLevels.suggested,\n\t      engagementLevels: labels.engagementLevels.suggested,\n\t      subjectAreas: labels.subjectAreas.communityPartnerSuggested\n\t    };\n\t    var communityPartnerAndEducatorSuggestedLabels = {\n\t      gradeLevels: labels.gradeLevels.suggested,\n\t      engagementLevels: labels.engagementLevels.suggested,\n\t      subjectAreas: labels.subjectAreas.communityPartnerSuggested.concat(\n\t        labels.subjectAreas.educatorSuggested)\n\t    };\n\t\n\t\n\t    return {'educatorSuggested': educatorSuggestedLabels,\n\t            'communityPartnerSuggested': communityPartnerSuggestedLabels,\n\t            'communityPartnerAndEducatorSuggested': communityPartnerAndEducatorSuggestedLabels,\n\t            'all': allLabels};\n\t  };\n\t\n\t  return makeBaseLabels;\n\t});\n\t\n\tmodule.factory(\n\t'labelMapping',\n\t[\"makeBaseLabels\", function(makeBaseLabels) {\n\t  var labellists = makeBaseLabels().all;\n\t  var labelMapping = {};\n\t  for (var key in labellists) {\n\t    for (var i=0; i<labellists[key].length; i++) {\n\t      var label = labellists[key][i];\n\t      labelMapping[label] = key;\n\t    }\n\t  }\n\t  return labelMapping;\n\t}]);\n\t\n\tmodule.factory(\n\t'orderLabels',\n\t[\"labelMapping\", function(labelMapping) {\n\t  var orderLabels = function(labels) {\n\t    var gradeLevels = [];\n\t    var subjectAreas = [];\n\t    var engagementLevels = [];\n\t    for (var i=0; i<labels.length; i++) {\n\t      var label = labels[i];\n\t      if (labelMapping[label] === 'gradeLevels') {\n\t        gradeLevels.push(label);\n\t      } else if (labelMapping[label] == 'engagementLevels') {\n\t        engagementLevels.push(label);\n\t      } else {\n\t        subjectAreas.push(label);\n\t      }\n\t    }\n\t    var combinedLabels = gradeLevels.concat(subjectAreas).concat(engagementLevels);\n\t    return combinedLabels;\n\t  };\n\t  return orderLabels;\n\t}]);\n\t\n\tmodule.factory(\n\t'LabelDisplay',\n\t[\"makeBaseLabels\", \"labelMapping\", function(makeBaseLabels, labelMapping) {\n\t  var LabelDisplay = function(search, type) {\n\t    this.search = search;\n\t    var baseLabels = makeBaseLabels();\n\t    this.all = {};\n\t    this.active = {};\n\t    if (type === 'educator') {\n\t      this.all = baseLabels.educatorSuggested;\n\t    } else {\n\t      this.all = baseLabels.communityPartnerSuggested;\n\t    }\n\t    for (var i=0; i<search.labels.length; i++) {\n\t      var label = search.labels[i];\n\t      this.active[label] = true;\n\t      var key = labelMapping[label];\n\t      if (key === undefined) {\n\t        key = 'subjectAreas';\n\t        this.all[key].push(label);\n\t      }\n\t    }\n\t  };\n\t  LabelDisplay.prototype.setSelected = function(label) {\n\t    this.active[label] = true;\n\t    var index = this.search.labels.indexOf(label);\n\t    if (index === -1) {\n\t      this.search.labels.push(label);\n\t    }\n\t    this.search.dirty = true;\n\t  };\n\t  LabelDisplay.prototype.setUnselected = function(label) {\n\t    this.active[label] = false;\n\t    var index = this.search.labels.indexOf(label);\n\t    if (index >= 0) {\n\t      this.search.labels.splice(index, 1);\n\t    }\n\t    this.search.dirty = true;\n\t  };\n\t  LabelDisplay.prototype.toggle = function(label) {\n\t    if (this.active[label]) {\n\t      this.setUnselected(label);\n\t    } else {\n\t      this.setSelected(label);\n\t    }\n\t  };\n\t  return LabelDisplay;\n\t}]);\n\t\n\tmodule.directive(\n\t'csNewLabel',\n\t function() {\n\t   return {\n\t     scope: {\n\t       methods: '='\n\t     },\n\t     controller: [\"$scope\", function($scope) {\n\t       $scope.update = function() {\n\t         if ($scope.methods.onUpdate) {\n\t           $scope.methods.onUpdate();\n\t         }\n\t       };\n\t     }],\n\t     link: function(scope, elm) {\n\t       elm.bind('keydown', function(event) {\n\t         var ENTERCODE = 13;\n\t         var TABCODE = 9;\n\t         if ((event.keyCode === ENTERCODE) || (event.keyCode === TABCODE)) {\n\t           scope.$apply(scope.update);\n\t         }\n\t       });\n\t     }\n\t   };\n\t });\n\t\n\tvar LabelsController = function($scope, LabelDisplay, getAllLabels) {\n\t// Problem with search getting overridden.\n\t$scope.display = new LabelDisplay($scope.search, $scope.type);\n\t$scope.newLabel = {\n\t  name: ''\n\t};\n\tvar labelsPromise = getAllLabels();\n\t$scope.allLabels = [];\n\tlabelsPromise.then(\n\t  function(labels) {\n\t    $scope.allLabels = labels;\n\t  },\n\t  function(){});\n\t$scope.typeaheadSelect = function() {\n\t  $scope.newLabelMethods.onUpdate();\n\t};\n\t$scope.newLabelMethods = {\n\t  onUpdate: function() {\n\t    var splitNames\n\t      , newLabelName\n\t      , i\n\t      , index\n\t      ;\n\t\n\t    splitNames = $scope.newLabel.name.split(',');\n\t    for (i = 0; i < splitNames.length; i++) {\n\t      newLabelName = splitNames[i].trim().toLowerCase();\n\t      if (newLabelName) {\n\t        index = $scope.display.all.subjectAreas.indexOf(newLabelName);\n\t        if (index < 0) {\n\t          $scope.display.all.subjectAreas.push(newLabelName);\n\t        }\n\t        $scope.display.setSelected(newLabelName);\n\t      }\n\t    }\n\t    $scope.newLabel.name = '';\n\t  }\n\t};\n\t$scope.toggleLabel = function(label) {\n\t  if (!$scope.onlyShowActive) {\n\t    $scope.display.toggle(label);\n\t  }\n\t};\n\t};\n\tLabelsController.$inject = [\"$scope\", \"LabelDisplay\", \"getAllLabels\"];\n\t\n\t/*\n\t- list of labels.\n\t\n\t- create directive whre you choose them (need titles, and suggested labels)\n\t\n\t- create directive where you display them (need classification and ordering)\n\t\n\tcs-choose-labels search titles suggestion-type\n\t\n\tcs-display-labels search\n\t\n\t*/\n\t\n\t\n\tmodule.directive(\n\t'csLabels',\n\tfunction() {\n\t  return {\n\t    scope: {\n\t      search: '=',\n\t      gradeLevelsTitle: '@',\n\t      engagementLevelsTitle: '@',\n\t      subjectAreasTitle: '@',\n\t      subjectAreasLabel: '@',\n\t      type: '@',\n\t      onlyShowActive: '@'\n\t    },\n\t    templateUrl: './static/templates/labels.html',\n\t    controller: LabelsController\n\t  };\n\t});\n\t\n\n\n/***/ },\n/* 13 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar angular = __webpack_require__( 1 );\n\t\n\tvar module = angular.module('communityshare.directives.mainview', [\n\t'ui.bootstrap.alert'\n\t]);\n\t\n\tmodule.directive(\n\t'csRegistrationWrapper',\n\tfunction() {\n\t  return {\n\t    templateUrl: '/static/templates/registration_wrapper.html',\n\t    transclude: true\n\t  };\n\t});\n\t\n\tmodule.directive(\n\t'csStandardWrapper',\n\tfunction() {\n\t  return {\n\t    templateUrl: '/static/templates/standard_wrapper.html',\n\t    transclude: true\n\t  };\n\t});\n\t\n\tmodule.directive(\n\t'csSplashWrapper',\n\tfunction() {\n\t  return {\n\t    templateUrl: '/static/templates/splash_wrapper.html',\n\t    transclude: true\n\t  };\n\t});\n\t\n\tmodule.directive(\n\t'csSideNav',\n\tfunction() {\n\t  return {\n\t    templateUrl: '/static/templates/sidenav.html',\n\t    replace: true\n\t  };\n\t});\n\t\n\tmodule.directive(\n\t'csNavBar',\n\tfunction() {\n\t  return {\n\t    templateUrl: '/static/templates/navbar.html',\n\t    controller: 'NavbarController',\n\t    replace: true\n\t  };\n\t});\n\t\n\tmodule.directive(\n\t'csFooter',\n\tfunction() {\n\t  return {\n\t    templateUrl: '/static/templates/footer.html',\n\t    replace: true\n\t  };\n\t});\n\t\n\tmodule.directive(\n\t'csUserAgreement',\n\tfunction() {\n\t  return {\n\t    templateUrl: '/static/templates/user_agreement.html'\n\t  };\n\t});\n\t\n\tmodule.directive(\n\t'csForbidden',\n\t[\"Session\", function(Session) {\n\t  return {\n\t    templateUrl: '/static/templates/forbidden.html',\n\t    controller: [\"$scope\", \"$location\", function($scope, $location) {\n\t      $scope.thisLocation = $location.path();\n\t      if (!(Session.activeUser)) {\n\t        $location.path('/login').search('goto', $scope.thisLocation);\n\t      }\n\t    }]\n\t  };\n\t}]);\n\t\n\tmodule.directive(\n\t'csDatepicker',\n\tfunction() {\n\t  return {\n\t    scope: {\n\t      'ngModel': '='\n\t    },\n\t    templateUrl: '/static/templates/datepicker.html',\n\t    controller: [\"$scope\", function($scope) {\n\t\n\t      $scope.today = function() {\n\t        $scope.ngModel = new Date();\n\t      };\n\t\n\t      $scope.clear = function () {\n\t        $scope.ngModel = null;\n\t      };\n\t\n\t      $scope.minDate = new Date();\n\t      $scope.maxDate = new Date();\n\t      $scope.maxDate.setFullYear($scope.maxDate.getFullYear()+1);\n\t\n\t      $scope.open = function($event) {\n\t        $event.preventDefault();\n\t        $event.stopPropagation();\n\t        $scope.opened = true;\n\t      };\n\t\n\t      $scope.dateOptions = {\n\t        formatYear: 'yy',\n\t        startingDay: 1\n\t      };\n\t    }]\n\t  };\n\t});\n\t\n\t\n\t// These directive based upon:\n\t// http://stackoverflow.com/questions/21466495/using-angularjs-how-do-i-set-all-form-fields-to-dirty-at-once\n\t\n\tmodule.directive('formSubmitted', function () {\n\treturn {\n\t  restrict: 'A',\n\t  require: 'form',\n\t  link: function (scope, element) {\n\t    scope.submitted = false;\n\t    element.on('submit', function () {\n\t      scope.$apply(function () {\n\t        scope.submitted = true;\n\t      });\n\t    });\n\t  }\n\t};\n\t});\n\t\n\tmodule.directive(\n\t'inputErrorHelper',\n\tfunction () {\n\t  return {\n\t    restrict: 'A',\n\t    require: '^form',\n\t    scope: {\n\t      inputTag: '@',\n\t      fieldName: '@'\n\t    },\n\t\n\t    link: function (scope, element, attrs, formController) {\n\t\n\t      var inputTagType = scope.inputTag || 'input';\n\t      var inputElement = element.find(inputTagType);\n\t      var fieldName = scope.fieldName || inputElement.attr('name');\n\t      var formScope = element.scope();\n\t\n\t      scope.makeDirty = function() {\n\t        var field = formController[fieldName];\n\t        field.$setViewValue(field.$viewValue);\n\t      };\n\t\n\t      formScope.$watch('submitted', function (submitted) {\n\t        if (submitted) {\n\t          scope.makeDirty();\n\t        }\n\t      });\n\t      inputElement.bind('blur', function() {\n\t        scope.$apply(function() {\n\t          scope.makeDirty();\n\t        });\n\t      });\n\t    }\n\t  };\n\t});\n\n\n/***/ },\n/* 14 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar angular = __webpack_require__( 1 );\n\t\n\tvar module = angular.module('communityshare.directives.survey', [\n\t]);\n\t\n\tmodule.directive(\n\t'csQuestion',\n\tfunction() {\n\t  return {\n\t    scope: {\n\t      question: '=',\n\t      answers: '='\n\t    },\n\t    controller: [\"$scope\", function($scope) {\n\t      // Set custom_answer to ' ' so that it is not initally\n\t      // selected.\n\t      $scope.custom_answer = ' ';\n\t    }],\n\t    templateUrl: 'static/templates/question.html'\n\t  };\n\t});\n\n\n/***/ },\n/* 15 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar angular = __webpack_require__( 1 );\n\t\n\tvar module = angular.module('communityshare.directives.user', [\n\t  'communityshare.services.survey',\n\t  'communityshare.directives.survey'\n\t]);\n\t\n\tmodule.directive(\n\t'csCommunityPartnerView',\n\tfunction() {\n\t  return {\n\t    scope: {\n\t      methods: '=',\n\t      user: '='},\n\t    templateUrl: './static/templates/community_partner_view.html',\n\t    controller: [\"Session\", \"$scope\", \"CommunityPartnerUtils\", \"Search\", \"Messages\", function(Session, $scope, CommunityPartnerUtils, Search, Messages) {\n\t      $scope.methods.onUserUpdate = function(user) {\n\t        if (user.is_community_partner) {\n\t          var searchesPromise = user.getSearches();\n\t          var searchPromise = CommunityPartnerUtils.searchesPromiseToSearchPromise(\n\t            searchesPromise);\n\t          searchPromise.then(\n\t            function(search) {\n\t              $scope.search = search;\n\t            },\n\t            function(message) {\n\t              Messages.error(message);\n\t            });\n\t        }\n\t      };\n\t      if ($scope.user) {\n\t        $scope.methods.onUserUpdate($scope.user);\n\t      }\n\t    }]\n\t  };\n\t});\n\t\n\tmodule.directive(\n\t'csEducatorView',\n\tfunction() {\n\t  return {\n\t    scope: {\n\t      methods: '=',\n\t      user: '='},\n\t    templateUrl: './static/templates/educator_view.html',\n\t    controller: [\"Session\", \"$scope\", \"Search\", \"Messages\", function(Session, $scope, Search, Messages) {\n\t      $scope.methods.onUserUpdate = function(user) {\n\t        var searchesPromise = user.getSearches();\n\t        searchesPromise.then(\n\t          function(searches) {\n\t            var searchesAsEducator = [];\n\t            for (var i=0; i<searches.length; i++) {\n\t              var search = searches[i];\n\t              if (search.searcher_role === 'educator') {\n\t                searchesAsEducator.push(search);\n\t              }\n\t            }\n\t            $scope.searches = searchesAsEducator;\n\t          },\n\t          function(message) {\n\t            Messages.error(message);\n\t          });\n\t      };\n\t      if ($scope.user) {\n\t        $scope.methods.onUserUpdate($scope.user);\n\t      }\n\t    }]\n\t  };\n\t});\n\t\n\tmodule.directive('csParserHook', function() {\n\treturn {\n\t  require: 'ngModel',\n\t  scope: {\n\t    methods: '='\n\t  },\n\t  link: function(scope, elem, attrs, ctrl) {\n\t    var methodName = attrs.csParserHook;\n\t    ctrl.$parsers.push(function(value) {\n\t      var output;\n\t      if (scope.methods[methodName]) {\n\t        output = scope.methods[methodName](value);\n\t      }\n\t      return output;\n\t    });\n\t  }\n\t};\n\t});\n\t\n\tmodule.directive('csMatch', function() {\n\treturn {\n\t  require: 'ngModel',\n\t  scope: {\n\t    methods: '='\n\t  },\n\t  link: function(scope, elem, attrs, ctrl) {\n\t\n\t    var methodName = attrs.csMatch;\n\t    var otherValue;\n\t\n\t    var isMatch = function(value1, value2) {\n\t      if (value1 === undefined) {\n\t        value1 = '';\n\t      }\n\t      if (value2 === undefined) {\n\t        value2 = '';\n\t      }\n\t      return (value1 === value2);\n\t    };\n\t\n\t    ctrl.$parsers.push(function(value) {\n\t      var output;\n\t      var matches = isMatch(value, otherValue);\n\t      ctrl.$setValidity('match', matches);\n\t      if (matches) {\n\t        output = value;\n\t      }\n\t      return output;\n\t    });\n\t\n\t    scope.methods[methodName] = function(value) {\n\t      otherValue = value;\n\t      var matches = isMatch(value, ctrl.$viewValue);\n\t      ctrl.$setValidity('match', matches);\n\t      return value;\n\t    };\n\t\n\t  }\n\t};\n\t});\n\t\n\tmodule.directive('emitScope', function() {\n\treturn {\n\t  link: function(scope, element, attrs) {\n\t    scope.$emit(attrs.emitScope, scope);\n\t  }\n\t};\n\t});\n\t\n\n\n/***/ },\n/* 16 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar angular = __webpack_require__( 1 );\n\t\n\tvar module = angular.module(\n\t'communityshare.services.authentication',\n\t[\n\t  'ngResource',\n\t  'communityshare.services.user',\n\t  'communityshare.services.conversation'\n\t]);\n\t\n\tmodule.factory(\n\t'activeUserLoader',\n\t[\"SessionBase\", function(SessionBase) {\n\t  return SessionBase.getActiveUserPromise;\n\t}]);\n\t\n\tmodule.factory(\n\t'SessionBase',\n\t[\"$q\", function($q) {\n\t  var SessionBase = {};\n\t  var deferred;\n\t  SessionBase.clearUser = function() {\n\t    deferred = $q.defer();\n\t    SessionBase.activeUser = undefined;\n\t  };\n\t  SessionBase.setUser = function(user) {\n\t    deferred.resolve(user);\n\t    SessionBase.activeUser = user;\n\t    if (user) {\n\t      user.updateUnviewedConversations();\n\t    }\n\t  };\n\t  SessionBase.getActiveUserPromise = function() {\n\t    return deferred.promise;\n\t  };\n\t  SessionBase.clearUser();\n\t  return SessionBase;\n\t}]);\n\t\n\tmodule.factory(\n\t'Session',\n\t[\"SessionBase\", \"Authenticator\", function(SessionBase, Authenticator) {\n\t  Authenticator.authenticateFromCookie();\n\t  return SessionBase;\n\t}]);\n\t\n\tmodule.factory(\n\t'Authenticator',\n\t[\"$q\", \"$http\", \"User\", \"SessionBase\", \"$cookies\", \"$cookieStore\", function($q, $http, User, SessionBase, $cookies, $cookieStore) {\n\t  var Authenticator = {};\n\t  Authenticator.clean = function() {\n\t    $http.defaults.headers.common.Authorization = '';\n\t    $cookieStore.remove('apiKey');\n\t    SessionBase.clearUser();\n\t    SessionBase.setUser(undefined);\n\t  };\n\t  Authenticator.setApiKey = function(key) {\n\t    $http.defaults.headers.common.Authorization =\n\t      'Basic:api:' + key;\n\t    $cookies.apiKey = key;\n\t  };\n\t  Authenticator.setEmail = function(email) {\n\t    $cookies.email = email;\n\t  };\n\t\n\t  Authenticator.authenticateFromCookie =\n\t    function() {\n\t      var deferred = $q.defer();\n\t      var apiKey = $cookies.apiKey;\n\t      var email = $cookies.email;\n\t      if ((apiKey) && (email)){\n\t        Authenticator.setApiKey(apiKey);\n\t        var userPromise = User.getByEmail(email);\n\t        userPromise.then(\n\t          function(user) {\n\t            SessionBase.setUser(user);\n\t          },\n\t          function(message) {\n\t            SessionBase.setUser(undefined);\n\t            deferred.reject(message);\n\t          }\n\t        );\n\t      } else {\n\t        var message = 'No cookie found';\n\t        SessionBase.setUser(undefined);\n\t        deferred.reject(message);\n\t      }\n\t    };\n\t\n\t  Authenticator.authenticateWithEmailAndPassword =\n\t    function(email, password) {\n\t      $http.defaults.headers.common.Authorization =\n\t        'Basic:' + email + ':' + password;\n\t      var url = '/api/requestapikey';\n\t      var promiseApiKey = $http({\n\t        url: url,\n\t        method: 'GET'\n\t      });\n\t      promiseApiKey.then(\n\t        function(response) {\n\t          var apiKey = response.data.apiKey;\n\t          Authenticator.setApiKey(apiKey);\n\t          $cookies.email = email;\n\t        },\n\t        function(response) {\n\t        });\n\t      var userPromise = User.getByEmail(email);\n\t      SessionBase.clearUser();\n\t      userPromise.then(\n\t        function(user) {\n\t          SessionBase.setUser(user);\n\t        },\n\t        function(response) {\n\t          SessionBase.setUser(undefined);\n\t        }\n\t      );\n\t      return userPromise;\n\t    };\n\t\n\t  Authenticator.requestResetPassword = function(email) {\n\t    var url = 'api/requestresetpassword/'+email;\n\t    var deferred = $q.defer();\n\t    var promise = $http({\n\t      url: url,\n\t      method: 'GET'\n\t    });\n\t    promise.then(\n\t      function(response) {\n\t        deferred.resolve(response.data);\n\t      },\n\t      function(response) {\n\t        var message;\n\t        if (response.data && response.data.message) {\n\t          message = response.data.message;\n\t        }\n\t        deferred.reject(message);\n\t      });\n\t    return deferred.promise;\n\t  };\n\t\n\t  Authenticator.requestConfirmEmail = function() {\n\t    var deferred = $q.defer();\n\t    var url = 'api/requestconfirmemail';\n\t    var promise = $http({\n\t      url: url,\n\t      method: 'GET'\n\t    });\n\t    promise.then(\n\t      function(response) {\n\t        deferred.resolve(undefined);\n\t      },\n\t      function(response) {\n\t        var message = 'Failed to send email confirmation email';\n\t        if (response.data && response.data.message) {\n\t          message += ': ' + response.data.message;\n\t        }\n\t        response.reject(message);\n\t      });\n\t    return deferred.promise;\n\t  };\n\t\n\t  Authenticator.confirmEmail = function(key) {\n\t    var deferred = $q.defer();\n\t    var url = 'api/confirmemail';\n\t    var promise = $http({\n\t      url: url,\n\t      method: 'POST',\n\t      data: {\n\t        key: key\n\t      }\n\t    });\n\t    SessionBase.clearUser();\n\t    promise.then(\n\t      function(response) {\n\t        var apiKey = response.data.apiKey;\n\t        var user = new User(response.data.data);\n\t        Authenticator.setApiKey(apiKey);\n\t        SessionBase.setUser(user);\n\t        deferred.resolve(user);\n\t      },\n\t      function(response) {\n\t        var message = '';\n\t        if (response.data && response.data.message) {\n\t          message = response.data.message;\n\t        }\n\t        deferred.reject(message);\n\t      });\n\t    return deferred.promise;\n\t  };\n\t\n\t  Authenticator.resetPassword = function(key, password) {\n\t    var deferred = $q.defer();\n\t    var url = 'api/resetpassword';\n\t    var promise = $http({\n\t      url: url,\n\t      method: 'POST',\n\t      data: {\n\t        key: key,\n\t        password: password\n\t      }\n\t    });\n\t    promise.then(\n\t      function(response) {\n\t        deferred.resolve(response.data);\n\t      },\n\t      function(response) {\n\t        var message = '';\n\t        if (response.data && response.data.message) {\n\t          message = response.data.message;\n\t        }\n\t        deferred.reject(message);\n\t      });\n\t    return deferred.promise;\n\t  };\n\t  return Authenticator;\n\t}]\n\t);\n\t\n\n\n/***/ },\n/* 17 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar angular = __webpack_require__( 1 );\n\t\n\tvar module = angular.module(\n\t'communityshare.services.conversation',\n\t[\n\t  'communityshare.services.item',\n\t  'communityshare.services.user',\n\t  'communityshare.services.share'\n\t]);\n\t\n\tmodule.factory(\n\t'conversationLoader',\n\t[\"Conversation\", \"$q\", function(Conversation, $q) {\n\t  return function(conversationId) {\n\t    var deferred = $q.defer();\n\t    var conversationPromise = Conversation.get(conversationId);\n\t    conversationPromise.then(\n\t      function(conversation) {\n\t        deferred.resolve(conversation);\n\t      },\n\t      function() {\n\t        deferred.resolve(undefined);\n\t      });\n\t    return deferred.promise;\n\t  };\n\t}]);\n\t\n\tmodule.factory(\n\t'Conversation',\n\t[\"SessionBase\", \"itemFactory\", \"UserBase\", \"Message\", \"Messages\", \"Share\", function(SessionBase, itemFactory, UserBase, Message, Messages, Share) {\n\t  var Conversation = itemFactory('conversation');\n\t  Conversation.prototype.toData = function() {\n\t    var fields = ['id', 'title', 'search_id', 'userA_id', 'userB_id'];\n\t    var d = {};\n\t    for (var i=0; i<fields.length; i++) {\n\t      var field = fields[i];\n\t      d[field] = this[field];\n\t    }\n\t    return d;\n\t  };\n\t  Conversation.prototype.updateFromData = function(data) {\n\t    var _this = this;\n\t    for (var key in data) {\n\t      this[key] = data[key];\n\t    }\n\t    if (this.userA) {\n\t      this.userA = UserBase.make(this.userA);\n\t    }\n\t    if (this.userB) {\n\t      this.userB = UserBase.make(this.userB);\n\t    }\n\t    SessionBase.getActiveUserPromise().then(\n\t      function(activeUser) {\n\t        if (activeUser) {\n\t          if (activeUser.id === _this.userA_id) {\n\t            _this.otherUser = _this.userB;\n\t          } else if (activeUser.id === _this.userB_id) {\n\t            _this.otherUser = _this.userA;\n\t          }\n\t        }\n\t      });\n\t    this.datetime_last_message = undefined;\n\t    if (this.messages) {\n\t      for (var i=0; i<this.messages.length; i++) {\n\t        var messageData = this.messages[i];\n\t        this.messages[i] = new Message(messageData);\n\t        if (messageData.sender_user_id === this.userA.id) {\n\t          this.messages[i].sender_user = this.userA;\n\t        } else if (messageData.sender_user_id === this.userB.id) {\n\t          this.messages[i].sender_user = this.userB;\n\t        }\n\t        if ((this.datetime_last_message === undefined) ||\n\t            (this.messages[i].date_created > this.datetime_last_message)) {\n\t          this.datetime_last_message = this.messages[i].date_created;\n\t        }\n\t      }\n\t    }\n\t  };\n\t  Conversation.prototype.getUnviewedMessages = function() {\n\t    var unviewedMessages = [];\n\t    if (this.otherUser) {\n\t      for (var i=0; i<this.messages.length; i++) {\n\t        var message = this.messages[i];\n\t        if ((message.sender_user_id === this.otherUser.id) &&\n\t            !(message.viewed)) {\n\t          unviewedMessages.push(message);\n\t        }\n\t      }\n\t    }\n\t    return unviewedMessages;\n\t  };\n\t  Conversation.prototype.markMessagesAsViewed = function() {\n\t    var messages = this.getUnviewedMessages();\n\t    for (var i=0; i<messages.length; i++) {\n\t      var message = messages[i];\n\t      message.viewed = true;\n\t      message.save();\n\t    }\n\t  };\n\t  Conversation.prototype.makeShare = function() {\n\t    var share;\n\t    if (this.otherUser) {\n\t      var educator_user_id;\n\t      var community_partner_user_id;\n\t      if (SessionBase.activeUser.is_educator) {\n\t        educator_user_id = SessionBase.activeUser.id;\n\t      } else if (SessionBase.activeUser.is_community_partner) {\n\t        community_partner_user_id = SessionBase.activeUser.id;\n\t      }\n\t      if (this.otherUser.is_educator) {\n\t        educator_user_id = this.otherUser.id;\n\t      } else if (this.otherUser.is_community_partner) {\n\t        community_partner_user_id = this.otherUser.id;\n\t      }\n\t      if ((educator_user_id === undefined) || (community_partner_user_id === undefined)) {\n\t        Messages.error('A share required both an educator and a community partner.');\n\t      } else {\n\t        share = new Share({\n\t          conversation_id: this.id,\n\t          educator_user_id: educator_user_id,\n\t          community_partner_user_id: community_partner_user_id,\n\t          title: undefined,\n\t          description: undefined,\n\t          educator_approved: false,\n\t          community_partner_approved: false\n\t        });\n\t        share.addNewEvent();\n\t      }\n\t    }\n\t    return share;\n\t  };\n\t\n\t  Conversation.getUnviewedForUser = function(user_id) {\n\t    var data = {\n\t      user_id: user_id,\n\t      with_unviewed_messages: true\n\t    };\n\t    var conversationsPromise = Conversation.get_many(data=data);\n\t    return conversationsPromise;\n\t  };\n\t\n\t  return Conversation;\n\t}]);\n\t\n\tmodule.factory(\n\t'Message',\n\t[\"itemFactory\", function(itemFactory) {\n\t  var Message = itemFactory('message');\n\t  Message.prototype.toData = function() {\n\t    var fields = ['id', 'conversation_id', 'sender_user_id', 'content', 'date_created', 'user'];\n\t    var d = {};\n\t    for (var i=0; i<fields.length; i++) {\n\t      var field = fields[i];\n\t      d[field] = this[field];\n\t    }\n\t    return d;\n\t  };\n\t  Message.prototype.updateFromData = function(data) {\n\t    for (var key in data) {\n\t      this[key] = data[key];\n\t    }\n\t    if (this.date_created) {\n\t      this.date_created = new Date(this.date_created);\n\t    } else {\n\t      this.date_created = new Date();\n\t    }\n\t  };\n\t  return Message;\n\t}]);\n\t\n\n\n/***/ },\n/* 18 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\t__webpack_require__( 16 );\n\t__webpack_require__( 20 );\n\t__webpack_require__( 22 );\n\t__webpack_require__( 17 );\n\t__webpack_require__( 29 );\n\t__webpack_require__( 24 );\n\t__webpack_require__( 19 );\n\t__webpack_require__( 28 );\n\t__webpack_require__( 23 );\n\t__webpack_require__( 21 );\n\t__webpack_require__( 27 );\n\t__webpack_require__( 26 );\n\t__webpack_require__( 25 );\n\n\n/***/ },\n/* 19 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar angular = __webpack_require__( 1 );\n\t\n\tvar module = angular.module(\n\t'communityshare.services.item',\n\t[\n\t  'ngResource',\n\t  'ngCookies'\n\t]);\n\t\n\tmodule.factory(\n\t'itemFactory',\n\t[\"$q\", \"$http\", \"SessionBase\", function($q, $http, SessionBase) {\n\t  var itemFactory = function(resourceName) {\n\t    var Item = function(itemData) {\n\t      this.updateFromData(itemData);\n\t      if (this.initialize) {\n\t        this.initialize();\n\t      }\n\t    };\n\t    Item.cache = {};\n\t    Item.searchCache = {};\n\t    Item.prototype.toData = function() {\n\t      var data = JSON.parse(JSON.stringify(this));\n\t      return data;\n\t    };\n\t    Item.prototype.clone = function() {\n\t      var data = this.toData();\n\t      var item = new Item(data);\n\t      return item;\n\t    };\n\t    Item.makeUrl = function(id) {\n\t      var url = '/api/' + resourceName;\n\t      if (id !== undefined) {\n\t        url += '/' + id;\n\t      }\n\t      return url;\n\t    };\n\t    Item.make = function(itemData) {\n\t      var item = Item.cache[itemData.id];\n\t      if (item === undefined) {\n\t        item = new Item(itemData);\n\t        Item.cache[itemData.id] = item;\n\t      } else {\n\t        item.updateFromData(itemData);\n\t      }\n\t      return item;\n\t    };\n\t\n\t    Item.get = function(id, forceRefresh) {\n\t      var deferred = $q.defer();\n\t      var item = Item.cache[id];\n\t      if ((item === undefined) || forceRefresh) {\n\t        var dataPromise = $http({\n\t          method: 'GET',\n\t          url: Item.makeUrl(id)\n\t        });\n\t        dataPromise.then(\n\t          function(data) {\n\t            var item = Item.make(data.data.data);\n\t            deferred.resolve(item);\n\t          },\n\t          function(response) {\n\t            deferred.reject(response.message);\n\t          }\n\t        );\n\t      } else {\n\t        deferred.resolve(item);\n\t      }\n\t      return deferred.promise;\n\t    };\n\t    Item.get_many = function(searchParams, forceRefresh) {\n\t      var deferred = $q.defer();\n\t\n\t      var searchHash = JSON.stringify(searchParams);\n\t      var items = Item.searchCache[searchHash];\n\t      if ((items === undefined) || forceRefresh) {\n\t\n\t        var dataPromise = $http({\n\t          method: 'GET',\n\t          url: Item.makeUrl(),\n\t          params: searchParams\n\t        });\n\t\n\t        dataPromise.then(\n\t          function(response) {\n\t            var items = [];\n\t            for (var i=0; i<response.data.data.length; i++) {\n\t              var item = Item.make(response.data.data[i]);\n\t              items.push(item);\n\t            }\n\t            Item.searchCache[searchHash] = items;\n\t            deferred.resolve(items);\n\t          },\n\t          function(response) {\n\t            deferred.reject(response.data.message);\n\t          }\n\t        );\n\t\n\t      } else {\n\t        deferred.resolve(items);\n\t      }\n\t      return deferred.promise;\n\t    };\n\t    Item.prototype._baseUpdateFromData = function(itemData) {\n\t      for (var key in itemData) {\n\t        this[key] = itemData[key];\n\t      }\n\t    };\n\t    Item.prototype.updateFromData = function(itemData) {\n\t      for (var key in itemData) {\n\t        this[key] = itemData[key];\n\t      }\n\t    };\n\t    Item.prototype.save = function() {\n\t      var _this = this;\n\t      var deferred = $q.defer();\n\t      var method;\n\t      if (this.id === undefined) {\n\t        method = 'POST';\n\t      } else {\n\t        method = 'PUT';\n\t      }\n\t      var dataPromise = $http({\n\t          method: method,\n\t          url: Item.makeUrl(this.id),\n\t          data: this.toData()\n\t        });\n\t      dataPromise.then(\n\t        function(response) {\n\t          _this.updateFromData(response.data.data);\n\t          // Properties of the current user can also be set.\n\t          if (response.data.user !== undefined) {\n\t            SessionBase.activeUser.updateFromData(response.data.user);\n\t          }\n\t          deferred.resolve(_this);\n\t        },\n\t        function(response) {\n\t          var message = '';\n\t          if (response.data.message) {\n\t            message = response.data.message;\n\t          }\n\t          deferred.reject(message);\n\t        }\n\t      );\n\t      return deferred.promise;\n\t\n\t    };\n\t    Item.prototype.destroy = function() {\n\t      var _this = this;\n\t      var deferred = $q.defer();\n\t      var dataPromise = $http({\n\t          method: 'DELETE',\n\t          url: Item.makeUrl(this.id)\n\t        });\n\t      dataPromise.then(\n\t        function() {\n\t          _this.active = false;\n\t          Item.cache[_this.id] = undefined;\n\t          // Remove the items from the cached searches.\n\t          for (var searchHash in Item.searchCache) {\n\t            var items = Item.searchCache[searchHash];\n\t            var index = items.indexOf(_this);\n\t            if (index >= 0) {\n\t              items.splice(index, 1);\n\t            }\n\t          }\n\t          deferred.resolve();\n\t        },\n\t        function(response) {\n\t          var message = '';\n\t          if (response.data.message) {\n\t            message = response.data.message;\n\t          }\n\t          deferred.reject(message);\n\t        }\n\t      );\n\t      return deferred.promise;\n\t    };\n\t\n\t    return Item;\n\t  };\n\t  return itemFactory;\n\t}]);\n\n\n/***/ },\n/* 20 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar angular = __webpack_require__( 1 );\n\t\n\tvar module = angular.module(\n\t'communityshare.services.map',\n\t[\n\t]);\n\t\n\tmodule.factory(\n\t'locationFromAddress',\n\t[\"$q\", function($q) {\n\t  var geocoder = new google.maps.Geocoder();\n\t  var locationFromAddress = function(address) {\n\t    var deferred = $q.defer();\n\t    geocoder.geocode( { 'address': address}, function(results, status) {\n\t      if (status === google.maps.GeocoderStatus.OK) {\n\t        deferred.resolve(results[0].geometry.location);\n\t      } else {\n\t        deferred.reject('Geocode was not successful for the following reason: ' + status);\n\t      }\n\t    });\n\t    return deferred.promise;\n\t  };\n\t  return locationFromAddress;\n\t}]);\n\t\n\tmodule.factory(\n\t'Map',\n\t[\"$q\", \"locationFromAddress\", function($q, locationFromAddress) {\n\t\n\t  var Map = function(elementId) {\n\t    var element = document.getElementById(elementId);\n\t    if (element) {\n\t      //  Setup map\n\t      var latlng = new google.maps.LatLng(32.223303, -110.970905);\n\t      var mapOptions = {\n\t        zoom: 10,\n\t        center: latlng\n\t      };\n\t      this.map = new google.maps.Map(document.getElementById(elementId), mapOptions);\n\t    }\n\t  };\n\t\n\t  Map.prototype.codeAddress = function(address) {\n\t    var _this = this;\n\t    var deferred = $q.defer();\n\t    var locationPromise = locationFromAddress(address);\n\t    locationPromise.then(\n\t      function(location) {\n\t        if (_this.map) {\n\t          _this.map.setCenter(location);\n\t          _this.map.setZoom(13);\n\t        }\n\t        deferred.resolve(location);\n\t      },\n\t      function(message) {\n\t        deferred.reject(message);\n\t      });\n\t    return deferred.promise;\n\t  };\n\t\n\t  return Map;\n\t}]);\n\t\n\n\n/***/ },\n/* 21 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar angular = __webpack_require__( 1 );\n\t\n\tvar module = angular.module(\n\t'communityshare.services.message',\n\t[\n\t]);\n\t\n\tmodule.factory(\n\t'Messages',\n\t[\"$log\", \"$timeout\", function($log, $timeout) {\n\t  var MESSAGETIME = 5000; //milliseconds\n\t\n\t  var Message = function(text, type) {\n\t    this.text = text;\n\t    this.type = type;\n\t  };\n\t\n\t  var MessageHolder = function() {\n\t    this.messages = [];\n\t  };\n\t  MessageHolder.prototype.error = function(errorText) {\n\t    var _this = this;\n\t    var newMessage = new Message(errorText, 'danger');\n\t    this.messages.push(newMessage);\n\t    $log.error(errorText);\n\t    $timeout(function() {\n\t      _this.removeMessage(newMessage);\n\t    }, MESSAGETIME);\n\t  };\n\t  MessageHolder.prototype.info = function(messageText) {\n\t    var newMessage = new Message(messageText, 'info');\n\t    this.messages.push(newMessage);\n\t    $log.info(messageText);\n\t  };\n\t  MessageHolder.prototype.removeMessage = function(message) {\n\t\n\t    var index = this.messages.indexOf(message);\n\t    if (index >= 0) {\n\t      this.messages.splice(index, 1);\n\t    }\n\t  };\n\t\n\t  return new MessageHolder();\n\t}]);\n\t\n\n\n/***/ },\n/* 22 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar angular = __webpack_require__( 1 );\n\t\n\tvar module = angular.module('communityshare.services.modal', []);\n\t\n\t\n\tmodule.factory(\n\t'makeDialog', [\"$modal\", function($modal) {\n\t  return function(title, msg, btns) {\n\t    var opts = {\n\t      templateUrl: './static/templates/dialog.html',\n\t      controller: function($scope, $modalInstance, title, msg, btns) {\n\t        $scope.title = title;\n\t        $scope.msg = msg;\n\t        $scope.btns = btns;\n\t        $scope.onClick = function(returnValue) {\n\t          $modalInstance.close(returnValue);\n\t        };\n\t      },\n\t      resolve: {\n\t        'title': function() {return title;},\n\t        'msg': function() {return msg;},\n\t        'btns': function() {return btns;}\n\t      }\n\t    };\n\t    var m = $modal.open(opts);\n\t    return m;\n\t  };\n\t}]);\n\t\n\n\n/***/ },\n/* 23 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar angular = __webpack_require__( 1 );\n\t\n\tvar module = angular.module(\n\t'communityshare.services.search',\n\t[\n\t  'communityshare.services.item',\n\t  'communityshare.services.user'\n\t]);\n\t\n\tmodule.factory(\n\t'getAllLabels',\n\t[\"$q\", \"$http\", function($q, $http) {\n\t  var getAllLabels = function() {\n\t    var url = '/api/labels';\n\t    var labelsPromise = $http({\n\t      method: 'GET',\n\t      url: url\n\t    });\n\t    var deferred = $q.defer();\n\t    labelsPromise.then(\n\t      function(response) {\n\t        var labels = response.data.data;\n\t        deferred.resolve(labels);\n\t      },\n\t      function(response) {\n\t        var message = response.data.message;\n\t        deferred.reject(message);\n\t      });\n\t    return deferred.promise;\n\t  };\n\t  return getAllLabels;\n\t}]);\n\t\n\tmodule.factory(\n\t'LabelMapping',\n\t[\"makeBaseLabels\", function(makeBaseLabels) {\n\t  var labellists = makeBaseLabels().all;\n\t  var labelMapping = {};\n\t  for (var key in labellists) {\n\t    for (var i=0; i<labellists[key].length; i++) {\n\t      var label = labellists[key][i];\n\t      labelMapping[label] = key;\n\t    }\n\t  }\n\t  return labelMapping;\n\t}]);\n\t\n\tmodule.factory(\n\t'Search',\n\t[\"itemFactory\", \"$q\", \"$http\", \"labelMapping\", \"UserBase\", \"orderLabels\", function(itemFactory, $q, $http, labelMapping, UserBase, orderLabels) {\n\t\n\t  var compareLabels = function(targetLabels, retrievedLabels) {\n\t    var matchingLabels = {};\n\t    var missingLabels = [];\n\t    var lcTargetLabels = [];\n\t    for (var i=0; i<targetLabels.length; i++) {\n\t      lcTargetLabels.push(targetLabels[i].toLowerCase());\n\t    }\n\t    var lcRetrievedLabels = [];\n\t    for (var j=0; j<retrievedLabels.length; j++) {\n\t      lcRetrievedLabels.push(retrievedLabels[j].toLowerCase());\n\t    }\n\t    for (var k=0; k<lcTargetLabels.length; k++) {\n\t      var lcTargetLabel = lcTargetLabels[k];\n\t      var index = lcRetrievedLabels.indexOf(lcTargetLabel);\n\t      if (index === -1) {\n\t        missingLabels.push(targetLabels[k]);\n\t      }\n\t      matchingLabels[targetLabels[k]] = (index >= 0);\n\t      if (index !== -1) {\n\t        matchingLabels[retrievedLabels[index]] = true;\n\t      }\n\t    }\n\t    var comparison = {\n\t      'matching': matchingLabels,\n\t      'missing': missingLabels\n\t    };\n\t    return comparison;\n\t  };\n\t\n\t  var Search = itemFactory('search');\n\t  Search.prototype.initialize = function() {\n\t    if(this.searcher_user) {\n\t      this.searcher_user = UserBase.make(this.searcher_user);\n\t    }\n\t  };\n\t  Search.prototype.updateFromData = function(data) {\n\t    for (var key in data) {\n\t      this[key] = data[key];\n\t    }\n\t    if (this.created) {\n\t      this.created = new Date(this.created);\n\t    }\n\t    if (this.labels) {\n\t      this.labels = orderLabels(this.labels);\n\t    }\n\t  };\n\t  Search.prototype.isProfile = function(user) {\n\t    var isProfile = (\n\t      (user.community_partner_profile_search.id === this.id) ||\n\t        (user.educator_profile_search.id === this.id));\n\t    return isProfile;\n\t  };\n\t  Search.getResults = function(searchId, page) {\n\t    var deferred = $q.defer();\n\t    if (typeof page === 'undefined') page = 0;\n\t    var url = '/api/search/' + searchId + '/' + page + '/results';\n\t    var resultsPromise = $http({\n\t      method: 'GET',\n\t      url: url\n\t    });\n\t    var searchPromise = Search.get(searchId);\n\t    var searchAndResultsPromise = $q.all([searchPromise, resultsPromise]);\n\t    searchAndResultsPromise.then(\n\t      function(responses) {\n\t        var baseSearch = responses[0];\n\t        var resultsResponse = responses[1];\n\t        var searches = [];\n\t        for (var i=0; i<resultsResponse.data.data.length; i++) {\n\t          var search = new Search(resultsResponse.data.data[i]);\n\t          var comparison = compareLabels(baseSearch.labels, search.labels);\n\t          search.matchingLabels = comparison.matching;\n\t          search.missingLabels = comparison.missing;\n\t          search.targetLabels = baseSearch.labels;\n\t          searches.push(search);\n\t        }\n\t        deferred.resolve(searches);\n\t      },\n\t      function(response) {\n\t        var msg = '';\n\t        if (response.message) {\n\t          msg = response.message;\n\t        }\n\t        deferred.reject('Error loading search results: ' + msg);\n\t      });\n\t    return deferred.promise;\n\t  };\n\t  return Search;\n\t}]);\n\n\n/***/ },\n/* 24 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar angular = __webpack_require__( 1 );\n\t\n\tvar module = angular.module(\n\t'communityshare.services.share',\n\t[\n\t  'communityshare.services.item'\n\t]);\n\t\n\tmodule.factory(\n\t'Share',\n\t[\"itemFactory\", \"EvntBase\", \"SessionBase\", function(itemFactory, EvntBase, SessionBase) {\n\t  var Share = itemFactory('share');\n\t  Share.prototype.updateFromData = function(shareData) {\n\t    this._baseUpdateFromData(shareData);\n\t    this.largest_datetime_start = undefined;\n\t    if (this.events) {\n\t      for (var i=0; i<this.events.length; i++) {\n\t        this.events[i] = EvntBase.make(this.events[i]);\n\t        if ((this.largest_datetime_start === undefined) ||\n\t            (this.events[i].datetime_start > this.largest_datetime_start)) {\n\t          this.largest_datetime_start = this.events[i].datetime_start;\n\t        }\n\t      }\n\t    } else {\n\t      this.events = [];\n\t    }\n\t    var iAmCommunityPartner = false;\n\t    var iAmEducator = false;\n\t    if (SessionBase.activeUser) {\n\t      iAmCommunityPartner = (\n\t        SessionBase.activeUser.id === this.community_partner_user_id);\n\t      iAmEducator = (\n\t        SessionBase.activeUser.id === this.educator_user_id);\n\t    }\n\t    if (this.educator && this.community_partner) {\n\t      if (iAmEducator) {\n\t        this.otherUser = this.community_partner;\n\t      } else if (iAmCommunityPartner) {\n\t        this.otherUser = this.educator;\n\t      }\n\t    }\n\t    this.canApprove = false;\n\t    if ((iAmEducator) && (!this.educator_approved) && (this.community_partner_approved)) {\n\t      this.canApprove = true;\n\t    } else if ((iAmCommunityPartner) && (!this.community_partner_approved) && (this.educator_approved)) {\n\t      this.canApprove = true;\n\t    }\n\t    this.approved = (this.educator_approved && this.community_partner_approved);\n\t  };\n\t  Share.prototype.hasActiveEvent = function() {\n\t    var hasEvents = false;\n\t    for (var i=0; i<this.events.length; i++) {\n\t      var evnt = this.events[i];\n\t      if ((evnt.id >= 0) && (evnt.active)) {\n\t        hasEvents = true;\n\t      }\n\t    }\n\t    return hasEvents;\n\t  };\n\t  Share.prototype.addNewEvent = function() {\n\t    var evnt = new EvntBase({\n\t      share_id: this.id,\n\t      title: this.title,\n\t      active: true,\n\t      description: '',\n\t      datetime_start: undefined,\n\t      datetime_stop: undefined\n\t    });\n\t    this.events.push(evnt);\n\t  };\n\t  Share.sortShares = function(shares) {\n\t    var futureShares = [];\n\t    var pastShares = [];\n\t    for (var i=0; i<shares.length; i++) {\n\t      var share = shares[i];\n\t      if (share.largest_datetime_start > new Date()) {\n\t        futureShares.push(share);\n\t      } else {\n\t        pastShares.push(share);\n\t      }\n\t    }\n\t    futureShares.sort(function(a, b) {return a.datetime_start > b.datetime_start;});\n\t    pastShares.sort(function(a, b) {return a.datetime_start > b.datetime_start;});\n\t    return {\n\t      future: futureShares,\n\t      past: pastShares\n\t    };\n\t  };\n\t\n\t  return Share;\n\t}]);\n\t\n\tmodule.factory(\n\t'EvntBase',\n\t[\"itemFactory\", function(itemFactory) {\n\t  var Evnt = itemFactory('event');\n\t  return Evnt;\n\t}]);\n\t\n\tvar splitDateTime = function(datetime) {\n\tvar date = new Date(datetime.getFullYear(),\n\t                    datetime.getMonth(),\n\t                    datetime.getDate());\n\tvar time = new Date(1900, 0, 1,\n\t                    datetime.getHours(),\n\t                    datetime.getMinutes());\n\tvar combined = {\n\t  date: date,\n\t  time: time\n\t};\n\treturn combined;\n\t};\n\t\n\tvar combineDateTime = function(date, time) {\n\tvar combined = new Date(\n\t  date.getFullYear(),\n\t  date.getMonth(),\n\t  date.getDate(),\n\t  time.getHours(),\n\t  time.getMinutes());\n\treturn combined;\n\t};\n\t\n\tmodule.factory(\n\t'eventLoader',\n\t[\"Evnt\", \"$q\", function(Evnt, $q) {\n\t  return function(eventId) {\n\t    var deferred = $q.defer();\n\t    var eventPromise = Evnt.get(eventId);\n\t    eventPromise.then(\n\t      function(event) {\n\t        deferred.resolve(event);\n\t      },\n\t      function() {\n\t        deferred.resolve(undefined);\n\t      });\n\t    return deferred.promise;\n\t  };\n\t}]);\n\t\n\tmodule.factory(\n\t'Evnt',\n\t[\"EvntBase\", \"Share\", function(EvntBase, Share) {\n\t  var default_datetime = new Date();\n\t  default_datetime.setHours(0, 0, 0, 0);\n\t  EvntBase.prototype.updateFromData = function(eventData) {\n\t    this._baseUpdateFromData(eventData);\n\t    if (this.datetime_start === undefined) {\n\t      this.datetime_start = default_datetime;\n\t    }\n\t    if (this.datetime_stop === undefined) {\n\t      this.datetime_stop = default_datetime;\n\t    }\n\t    this.datetime_start = new Date(this.datetime_start);\n\t    var splitstart = splitDateTime(this.datetime_start);\n\t    this.date = splitstart.date;\n\t    this.time_start = splitstart.time;\n\t    this.datetime_stop = new Date(this.datetime_stop);\n\t    var splitstop = splitDateTime(this.datetime_stop);\n\t    this.time_stop = splitstop.time;\n\t    if (this.share) {\n\t      this.share = new Share(this.share);\n\t    }\n\t  };\n\t  EvntBase.prototype.updateDateTimes = function() {\n\t    this.datetime_start = combineDateTime(this.date, this.time_start);\n\t    this.datetime_stop = combineDateTime(this.date, this.time_stop);\n\t  };\n\t  return EvntBase;\n\t}]);\n\t\n\n\n/***/ },\n/* 25 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t//http://www.bennadel.com/blog/2542-logging-client-side-errors-with-angularjs-and-stacktrace-js.htm\n\t\n\tvar angular = __webpack_require__( 1 );\n\t\n\tvar module = angular.module('communityshare.services.stacktrace', []);\n\t\n\tmodule.factory(\n\t'stacktraceService',\n\tfunction () {\n\t  return({ print: printStackTrace });\n\t}\n\t);\n\t\n\tmodule.provider(\n\t'$exceptionHandler', {\n\t  $get: [\"errorLogService\", function (errorLogService) {\n\t    return(errorLogService);\n\t  }]\n\t}\n\t);\n\t\n\tmodule.factory(\n\t'errorLogService',\n\t[\"$log\", \"$window\", \"stacktraceService\", function ($log, $window, stacktraceService) {\n\t  function log (exception, cause) {\n\t    $log.error.apply($log, arguments);\n\t    try {\n\t      var errorMessage = exception.toString();\n\t      var stackTrace = stacktraceService.print({ e: exception });\n\t      $.ajax({\n\t        type: 'POST',\n\t        url: 'http://localhost:3030/error-log',\n\t        contentType: 'application/json',\n\t        data: angular.toJson({\n\t          errorUrl: $window.location.href,\n\t          errorMessage: errorMessage,\n\t          stackTrace: stackTrace,\n\t          cause: ( cause || '' ),\n\t          browser: navigator.userAgent\n\t        })\n\t      });\n\t    }\n\t    catch (loggingError) {\n\t      $log.warn('Error logging failed');\n\t      $log.log(loggingError);\n\t    }\n\t  }\n\t  return(log);\n\t}]\n\t);\n\n\n/***/ },\n/* 26 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar angular = __webpack_require__( 1 );\n\t\n\tvar module = angular.module(\n\t'communityshare.services.statistics',\n\t[]);\n\t\n\tmodule.factory(\n\t'getStatistics',\n\t[\"$q\", \"$http\", function($q, $http) {\n\t  var getStatistics = function() {\n\t    var url = '/api/statistics';\n\t    var statisticsPromise = $http({\n\t      method: 'GET',\n\t      url: url\n\t    });\n\t    var deferred = $q.defer();\n\t    statisticsPromise.then(\n\t      function(response) {\n\t        deferred.resolve(response.data.data);\n\t      },\n\t      function(response) {\n\t        var msg = 'Failed to fetch statistics';\n\t        if (response.data.message) {\n\t          msg += ': ' + response.data.message;\n\t        }\n\t        deferred.reject(msg);\n\t      });\n\t    return deferred.promise;\n\t  };\n\t  return getStatistics;\n\t}]);\n\t\n\n\n/***/ },\n/* 27 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar angular = __webpack_require__( 1 );\n\t\n\tvar module = angular.module(\n\t'communityshare.services.survey',\n\t[]);\n\t\n\tmodule.factory(\n\t'Answer',\n\t[\"itemFactory\", function(itemFactory) {\n\t  var Answer = itemFactory('answer');\n\t  return Answer;\n\t}]);\n\t\n\tmodule.factory(\n\t'Question',\n\t[\"itemFactory\", \"$q\", \"Answer\", function(itemFactory, $q, Answer) {\n\t  var Question = itemFactory('question');\n\t  Question.get_many_with_answers = function(\n\t    user_id, searchParams, answerParams, forceRefresh) {\n\t    var deferred = $q.defer();\n\t    var questionsPromise = Question.get_many(searchParams, forceRefresh);\n\t    // FIXME: Not scalable. Grabbing all answers for a given user.\n\t    if (!answerParams) {\n\t      answerParams = {};\n\t    }\n\t    answerParams.responder_id = user_id;\n\t    var answersPromise = Answer.get_many(answerParams);\n\t    $q.all([questionsPromise, answersPromise]).then(\n\t      function(data) {\n\t        var questions = data[0];\n\t        var answers = data[1];\n\t        var answersByQuestionId = {};\n\t        for (var i=0; i<answers.length; i++) {\n\t          var answer = answers[i];\n\t          if (!(answer.question_id in answersByQuestionId)) {\n\t            answersByQuestionId[answer.question_id] = [];\n\t          }\n\t          answersByQuestionId[answer.question_id].push(answer);\n\t        }\n\t        var sort_fn = function(a, b) {\n\t            return a.created_date - b.created_date;\n\t        };\n\t        for (var j=0; j<questions.length; j++) {\n\t          var question = questions[j];\n\t          var some_answers = [];\n\t          if (question.id in answersByQuestionId) {\n\t            some_answers = answersByQuestionId[question.id];\n\t          }\n\t          some_answers.sort(sort_fn);\n\t          if (some_answers.length > 0) {\n\t            question.answer = some_answers[0];\n\t            question.answers = some_answers;\n\t          } else {\n\t            question.answer = new Answer({question_id: question.id});\n\t          }\n\t        }\n\t        deferred.resolve(questions);\n\t      },\n\t      function(message) {\n\t        deferred.reject(message);\n\t      }\n\t    );\n\t    return deferred.promise;\n\t  };\n\t  return Question;\n\t}]);\n\t\n\n\n/***/ },\n/* 28 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar angular = __webpack_require__( 1 );\n\t\n\tvar module = angular.module(\n\t'communityshare.services.user',\n\t[\n\t  'communityshare.services.item',\n\t  'communityshare.services.message'\n\t]);\n\t\n\tmodule.factory(\n\t'signUp',\n\t[\"$q\", \"$http\", \"User\", \"Authenticator\", \"Session\", \"Messages\", function($q, $http, User, Authenticator, Session, Messages) {\n\t  var signUp = function(user, password) {\n\t    var deferred = $q.defer();\n\t    var dataPromise = $http({\n\t      method: 'POST',\n\t      url: '/api/usersignup',\n\t      data: {\n\t        'user': user.toData(),\n\t        'password': password\n\t      }});\n\t    Session.clearUser();\n\t    dataPromise.then(\n\t      function(response) {\n\t        var user = User.make(response.data.data);\n\t        Authenticator.setApiKey(response.data.apiKey);\n\t        Authenticator.setEmail(user.email);\n\t        if (user.warningMessage) {\n\t          Messages.error('Failed to send email to confirm address.');\n\t        }\n\t        Session.setUser(user);\n\t        user.updateUnviewedConversations();\n\t        deferred.resolve(user);\n\t      },\n\t      function(response) {\n\t        Session.setUser(undefined);\n\t        deferred.reject(response.data.message);\n\t      }\n\t    );\n\t    return deferred.promise;\n\t  };\n\t  return signUp;\n\t}]);\n\t\n\tmodule.factory(\n\t'UserBase',\n\t[\"itemFactory\", function(itemFactory) {\n\t  var UserBase = itemFactory('user');\n\t  UserBase.prototype.toData = function() {\n\t    this.cleanInstitutionAssociations();\n\t    var data = JSON.parse(JSON.stringify(this));\n\t    if (this.id) {\n\t      data.educator_profile_search = this.educator_profile_search.toData();\n\t      data.community_partner_profile_search = this.community_partner_profile_search.toData();\n\t    } else {\n\t      data.educator_profile_search = null;\n\t      data.community_partner_profile_search = null;\n\t    }\n\t    return data;\n\t  };\n\t  return UserBase;\n\t}]);\n\t\n\tmodule.factory(\n\t'userLoader',\n\t[\"User\", \"$q\", function(User, $q) {\n\t  return function(userId) {\n\t    var deferred = $q.defer();\n\t    var userPromise = User.get(userId);\n\t    userPromise.then(\n\t      function(user) {\n\t        deferred.resolve(user);\n\t      },\n\t      function() {\n\t        deferred.resolve(undefined);\n\t      });\n\t    return deferred.promise;\n\t  };\n\t}]);\n\t\n\t\n\tmodule.factory(\n\t'User',\n\t[\"UserBase\", \"$q\", \"$http\", \"Search\", \"Conversation\", \"SessionBase\", \"Evnt\", \"Messages\", function(UserBase, $q, $http, Search, Conversation, SessionBase, Evnt, Messages) {\n\t\n\t  UserBase.search = function(searchParams) {\n\t    var deferred = $q.defer();\n\t    var dataPromise = $http({\n\t      method: 'GET',\n\t      url: '/api/usersearch',\n\t      params: searchParams\n\t    });\n\t    dataPromise.then(\n\t      function(response) {\n\t        var users = [];\n\t        for (var i=0; i<response.data.data.length; i++) {\n\t          users.push(UserBase.make(response.data.data[i]));\n\t        }\n\t        deferred.resolve(users);\n\t      },\n\t      function(response) {\n\t        deferred.reject(response.message);\n\t      }\n\t    );\n\t    return deferred.promise;\n\t  };\n\t\n\t  UserBase.prototype.cleanInstitutionAssociations = function() {\n\t    // Remove any insitutions with no names\n\t    var filteredInstitutionAssociations = [];\n\t    for (var i=0; i<this.institution_associations.length; i++) {\n\t      var institution_association = this.institution_associations[i];\n\t      if (institution_association.institution && institution_association.institution.name) {\n\t        filteredInstitutionAssociations.push(institution_association);\n\t      }\n\t    }\n\t    this.institution_associations = filteredInstitutionAssociations;\n\t  };\n\t\n\t  UserBase.prototype.addInstitutionAssociationRemoveMethod = function(ia) {\n\t    var _this = this;\n\t    ia.remove = function() {\n\t      var index = _this.institution_associations.indexOf(ia);\n\t      if (index > -1) {\n\t        _this.institution_associations.splice(index, 1);\n\t      }\n\t    };\n\t  };\n\t\n\t  UserBase.prototype.updateFromData = function(data) {\n\t    this._baseUpdateFromData(data);\n\t    if (this.educator_profile_search) {\n\t      this.educator_profile_search = new Search(\n\t        this.educator_profile_search);\n\t    } else {\n\t      this.educator_profile_search = new Search({\n\t        searcher_user_id: this.id,\n\t        searcher_role: 'educator',\n\t        searching_for_role: 'partner',\n\t        zipcode: this.zipcode,\n\t        labels: []\n\t      });\n\t    }\n\t    if (this.community_partner_profile_search) {\n\t      this.community_partner_profile_search = new Search(\n\t        this.community_partner_profile_search);\n\t    } else {\n\t      this.community_partner_profile_search = new Search({\n\t        searcher_user_id: this.id,\n\t        searcher_role: 'partner',\n\t        searching_for_role: 'educator',\n\t        zipcode: this.zipcode,\n\t        labels: []\n\t      });\n\t    }\n\t    if (this.is_administrator) {\n\t      this.accountCreationStatus = 'done';\n\t    } else if ((this.educator_profile_search.labels.length === 0) &&\n\t        (this.community_partner_profile_search.labels.length === 0)) {\n\t      this.accountCreationStatus = 'choice';\n\t    } else if (!this.bio) {\n\t      this.accountCreationStatus = 'personal';\n\t    } else {\n\t      this.accountCreationStatus = 'done';\n\t    }\n\t\n\t    if (this.institution_associations === undefined)  {\n\t      this.institution_associations = [];\n\t      this.addNewInstitutionAssociation();\n\t    } else {\n\t      for (var i=0; i<this.institution_associations.length; i++) {\n\t        var ia = this.institution_associations[i];\n\t        this.addInstitutionAssociationRemoveMethod(ia);\n\t      }\n\t    }\n\t  };\n\t\n\t  UserBase.prototype.initialize = function() {\n\t    var _this = this;\n\t    if (SessionBase.activeUser) {\n\t      var conversationsPromise = Conversation.get_many(\n\t        {user_id: SessionBase.activeUser.id});\n\t      conversationsPromise.then(\n\t        function(conversations) {\n\t          _this.conversationsWithMe = [];\n\t          for (var i=0; i<conversations.length; i++) {\n\t            var conversation = conversations[i];\n\t            if (conversation.otherUser.id === _this.id) {\n\t              _this.conversationsWithMe.push(conversation);\n\t            }\n\t          }\n\t        });\n\t    }\n\t  };\n\t\n\t  UserBase.prototype.addNewInstitutionAssociation = function() {\n\t    var ia = {\n\t      institution: {},\n\t      role: ''\n\t    };\n\t    this.institution_associations.push(ia);\n\t    this.addInstitutionAssociationRemoveMethod(ia);\n\t  };\n\t\n\t  UserBase.getByEmail = function(email) {\n\t    var deferred = $q.defer();\n\t    var dataPromise = $http({\n\t      method: 'GET',\n\t      url: '/api/userbyemail/' + email\n\t    });\n\t    dataPromise.then(\n\t      function(data) {\n\t        var user = UserBase.make(data.data.data);\n\t        deferred.resolve(user);\n\t      },\n\t      function(response) {\n\t        deferred.reject(response.message);\n\t      }\n\t    );\n\t    return deferred.promise;\n\t  };\n\t\n\t  UserBase.prototype.getSearches = function() {\n\t    var searchParams = {\n\t      'searcher_user_id': this.id,\n\t      'active': true\n\t    };\n\t    var searchesPromise = Search.get_many(searchParams);\n\t    return searchesPromise;\n\t  };\n\t\n\t  UserBase.prototype.getRecentConversations = function() {\n\t    var now = new Date();\n\t    var oneMonthAgo = new Date(now.getFullYear(), now.getMonth()-1, now.getDate());\n\t    var conversationParams = {\n\t      user_id: this.id,\n\t      'messages.date_created.greaterthan': oneMonthAgo\n\t    };\n\t    var conversationsPromise = Conversation.get_many(\n\t      conversationParams, true);\n\t    return conversationsPromise;\n\t  };\n\t\n\t  UserBase.prototype.getUpcomingEvents = function() {\n\t    var now = new Date();\n\t    var today = new Date(now.getFullYear(), now.getMonth(), now.getDate());\n\t    var params = {\n\t      user_id: SessionBase.activeUser.id,\n\t      'datetime_start.greaterthan': today\n\t    };\n\t    var eventsPromise = Evnt.get_many(params);\n\t    return eventsPromise;\n\t  };\n\t\n\t  UserBase.prototype.updateUnviewedConversations = function() {\n\t    var _this = this;\n\t    var conversationsPromise = Conversation.getUnviewedForUser(this.id);\n\t    conversationsPromise.then(\n\t      function(conversations) {\n\t        var nUnviewedMessages = 0;\n\t        for (var i=0; i<conversations.length; i++) {\n\t          var conversation = conversations[i];\n\t          var messages = conversation.getUnviewedMessages();\n\t          nUnviewedMessages += messages.length;\n\t        }\n\t        _this.nUnviewedMessages = nUnviewedMessages;\n\t      },\n\t      function(message) {\n\t        var msg = '';\n\t        if (message) {\n\t          msg = ': ' + message;\n\t        }\n\t        Messages.error('Failed to get messages: ' + msg);\n\t      });\n\t  };\n\t\n\t  return UserBase;\n\t}]);\n\t\n\tmodule.factory(\n\t'Institution',\n\t[\"itemFactory\", function(itemFactory) {\n\t  var Institution = itemFactory('institution');\n\t  return Institution;\n\t}]);\n\t\n\t// A function that bring up a modal to send a message to someone.\n\tmodule.factory(\n\t'startConversation',\n\t[\"$modal\", \"$location\", \"Conversation\", \"Messages\", function($modal, $location, Conversation, Messages) {\n\t  var startConversation = function(thisUser, otherUser, search, directToConversation) {\n\t    var userId = otherUser.id;\n\t    var searchId;\n\t    if (search) {\n\t      searchId = search.id;\n\t    }\n\t    // See if we have a conversation with this user\n\t    var conversationsPromise = Conversation.get_many(\n\t      {user_id: thisUser.id,\n\t       other_user_id: otherUser.id\n\t      }, true);\n\t    // Options for the new conversation modal.\n\t    var newConversationOpts = {\n\t      templateUrl: './static/templates/new_conversation.html',\n\t      controller: 'NewConversationController',\n\t      resolve: {\n\t        userId: function() {return userId;},\n\t        searchId: function() {return searchId;}\n\t      }\n\t    };\n\t    var withNewConversation = function(conversation) {\n\t      if (conversation && directToConversation) {\n\t        $location.path('/conversation/' + conversation.id);\n\t      }\n\t    };\n\t    conversationsPromise.then(\n\t      function(conversations) {\n\t        // If we have one conversation with that user go\n\t        // directly to that page.\n\t        if (conversations.length === 1) {\n\t          $location.path('/conversation/' + conversations[0].id);\n\t        }\n\t        // If we have no conversations pop up the new converation\n\t        // modal.\n\t        else if (conversations.length === 0) {\n\t          var m = $modal.open(newConversationOpts);\n\t          m.result.then(withNewConversation);\n\t        }\n\t        // If we have more than one conversation (which shouldn't happen\n\t        // with our current UI) we display a choose conversation modal.\n\t        else {\n\t          var opts = {\n\t            templateUrl: './static/templates/choose_conversation.html',\n\t            controller: function($scope) {\n\t              $scope.conversations = conversations;\n\t              //$scope.user = user;\n\t              $scope.showConversation = function(conversation) {\n\t                $location.path('/conversation/' + conversation.id);\n\t              };\n\t            }\n\t          };\n\t          $modal.open(opts);\n\t        }\n\t      },\n\t      function(errorMessage) {\n\t        Messages.info(errorMessage);\n\t      }\n\t    );\n\t  };\n\t  return startConversation;\n\t}]);\n\t\n\n\n/***/ },\n/* 29 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar angular = __webpack_require__( 1 );\n\t\n\tvar module = angular.module('communityshare.services.utility', []);\n\t\n\tmodule.factory('support', function() {\n\tvar isIE =  function(version, comparison) {\n\t  var cc = 'IE';\n\t  var b = document.createElement('B');\n\t  var docElem = document.documentElement;\n\t  var isIE;\n\t  if(version){\n\t    cc += ' ' + version;\n\t    if(comparison){ cc = comparison + ' ' + cc; }\n\t  }\n\t  b.innerHTML = '<!--[if '+ cc +']><b id=\"iecctest\"></b><![endif]-->';\n\t  docElem.appendChild(b);\n\t  isIE = !!document.getElementById('iecctest');\n\t  docElem.removeChild(b);\n\t  return isIE;\n\t};\n\treturn {\n\t  nativePlaceholderSupport: (function() {\n\t    var i = document.createElement('input');\n\t    return i.placeholder !== undefined;\n\t  })(),\n\t  isIE: isIE,\n\t  fileUploader: !isIE(8, 'lte')\n\t};\n\t});\n\t\n\t\n\tmodule.filter('truncate', function () {\n\treturn function (text, length, end) {\n\t  if (end === undefined) {\n\t    end = \"...\";\n\t  }\n\t  var output;\n\t  if ((text.length <= length) || (text.length - end.length <= length)) {\n\t    output = text;\n\t  }\n\t  else {\n\t    output = String(text).substring(0, length-end.length) + end;\n\t  }\n\t  return output ;\n\t};\n\t});\n\t\n\tmodule.factory('parseyyyyMMdd', function() {\n\treturn function(yyyyMMdd) {\n\t  var date = new Date(yyyyMMdd.substring(0, 4), yyyyMMdd.substring(4, 6),\n\t                      yyyyMMdd.substring(6, 8));\n\t  date.setMonth(date.getMonth()-1);\n\t  return date;\n\t};\n\t});\n\t\n\n\n/***/ }\n/******/ ]);\n\n\n/** WEBPACK FOOTER **\n ** bundle.js\n **/"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap 28e7474eb05a87bea759\n **/","'use strict';\n\nrequire( './controllers/index.js' );\nrequire( './services/index.js' );\nrequire( './directives/index.js' );\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./index.js\n ** module id = 0\n ** module chunks = 0\n **/","module.exports = angular;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"angular\"\n ** module id = 1\n ** module chunks = 0\n **/","'use strict';\n\nvar angular = require( 'angular' );\n\nvar module = angular.module(\n'communityshare.controllers.authentication',\n[\n  'communityshare.services.authentication'\n]);\n\nmodule.controller(\n'ResetPasswordController',\n[\"$scope\", \"Authenticator\", \"$routeParams\", \"$location\", function($scope, Authenticator, $routeParams, $location) {\n  var key = $routeParams.key;\n  $scope.password = {\n    password: '',\n    repeat_password: ''\n  };\n  $scope.successfulReset = false;\n  $scope.failedReset = false;\n  // passwordMethods is used for communication between password and\n  // password_repeat directives.\n  $scope.passwordMethods = {};\n  $scope.resetPassword = function() {\n    var promise = Authenticator.resetPassword(key, $scope.password.password);\n    promise.then(\n      function() {\n        $location.path('/login').search({});\n        $scope.successfulReset = true;\n      },\n      function(message) {\n        $scope.errorMessage = message;\n      });\n  };\n}]);\n\nmodule.controller(\n'RequestResetPasswordController',\n[\"$scope\", \"Authenticator\", function($scope, Authenticator) {\n  $scope.email = {value: ''};\n  $scope.successfulRequest = false;\n  $scope.failedRequest = false;\n  $scope.requestResetPassword = function() {\n    var promise = Authenticator.requestResetPassword($scope.email.value);\n    promise.then(\n      function() {\n        $scope.successfulRequest = true;\n        $scope.errorMessage = '';\n      },\n      function(message) {\n        $scope.successfulRequest = false;\n        var msg = 'Failed to reset password';\n        if (message) {\n          if (message === 'Not found') {\n            msg += ': ' + 'Unknown email address';\n          } else {\n            msg += ': ' + message;\n          }\n        }\n        $scope.errorMessage = msg;\n      });\n  };\n}]);\n\nmodule.controller(\n'ConfirmEmailController',\n[\"$scope\", \"Authenticator\", \"$routeParams\", function($scope, Authenticator, $routeParams) {\n  var key = $routeParams.key;\n  $scope.confirmed = false;\n  $scope.failedReset = false;\n  var promise = Authenticator.confirmEmail(key);\n  promise.then(\n    function() {\n      $scope.confirmed = true;\n    },\n    function(message) {\n      $scope.errorMessage = message;\n    });\n}]);\n\nmodule.controller(\n'DefaultController',\n[\"$scope\", \"user\", \"$location\", \"User\", \"signUp\", \"Messages\", \"$modal\", \"support\", function($scope, user, $location, User, signUp, Messages, $modal, support) {\n  $scope.support = support;\n  if (user) {\n    if (user.accountCreationStatus === 'choice') {\n      $location.path('signup/choice');\n    } else if (user.accountCreationStatus === 'personal') {\n      $location.path('signup/personal');\n    } else if (user.is_educator) {\n      $location.path('matches');\n    } else {\n\n      $location.path('messages');\n    }\n  }\n\n  var showModal = $location.search().showModal;\n\n  $scope.newUser = new User();\n  $scope.emailRegex = /.+@.+\\..+/i;\n  $scope.passwordMethods = {};\n  $scope.pg = 'default';\n  $scope.user_type = {value: ''};\n  $scope.completeSplash = function() {\n    $scope.newUser.name = $scope.newUser.firstName + ' ' + $scope.newUser.lastName;\n    var userPromise = signUp($scope.newUser, $scope.newUser.password);\n    userPromise.then(\n      function() {\n        $scope.errorMessage = '';\n        if ($scope.user_type.value === 'communityPartner') {\n          $location.path('/signup/communitypartner');\n        } else if ($scope.user_type.value === 'educator') {\n          $location.path('/signup/educator');\n        } else {\n          $location.path('signup/choice');\n        }\n      },\n      function(message) {\n        $scope.errorMessage = message;\n      });\n/*        if ($scope.user_type == 'communityPartner') {\n      $scope.pg = 'partner1';\n      $scope.isCommunityPartner = true;\n    } else if ($scope.user_type == 'educator') {\n      $scope.pg = 'educator1';\n      $scope.isEducator = true;\n    }*/\n  };\n  $scope.showTerms = function() {\n    $modal.open({\n      templateUrl: './static/templates/terms.html',\n      controller: 'ModalController'\n    });\n  };\n  $scope.showPrivacy = function() {\n    $modal.open({\n      templateUrl: './static/templates/privacy.html',\n      controller: 'ModalController'\n    });\n  };\n\n  $scope.showChoiceText = function() {\n    $modal.open({\n      templateUrl: './static/templates/choice_educator_modal.html',\n      controller: 'ModalController'\n    });\n  };\n\n  $scope.showEducatorText = function() {\n    $modal.open({\n      templateUrl: './static/templates/choice_educator_modal.html',\n      controller: 'ModalController'\n    });\n  };\n\n  $scope.showPartnerText = function() {\n    $modal.open({\n      templateUrl: './static/templates/choice_partner_modal.html',\n      controller: 'ModalController'\n    });\n  };\n\n  if (showModal == 'terms') {\n    $scope.showTerms();\n  }\n  if (showModal == 'privacy') {\n    $scope.showPrivacy();\n  }\n}]);\n\nmodule.controller(\n'AuthRedirectController',\n[\"$scope\", \"Authenticator\", \"Messages\", function ($scope, Authenticator, Messages) {\n  $scope.resendEmailConfirmation = function() {\n    var emailConfirmPromise = Authenticator.requestConfirmEmail();\n    emailConfirmPromise.then(\n      function() {\n        Messages.info('Sent email confirmation email.');\n      },\n      function(errorMessage) {\n        Messages.error(errorMessage);\n      });\n  };\n}]\n);\n\nmodule.controller(\n'LoginController',\n[\"Session\", \"$scope\", \"$location\", \"Authenticator\", function(Session, $scope, $location, Authenticator) {\n  var nextLocation = $location.search().goto;\n  $scope.email = {value: undefined};\n  $scope.password = {value: undefined};\n  $scope.errorMessage = '';\n\n  $scope.login = function() {\n    var userPromise = Authenticator.authenticateWithEmailAndPassword(\n      $scope.email.value, $scope.password.value);\n    userPromise.then(\n      function() {\n\n        if (!Session.activeUser.email_confirmed) {\n          $location.path(\"/auth_redirect\");\n        } else {\n          $location.search('goto', null);\n          if (nextLocation) {\n            $location.path(nextLocation);\n          } else {\n            $location.path(\"/\");\n          }\n        }\n      },\n      function(message) {\n        var msg = '';\n        if (message) {\n          msg = ': ' + message;\n        }\n        $scope.errorMessage = 'Authentication failed' + msg;\n      }\n    );\n  };\n}]);\n\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./controllers/authentication_controllers.js\n ** module id = 2\n ** module chunks = 0\n **/","'use strict';\n\nvar angular = require( 'angular' );\n\nvar module = angular.module(\n'communityshare.controllers.conversation',\n[\n  'communityshare.services.authentication',\n  'communityshare.services.utility',\n  'communityshare.services.conversation'\n]);\n\nvar combineMessages = function(baseMessage, specificMessage) {\nvar msg = '';\nif (specificMessage) {\n  msg = ': ' + specificMessage;\n}\nvar message = baseMessage + msg;\nreturn message;\n};\n\nmodule.controller(\n'MessagesController',\n[\"$scope\", \"Session\", \"Conversation\", \"$location\", \"$modal\", function($scope, Session, Conversation, $location, $modal) {\n  $scope.Session = Session;\n  var user = Session.activeUser;\n  if (user) {\n    var conversationsPromise = Conversation.get_many({'user_id': user.id}, true);\n    conversationsPromise.then(\n      function(conversations) {\n        conversations.sort(function(a, b) {\n          return a.datetime_last_message < b.datetime_last_message;});\n        $scope.conversations = conversations;\n      },\n      function(errorMessage) {\n      });\n  }\n  $scope.showConversation = function(conversationId) {\n    $location.path('/conversation/' + conversationId);\n  };\n\n  $scope.showThankYou = function() {\n    $modal.open({\n      templateUrl: './static/templates/community_partner_thankyou.html',\n      controller: 'ModalController'\n    });\n  };\n\n  var showModal = $location.search().first;\n  if (showModal) {\n    $scope.showThankYou();\n  }\n}]);\n\nmodule.controller(\n'ConversationController',\n[\"$scope\", \"$q\", \"$location\", \"$timeout\", \"$modal\", \"Session\", \"Conversation\", \"Message\", \"User\", \"Share\", \"makeDialog\", \"conversation\", function($scope, $q, $location, $timeout, $modal, Session,\n         Conversation, Message, User, Share, makeDialog, conversation) {\n  $scope.Session = Session;\n  if ((conversation === undefined) || (Session.activeUser === undefined)) {\n    return;\n  }\n\n  var sharesPromise = Share.get_many({conversation_id: conversation.id});\n  $scope.otherUser = undefined;\n  $scope.conversation = conversation;\n  $scope.newMessage = undefined;\n  var makeNewMessage = function() {\n    var newMessage = new Message({\n      conversation_id: conversation.id,\n      sender_user_id: Session.activeUser.id,\n      content: ''\n    });\n    return newMessage;\n  };\n  var showErrorMessage = function(message) {\n    var baseMessage = 'Failed to load conversation';\n    var msg = combineMessages(baseMessage, message);\n    $scope.errorMessage = msg;\n  };\n  var refreshConversation = function() {\n    var refreshedConversationPromise = Conversation.get(conversation.id, true);\n    refreshedConversationPromise.then(\n      function(conversation) {\n        $scope.conversation = conversation;\n        $timeout(refreshConversation, 5000);\n        $scope.conversationErrorMessage = '';\n      },\n      function(message) {\n        var baseMessage = 'Failed to load conversation';\n        var msg = combineMessages(baseMessage, message);\n        $scope.conversationErrorMessage = msg;\n      }\n    );\n  };\n  var refreshShares = function() {\n    var refreshedSharesPromise = Share.get_many({conversation_id: conversation.id}, true);\n    refreshedSharesPromise.then(\n      function(shares) {\n        sortShares(shares);\n        $scope.shares = shares;\n        $timeout(refreshShares, 5000);\n        $scope.sharesErrorMessage = '';\n      },\n      function(message) {\n        var baseMessage = 'Failed to load shares';\n        var msg = combineMessages(baseMessage, message);\n        $scope.sharesErrorMessage = msg;\n      }\n    );\n  };\n  conversation.markMessagesAsViewed();\n  if (conversation.userA.id === Session.activeUser.id) {\n    $scope.otherUser = conversation.userB;\n  } else {\n    $scope.otherUser = conversation.userA;\n  }\n  $scope.messageHighlightClasses = {};\n  $scope.messageHighlightClasses[Session.activeUser.id] = 'highlight1';\n  $scope.messageHighlightClasses[$scope.otherUser.id] = 'highlight2';\n  $scope.newMessage = makeNewMessage();\n  refreshShares();\n  $timeout(refreshConversation, 5000);\n  $scope.createNewShare = function() {\n    var share = conversation.makeShare();\n    $scope.editShare(share);\n  };\n  $scope.editShare = function(share) {\n    var opts = {\n      templateUrl: './static/templates/share_edit.html',\n      controller: 'EditShareController',\n      resolve: {\n        share: function() {return share;}\n      }\n    };\n    $modal.open(opts);\n  };\n  var sortShares = function(shares) {\n    var sortedShares = Share.sortShares(shares);\n    $scope.futureShares = sortedShares.future;\n    $scope.pastShares = sortedShares.past;\n  };\n  $scope.sendMessage = function() {\n    var messagePromise = $scope.newMessage.save();\n    messagePromise.then(\n      function(message) {\n        message.sender_user = Session.activeUser;\n        $scope.conversation.messages.push(message);\n        $scope.newMessage = makeNewMessage();\n      },\n      showErrorMessage\n    );\n  };\n  $scope.now = new Date();\n  $scope.reviewEvent = function(event) {\n    $location.path('/event/' + event.id);\n  };\n  $scope.confirmShare = function(share) {\n    // Saving with no changes acts as an approve.\n    share.save();\n  };\n  $scope.cancelShare = function(share) {\n    var title = 'Cancel Share';\n    var msg = 'Do you really want to cancel this share with ' +\n      $scope.otherUser.name;\n    var btns = [{result:'yes', label: 'Yes', cssClass: 'btn-primary'},\n                {result:'no', label: 'No'}];\n    var d = makeDialog(title, msg, btns);\n    d.result.then(\n      function(result) {\n        if (result === 'yes') {\n          // FIXME: Send email to otherUser saying they want to cancel it.\n          var deletePromise = share.destroy();\n          deletePromise.then(\n            function() {\n            },\n            function(message) {\n              var baseMessage = 'Failed to cancel share';\n              var msg = combineMessages(baseMessage, message);\n              $scope.errorMessage = msg;\n            });\n        }\n      });\n  };\n}]);\n\nmodule.controller(\n'NewConversationController',\n[\"Session\", \"$scope\", \"$modalInstance\", \"userId\", \"searchId\", \"User\", \"Conversation\", \"Message\", \"Authenticator\", \"Messages\", function (Session, $scope, $modalInstance, userId, searchId, User,\n          Conversation, Message, Authenticator, Messages) {\n  var userPromise = User.get(userId);\n  $scope.Session = Session;\n  $scope.errorMessage = '';\n  if (!Session.activeUser.email_confirmed) {\n    // Refresh active User to make sure email is still unconfirmed.\n    User.get(Session.activeUser.id, true);\n  }\n  $scope.conversation = new Conversation({\n    title: undefined,\n    search_id: searchId,\n    userA_id: Session.activeUser.id,\n    userB_id: userId\n  });\n  $scope.resendEmailConfirmation = function() {\n    var emailConfirmPromise = Authenticator.requestConfirmEmail();\n    emailConfirmPromise.then(\n      function() {\n        Messages.info('Sent email confirmation email.');\n      },\n      function(errorMessage) {\n        Messages.error(errorMessage);\n      });\n  };\n  $scope.message = new Message({\n    conversation_id: undefined,\n    sender_user_id: Session.activeUser.id,\n    content: undefined\n  });\n  userPromise.then(\n    function(user) {\n      $scope.user = user;\n    });\n  $scope.cancel = function() {\n    $modalInstance.close();\n  };\n  $scope.startConversation = function() {\n    var conversationPromise = $scope.conversation.save();\n    conversationPromise.then(\n      function(conversation) {\n        $scope.errorMessage = '';\n        $scope.message.conversation_id = conversation.id;\n        var messagePromise = $scope.message.save();\n        messagePromise.then(\n          function() {\n            $modalInstance.close(conversation);\n          },\n          function(message) {\n            var baseMessage = 'Failed to save message';\n            $scope.errorMessage = combineMessages(baseMessage, message);\n          });\n      },\n      function(message) {\n        var baseMessage = 'Failed to save conversation';\n        $scope.errorMessage = combineMessages(baseMessage, message);\n      });\n  };\n}]);\n\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./controllers/conversation_controllers.js\n ** module id = 3\n ** module chunks = 0\n **/","'use strict';\n\nrequire( './authentication_controllers.js' );\nrequire( './misc_controllers.js' );\nrequire( './user_controllers.js' );\nrequire( './search_controllers.js' );\nrequire( './message_controllers.js' );\nrequire( './conversation_controllers.js' );\nrequire( './share_controllers.js' );\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./controllers/index.js\n ** module id = 4\n ** module chunks = 0\n **/","'use strict';\n\nvar angular = require( 'angular' );\n\nvar module = angular.module('communityshare.controllers.message', ['ngAnimate']);\n\nmodule.controller(\n'MessageController',\n[\"$scope\", \"Messages\", function ($scope, Messages) {\n  $scope.messages = Messages;\n}]);\n\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./controllers/message_controllers.js\n ** module id = 5\n ** module chunks = 0\n **/","'use strict';\n\nvar angular = require( 'angular' );\n\nvar module = angular.module(\n'communityshare.controllers.misc',\n[\n  'communityshare.services.authentication',\n  'communityshare.services.modal',\n  'communityshare.services.statistics',\n  'communityshare.services.message'\n]);\n\nmodule.controller(\n'ModalController',\n[\"$scope\", \"$modalInstance\", function($scope, $modalInstance) {\n  $scope.closeModal = function() {\n    $modalInstance.close();\n  };\n}]);\n\nmodule.controller(\n'NavigationController',\n[\"$scope\", \"Session\", \"Authenticator\", \"$location\", function($scope, Session, Authenticator, $location) {\n  $scope.Session = Session;\n  $scope.logout = function() {\n    Authenticator.clean();\n    $location.path('');\n  };\n}]);\n\nmodule.controller(\n'MainController',\n[\"$scope\", \"Session\", function($scope, Session) {\n  $scope.Session = Session;\n}]);\n\nmodule.controller(\n'AdminController',\n[\"Session\", \"$scope\", \"$location\", \"$http\", \"getStatistics\", function(Session, $scope, $location, $http, getStatistics) {\n  $scope.Session = Session;\n  $scope.searchText = {value: ''};\n  $scope.now = new Date();\n  $scope.tomorrow = new Date();\n  $scope.tomorrow.setDate($scope.tomorrow.getDate()+1);\n  $scope.daysAgo7 = new Date();\n  $scope.daysAgo7.setDate($scope.daysAgo7.getDate()-6);\n  $scope.daysAgo30 = new Date();\n  $scope.daysAgo30.setDate($scope.daysAgo7.getDate()-29);\n  $scope.searchForUsers = function() {\n    var searchParams = {\n      'searchText': $scope.searchText.value\n    };\n    $location.path('/searchusers').search(searchParams);\n  };\n  $scope.activateEmails = function () {\n    $http({\n      method: 'POST',\n      url: '/api/activate_email'\n    })\n  };\n  $scope.outputUserData = function () {\n    $http({\n      method: 'GET',\n      url: '/api/dump_csv'\n    })\n    .success(function (data, status, headers, config) {\n      console.log(data);\n    })\n    .error(function (data, status, headers, config) {\n      console.log(status);\n    })\n  };\n  var statisticsPromise = getStatistics();\n  $scope.statistics = [];\n  statisticsPromise.then(function(statistics) {\n    for (var dateString in statistics) {\n      var date = new Date(dateString);\n      statistics[dateString].date = date;\n      $scope.statistics.push(statistics[dateString]);\n    }\n    var comp = function(a, b) {\n      if (a.date > b.date) {\n        return 1;\n      } else if (a.date < b.date) {\n        return -1;\n      } else {\n        return 0;\n      }\n    };\n    $scope.statistics.sort(comp);\n    var l = $scope.statistics.length;\n    $scope.statisticsDate = $scope.statistics[l-1].date;\n    $scope.nTotalUsers = $scope.statistics[l-1].n_total_users;\n    $scope.nTotalEvents = $scope.statistics[l-1].n_total_events_done;\n    $scope.nUpcomingEvents = $scope.statistics[l-1].n_upcoming_events;\n    $scope.newUsersIn7Days = 0;\n    $scope.eventsIn7Days = 0;\n    for (var i=0; i<7; i++) {\n      $scope.newUsersIn7Days += $scope.statistics[l-1-i].n_new_users;\n      $scope.eventsIn7Days += $scope.statistics[l-1-i].n_events_done;\n    }\n    $scope.newUsersIn30Days = $scope.newUsersIn7Days;\n    $scope.eventsIn30Days = $scope.eventsIn7Days;\n    for (var j=7; j<30; j++) {\n      $scope.newUsersIn30Days += $scope.statistics[l-1-j].n_new_users;\n      $scope.eventsIn30Days += $scope.statistics[l-1-j].n_events_done;\n    }\n  });\n}]);\n\nmodule.controller(\n'NavbarController',\n[\"$scope\", \"Messages\", \"Session\", \"$modal\", \"Authenticator\", \"$location\", \"makeDialog\", function($scope, Messages, Session, $modal, Authenticator, $location,\n         makeDialog) {\n  $scope.deleteAccount = function() {\n    var title = 'Delete Account';\n      var msg = 'Do you really want to delete your Community Share account?';\n    var btns = [{result:'yes', label: 'Yes'},\n                {result:'no', label: 'No', cssClass: 'btn-primary'}];\n    var d = makeDialog(title, msg, btns);\n    d.result.then(\n      function(result) {\n        if (result === 'yes') {\n          var deletePromise = Session.activeUser.destroy();\n          deletePromise.then(\n            function() {\n              Authenticator.clean();\n              $location.path('/');\n            },\n            function(message) {\n                Messages.error(message);\n            });\n        }\n      });\n  };\n}]);\n\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./controllers/misc_controllers.js\n ** module id = 6\n ** module chunks = 0\n **/","'use strict';\n\nvar angular = require( 'angular' );\n\nvar module = angular.module(\n'communityshare.controllers.search',\n[\n  'communityshare.controllers.conversation'\n]);\n\nmodule.controller(\n'MatchesController',\n[\"$scope\", \"Session\", \"Search\", \"$location\", \"labelMapping\", \"makeDialog\", \"startConversation\", \"Messages\", \"$modal\", function($scope, Session, Search, $location, labelMapping, makeDialog,\n         startConversation, Messages, $modal) {\n  $scope.Session = Session;\n  $scope.labelMapping = labelMapping;\n  $scope.labelClasses = {\n    gradeLevels: 'grade-level-button',\n    engagementLevels: 'engagement-button',\n    subjectAreas: 'subject-area-button',\n    undefined: 'subject-area-button'\n  };\n  var user = Session.activeUser;\n  $scope.infoMessage = 'Loading searches...';\n  $scope.errorMessage = '';\n  $scope.title = '';\n  $scope.goToConversation = function(conversation) {\n    $location.path('/conversation/' + conversation.id);\n  };\n\n  $scope.showThankYou = function() {\n    $modal.open({\n      templateUrl: './static/templates/educator_thankyou.html',\n      controller: 'ModalController'\n    });\n  };\n\n  var showModal = $location.search().first;\n  if (showModal) {\n    $scope.showThankYou();\n  }\n\n  if (user) {\n    var searchesPromise = Search.get_many({'searcher_user_id': user.id}, true);\n    searchesPromise.then(\n      function(searches) {\n        $scope.infoMessage = '';\n        $scope.errorMessage = '';\n        $scope.searches = searches;\n        var compareSearchDate = function(search1, search2) {\n          var output = -1;\n          if (search1.created === search2.created) {\n            output = 0;\n          } else if (search1.created < search2.created) {\n            output = 1;\n          }\n          return output;\n        };\n        $scope.searches.sort(compareSearchDate);\n        var gotSomeMatches = false;\n        $scope.page = 0;\n        var page = $scope.page;\n        for (var i=0; i<$scope.searches.length; i++) {\n          var search = $scope.searches[i];\n          if ((!gotSomeMatches) && (search.labels.length > 0)) {\n            $scope.getMatches(search, page);\n            gotSomeMatches = true;\n          }\n        }\n      }\n    );\n  }\n  $scope.getMatches = function(search, page) {\n    $scope.page = page;\n    var matchesPromise = Search.getResults(search.id, page);\n    search.show = true;\n    search.infoMessage = 'Loading matches...';\n    search.errorMessage = '';\n    matchesPromise.then(\n      function(matches) {\n        search.matches = matches;\n        search.infoMessage = '';\n        search.errorMessage = '';\n      },\n      function(errorMessage) {\n        search.infoMessage = '';\n        search.errorMessage = errorMessage;\n      });\n  };\n  $scope.startConversation = startConversation;\n  $scope.editProfile = function() {\n    $location.path('settings');\n  };\n  $scope.deleteSearch = function(search) {\n    var title = 'Delete Search';\n    var msg = 'Do you really want to delete this search?  Others will no longer be able to find you by matching to the contents of this search.';\n    var btns = [{result:'yes', label: 'Yes'},\n                {result:'no', label: 'No', cssClass: 'btn-primary'}];\n    var d = makeDialog(title, msg, btns);\n    d.result.then(\n      function(result) {\n        if (result === 'yes') {\n          var deletePromise = search.destroy();\n          deletePromise.then(\n            function() {\n            },\n            function(message) {\n                Messages.error(message);\n            });\n        }\n      });\n  };\n  $scope.goToPage = function (search, page) {\n    $scope.page = page;\n    $scope.getMatches(search, page);\n  };\n  $scope.paginationRange = function (max) {\n    var pages, min, i;\n    min = $scope.page;\n    pages = [];\n\n    if (min < 5) {\n      min = 0;\n      max = 5;\n    }\n\n    if (min >= 5) {\n      max = min + 2;\n      min -= 2;\n    }\n\n    for (i = min; i <= max; i++) {\n      pages.push(i);\n    }\n    return pages;\n  };\n}]);\n\nmodule.controller(\n'SearchResultsController',\n[\"Session\", \"$scope\", \"$location\", \"$routeParams\", \"$modal\", \"Search\", \"Messages\", \"labelMapping\", function(Session, $scope, $location, $routeParams, $modal, Search, Messages, labelMapping) {\n  $scope.Session = Session;\n  var searchId = $routeParams.searchId;\n  $scope.infoMessage = 'Searching for matches...';\n  $scope.errorMessage = '';\n  $scope.title = '';\n  $scope.goToConversation = function(conversation) {\n    $location.path('/conversation/' + conversation.id);\n  };\n\n  $scope.labelClasses = {\n    gradeLevels: 'light-yellow-button',\n    engagementLevels: 'light-blue-button',\n    subjectAreas: 'light-green-button',\n    undefined: 'light-green-button'\n  };\n  $scope.labelMapping = labelMapping;\n\n  if (searchId !== undefined) {\n    var searchesPromise = Search.getResults(searchId);\n    searchesPromise.then(\n      function(searches) {\n        $scope.searches = searches;\n        if (searches.length === 0) {\n          $scope.infoMessage = 'No matches found.';\n        } else {\n          $scope.infoMessage = '';\n          if (searches[0].searcher_role === 'educator') {\n            $scope.title = 'Best Educator Matches';\n          } else {\n            $scope.title = 'Best Community Partner Matches';\n          }\n        }\n        $scope.errorMessage = '';\n      },\n      function(message) {\n        var msg = '';\n        if (message) {\n          msg = ': ' + message;\n        }\n        $scope.errorMessage = 'Failed to find matches' + msg;\n      });\n  }\n}]);\n\nmodule.controller(\n'SearchEditController',\n[\"Session\", \"$location\", \"$scope\", \"$routeParams\", \"Search\", \"Messages\", function(Session, $location, $scope, $routeParams, Search, Messages) {\n  $scope.Session = Session;\n  var searchId = $routeParams.searchId;\n  if (searchId !== undefined) {\n    var searchPromise = Search.get(searchId);\n    searchPromise.then(\n      function(search) {\n        $scope.search = search;\n      },\n      function(message) {\n        Messages.error(message);\n      });\n  } else {\n    var searcher_role;\n    var searching_for_role;\n    if (Session.activeUser.is_educator) {\n      searcher_role = 'educator';\n      searching_for_role = 'partner';\n    } else {\n      searcher_role = 'partner';\n      searching_for_role = 'educator';\n    }\n    $scope.search = new Search({\n      searcher_user_id: Session.activeUser.id,\n      searcher_role: searcher_role,\n      searching_for_role: searching_for_role,\n      zipcode: Session.activeUser.zipcode,\n      labels: []\n    });\n  }\n\n  $scope.saveSettings = function() {\n    var promise = $scope.search.save();\n    promise.then(\n      function() {\n        $location.path('/matches');\n      },\n      function(message) {\n        Messages.error(message);\n      });\n  };\n\n  $scope.searchText = {value: ''};\n  $scope.userSearch = function() {\n    if ($scope.searchText.value) {\n      $location.path('/searchusers/' + $scope.searchText.value);\n    }\n  };\n}]);\n\nmodule.controller(\n'SearchUsersController',\n[\"$scope\", \"$location\", \"$q\", \"User\", \"Session\", \"$routeParams\", \"parseyyyyMMdd\", \"startConversation\", function($scope, $location, $q, User, Session, $routeParams, parseyyyyMMdd,\n         startConversation) {\n  $scope.Session = Session;\n  $scope.startConversation = startConversation;\n  $scope.infoMessage = 'Searching for matching users...';\n  $scope.users = undefined;\n  $scope.prevSearchText = $routeParams.searchText;\n  $scope.searchText = {value: $routeParams.searchText};\n  var start = $routeParams.created_start;\n  if (start) {\n    start = parseyyyyMMdd(start);\n  }\n  var stop = $routeParams.created_stop;\n  if (stop) {\n    stop = parseyyyyMMdd(stop);\n  }\n  $scope.start = start;\n  $scope.stop = stop;\n  var searchForUsers = function() {\n    var searchParams = {\n      'date_created.greaterthan': start,\n      'date_created.lessthan': stop,\n      'search_text': $routeParams.searchText\n    };\n    var searchPromise = User.search(searchParams);\n    searchPromise.then(\n      function(results) {\n        var addedIds = {};\n        var uniqueUsers = [];\n        var users;\n        if (results.byName === undefined) {\n          users = results;\n        } else {\n          users = results.byName.concat(results.byEmail);\n        }\n        for (var i=0; i<users.length; i++) {\n          var user = users[i];\n          if (!(user.id in addedIds)) {\n            uniqueUsers.push(user);\n            addedIds[user.id] = true;\n          }\n        }\n        var compare = function(a, b) {\n          var aUC = a.name.toUpperCase();\n          var bUC = b.name.toUpperCase();\n          if (aUC > bUC) {\n            return 1;\n          } else if (aUC < bUC) {\n            return -1;\n          } else {\n            return 0;\n          }\n        };\n        uniqueUsers.sort(compare);\n        $scope.users = uniqueUsers;\n        $scope.infoMessage = '';\n        $scope.errorMessage = '';\n      },\n      function(message) {\n        var msg = '';\n        if (message) {\n          msg = ': ' + message;\n        }\n        $scope.errorMessage = 'Failed to load users' + msg;\n        $scope.infoMessage = '';\n      });\n  };\n  searchForUsers();\n  $scope.newSearch = function() {\n    $location.path('/searchusers/' + $scope.searchText.value);\n  };\n}]);\n\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./controllers/search_controllers.js\n ** module id = 7\n ** module chunks = 0\n **/","'use strict';\n\nvar angular = require( 'angular' );\n\nvar module = angular.module(\n'communityshare.controllers.share',\n[\n  'communityshare.services.share',\n  'communityshare.services.conversation'\n]);\n\nmodule.controller(\n'SharesController',\n[\"Session\", \"$scope\", \"Share\", \"startConversation\", function(Session, $scope, Share, startConversation) {\n  $scope.Session = Session;\n  $scope.startConversation = startConversation;\n  if ($scope.Session.activeUser) {\n    var sharesPromise = Share.get_many({'user_id': Session.activeUser.id}, true);\n    $scope.errorMessage = '';\n    $scope.infoMessage = 'Loading shares...';\n    sharesPromise.then(\n      function(shares) {\n        $scope.errorMessage = '';\n        $scope.infoMessage = '';\n        $scope.shares = shares;\n        var sortedShares = Share.sortShares(shares);\n        $scope.futureShares = sortedShares.future;\n        $scope.pastShares = sortedShares.past;\n      },\n      function(errorMessage) {\n        $scope.errorMessage = errorMessage;\n      });\n  }\n}]);\n\nmodule.controller(\n'ShareController',\n[\"Session\", \"$scope\", \"$routeParams\", \"Share\", function(Session, $scope, $routeParams, Share) {\n  $scope.Session = Session;\n  var shareId = $routeParams.shareId;\n  if (shareId !== undefined) {\n    var sharePromise = Share.get(shareId);\n    sharePromise.then(\n      function(share) {\n        $scope.share = share;\n      },\n      function(message) {\n        var msg = 'Failed to load share';\n        if (message) {\n          msg += ': ' + message;\n        }\n        $scope.errorMessage = msg;\n      });\n  }\n}]);\n\n\nmodule.controller(\n'EditShareController',\n[\"$scope\", \"share\", \"$modalInstance\", function($scope, share, $modalInstance) {\n  $scope.share = share;\n  $scope.events = share.events;\n  $scope.cancel = $modalInstance.close;\n  var showErrorMessage = function(message) {\n    var msg = 'Failed to save share details';\n    if (message) {\n      msg += ': ' + message;\n    }\n    $scope.errorMessage = msg;\n  };\n  var close = function() {\n    $modalInstance.close($scope.share);\n  };\n  $scope.save = function() {\n    for (var i=0; i<$scope.share.events.length; i++) {\n      $scope.share.events[i].updateDateTimes();\n    }\n    var sharePromise = $scope.share.save();\n    sharePromise.then(\n      close,\n      showErrorMessage);\n  };\n}]);\n\nmodule.controller(\n'EventsController',\n[\"$scope\", \"$routeParams\", \"Session\", \"Evnt\", \"parseyyyyMMdd\", function($scope, $routeParams, Session, Evnt, parseyyyyMMdd) {\n  $scope.Session = Session;\n  var searchParams = {};\n  var start = $routeParams.start;\n  if (start) {\n    start = parseyyyyMMdd(start);\n    searchParams['datetime_start.greaterthan'] = start;\n  }\n  var stop = $routeParams.stop;\n  if (stop) {\n    stop = parseyyyyMMdd(stop);\n    searchParams['datetime_start.lessthan'] = stop;\n  }\n  $scope.start = start;\n  $scope.stop = stop;\n  var eventsPromise = Evnt.get_many(searchParams);\n  $scope.infoMessage = 'Loading events...';\n  $scope.errorMessage = '';\n  eventsPromise.then(\n    function(events) {\n      $scope.events = events;\n      $scope.infoMessage = '';\n      $scope.errorMessage = '';\n    },\n    function(message) {\n      $scope.events = [];\n      $scope.infoMessage = '';\n      var msg = 'Failed to load events';\n      if (message) {\n        msg += ': ' + message;\n      }\n      $scope.errorMessage = msg;\n    });\n}]);\n\nmodule.controller(\n'EventController',\n[\"$scope\", \"Session\", \"evnt\", \"Question\", function($scope, Session, evnt, Question) {\n  $scope.Session = Session;\n  $scope.evnt = evnt;\n  $scope.questions = [];\n  var questionsPromise = Question.get_many_with_answers(\n    Session.activeUser.id,\n    {question_type: 'post_event'},\n    {about_event_id: evnt.id}\n  );\n  questionsPromise.then(\n    function(questions) {\n      $scope.questions = [];\n      // We only show the unanswered questions.\n      for (var i=0; i<questions.length; i++) {\n        var question = questions[i];\n        if (!question.answer.text) {\n          question.answer.about_event_id = evnt.id;\n          $scope.questions.push(question);\n        }\n      }\n    });\n  $scope.questions = [];\n  var makeQuestionRemover = function(question) {\n    return function() {\n      var index = $scope.questions.indexOf(question);\n      if (index >= 0) {\n        $scope.questions.splice(index, 1);\n      }\n    };\n  };\n  $scope.save = function() {\n    var allPromises = [];\n    var saveAnswerPromises = [];\n    for (var i=0; i<$scope.questions.length; i++) {\n      var question = $scope.questions[i];\n      var answer = question.answer;\n      if (answer.text) {\n        var saveAnswerPromise = answer.save();\n        saveAnswerPromise.then(\n          // Wrapping function since it is in a loop.\n          makeQuestionRemover(question)\n        );\n        saveAnswerPromises.push(saveAnswerPromise);\n        allPromises.push(saveAnswerPromise);\n      }\n    }\n  };\n}]);\n\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./controllers/share_controllers.js\n ** module id = 8\n ** module chunks = 0\n **/","'use strict';\n\nvar angular = require( 'angular' );\n\nvar module = angular.module(\n'communityshare.controllers.user',\n[\n  'communityshare.services.user',\n  'communityshare.directives.user',\n  'communityshare.directives.institutions',\n  'angularFileUpload'\n]);\n\n// User Views\n\nmodule.controller(\n'UserController',\n[\"$scope\", \"$routeParams\", \"User\", \"Session\", \"Question\", \"Conversation\", \"Evnt\", \"startConversation\", \"makeDialog\", function($scope, $routeParams, User, Session, Question, Conversation,\n         Evnt, startConversation, makeDialog) {\n  $scope.Session = Session;\n  var userId = $routeParams.userId;\n  var userPromise = User.get(userId);\n  $scope.message = 'Loading user...';\n  $scope.startConversation = startConversation;\n  userPromise.then(\n    function(user) {\n      $scope.message = '';\n      $scope.user = user;\n      if ($scope.communityPartnerViewMethods.onUserUpdate) {\n        $scope.communityPartnerViewMethods.onUserUpdate(user);\n      }\n      if ($scope.educatorViewMethods.onUserUpdate) {\n        $scope.educatorViewMethods.onUserUpdate(user);\n      }\n    },\n    function() {\n      $scope.message = 'Could not find user with id=' + userId;\n    });\n  $scope.communityPartnerViewMethods = {};\n  $scope.educatorViewMethods = {};\n  var questionsPromise = Question.get_many_with_answers(\n    userId,\n    {'question_type.in': ['signup_community_partner', 'signup', 'signup_educator']}\n  );\n  if ($scope.Session.activeUser && $scope.Session.activeUser.is_administrator) {\n    var conversationsPromise = Conversation.get_many({user_id: userId});\n    conversationsPromise.then(\n      function(conversations) {\n        $scope.conversations = conversations;\n      });\n    var eventsPromise = Evnt.get_many({user_id: userId});\n    eventsPromise.then(\n      function(events) {\n        $scope.events = events;\n      });\n  }\n  questionsPromise.then(\n    function(questions) {\n      $scope.questions = [];\n      for (var i=0; i<questions.length; i++) {\n        var question = questions[i];\n        if (question.answer.text) {\n          $scope.questions.push(question);\n        }\n      }\n    });\n\n  $scope.deleteUser = function() {\n    var title = 'Delete User';\n    var msg = 'Do you really want to delete the account of \"' + $scope.user.name + '\"?';\n    var btns = [{result:'yes', label: 'Yes'},\n                {result:'no', label: 'No', cssClass: 'btn-primary'}];\n    var d = makeDialog(title, msg, btns);\n    d.result.then(\n      function(result) {\n        if (result === 'yes') {\n          var deletePromise = $scope.user.destroy();\n          deletePromise.then(\n            function() {\n            },\n            function(message) {\n                Messages.error(message);\n            });\n        }\n      });\n  };\n}]);\n\n// User Signups\n\nvar commonSignupLogic = function($scope, user, search, Messages, $location,\n                               $q, Question, Answer, support) {\n$scope.user = user;\n$scope.support = support;\n$scope.search = search;\n$scope.institutionMethods = {};\n$scope.agreeToFollowHomePolicies = {\n  value: false\n};\n\n// Get questions to display during signup.\n$scope.questions = [];\nvar questionsPromise = Question.get_many({\n  'question_type.in': ['signup_community_partner', 'signup', 'signup_educator']\n});\nquestionsPromise.then(\n  function(questions) {\n    $scope.questions = questions;\n    for (var i=0; i<$scope.questions.length; i++) {\n      var question = $scope.questions[i];\n      question.answer = new Answer({question_id: question.id});\n    }\n  });\n$scope.enoughLabelsSelected = function() {\n  var cpl = user.community_partner_profile_search.labels;\n  var el = user.educator_profile_search.labels;\n  var enoughSelected = ((cpl.length > 0) || (el.length > 0));\n  return enoughSelected;\n};\n$scope.submit = function() {\n  if ($scope.enoughLabelsSelected() && ($scope.institutionMethods.isValid())\n      && (($scope.agreeToFollowHomePolicies.value) || (!isEducator))) {\n    $scope.institutionMethods.form.submitted = true;\n    $scope.submitted = true;\n    var isEducator = false;\n    if ((user.educator_profile_search) && (user.educator_profile_search.labels) &&\n        (user.educator_profile_search.labels.length > 0)) {\n      isEducator = true;\n    }\n    // Save changes made to user.\n    var userPromise = user.save();\n    var allPromises = [userPromise];\n    // And save the answers to questions.\n    for (var i=0; i<$scope.questions.length; i++) {\n      var question = $scope.questions[i];\n      if (question.answer.text) {\n        allPromises.push(question.answer.save());\n      }\n    }\n    $q.all(allPromises).then(\n      function() {\n        $location.path('/signup/personal');\n      },\n      function(message) {\n        Messages.error(message);\n      });\n  }\n};\n};\n\nmodule.controller(\n'SignupCommunityPartnerController',\n[\"$scope\", \"Session\", \"Messages\", \"$location\", \"$q\", \"Search\", \"Question\", \"Answer\", \"$modal\", function($scope, Session, Messages, $location, $q, Search,\n         Question, Answer, $modal) {\n  $scope.Session = Session;\n  var user = Session.activeUser;\n  var search;\n  if (user) {\n    search = user.community_partner_profile_search;\n  }\n  $scope.isCommunityPartner = true;\n  // Signup logic common to Community Partners and Educators\n  commonSignupLogic($scope, user, search, Messages, $location, $q,\n                   Question, Answer);\n  $scope.showTutorial = function() {\n    $modal.open({\n      templateUrl: './static/templates/community_partner_tutorial.html',\n      controller: 'ModalController'\n    });\n  };\n  $scope.showTutorial();\n}]);\n\nmodule.controller(\n'SignupPersonalController',\n[\"$scope\", \"Session\", \"$fileUploader\", \"$http\", \"$location\", \"support\", function($scope, Session, $fileUploader, $http, $location, support) {\n  $scope.support = support;\n  $scope.Session = Session;\n  $scope.user = Session.activeUser;\n  $scope.submitAttempted = false;\n  if (Session.activeUser) {\n    $scope.user.wants_update_emails = true;\n    $scope.submit = function(personalSettingsForm) {\n      $scope.submitAttempted = true;\n      if (personalSettingsForm.$valid) {\n        if (uploader) {\n          uploader.uploadAll();\n        }\n        var userPromise = $scope.user.save();\n        userPromise.then(\n          function() {\n            $location.path('/');\n            $location.search('first');\n          },\n          function(errorMessage) {\n            $scope.errorMessage = errorMessage;\n          });\n      }\n    };\n    $scope.validImage = true;\n\n    if (support.fileUploader) {\n      var uploader = $scope.uploader = $fileUploader.create({\n        scope: $scope,\n        url: '/api/user/'+$scope.user.id+'/picture',\n        headers: $http.defaults.headers.common,\n        filters: [\n          function (item) {\n            var is_image = (item.type.substring(0, 5) === 'image');\n            $scope.validImage = is_image;\n            uploader.queue.splice(0, uploader.queue.length);\n            return is_image;\n          }\n        ]\n      });\n\n      // Make sure we only have one file in the uploader queue\n      uploader.bind('afteraddingfile', function () {\n        if (uploader.queue.length > 1) {\n          uploader.queue.splice(0, uploader.queue.length-1);\n        }\n      });\n    }\n\n  }\n}]);\n\nmodule.controller(\n'SignupEducatorController',\n[\"$scope\", \"Session\", \"Messages\", \"$location\", \"$q\", \"Search\", \"Question\", \"Answer\", \"$modal\", function($scope, Session, Messages, $location, $q, Search,\n        Question, Answer, $modal) {\n  $scope.Session = Session;\n  var user = Session.activeUser;\n  var search;\n  if (user) {\n    search = user.educator_profile_search;\n  }\n  $scope.isEducator = true;\n  $scope.questions = [];\n  // Signup logic common to Community Partners and Educators\n  commonSignupLogic($scope, user, search, Messages, $location, $q,\n                   Question, Answer);\n  $scope.showTutorial = function() {\n    $modal.open({\n      templateUrl: './static/templates/educator_tutorial.html',\n      controller: 'ModalController'\n    });\n  };\n  $scope.showTutorial();\n}]);\n\n// Settings Controller\n\nmodule.controller(\n'SettingsController',\n[\"$scope\", \"$location\", \"Session\", \"Messages\", \"$q\", \"Question\", \"Answer\", \"$fileUploader\", \"$http\", \"makeDialog\", \"Authenticator\", \"$rootScope\", \"support\", function($scope, $location, Session, Messages, $q,\n         Question, Answer, $fileUploader, $http, makeDialog, Authenticator, $rootScope,\n         support) {\n  $scope.support = support;\n\n  var justSaved = false;\n  var turnOffLocationChangeHandler;\n  $scope.institutionMethods = {};\n\n  var onLocationChange = function(event, newUrl) {\n    if (!justSaved && (($scope.personalSettingsForm && $scope.personalSettingsForm.$dirty) ||\n        ($scope.accountSettingsForm && $scope.accountSettingsForm.$dirty) ||\n        ($scope.user.community_partner_profile_search &&\n         $scope.user.community_partner_profile_search.dirty) ||\n        ($scope.user.educator_profile_search &&\n         $scope.user.educator_profile_search.dirty)))\n    {\n      var title = 'Changes not Saved';\n      var msg = 'Do you really want to leave this page without saving your changes?';\n      var btns = [{result:'yes', label: 'Yes'},\n                  {result:'no', label: 'No', cssClass: 'btn-primary'}];\n      var d = makeDialog(title, msg, btns);\n      d.result.then(\n        function(result) {\n          if (result === 'yes') {\n            turnOffLocationChangeHandler();\n            var relUrl = newUrl.replace(/^.*\\#/, \"\");\n            $location.path(relUrl);\n          }\n        });\n      event.preventDefault();\n    }\n  };\n\n  turnOffLocationChangeHandler = $rootScope.$on('$locationChangeStart', onLocationChange);\n\n  $scope.Session = Session;\n  if (!Session.activeUser) {\n    return;\n  }\n  $scope.user = Session.activeUser;\n  $scope.isCommunityPartner = $scope.user.is_community_partner;\n  $scope.isEducator = $scope.user.is_educator;\n  $scope.properties = {};\n  $scope.settingsTabSet = {};\n  // passwordMethods hooks up the password matching directives.\n  $scope.passwordMethods = {};\n  // Get the questions\n  if ($scope.user) {\n    var questionsPromise = Question.get_many_with_answers(\n      $scope.user.id,\n      {'question_type.in': ['signup_community_partner', 'signup_educator']}\n    );\n    questionsPromise.then(\n      function(questions) {\n        $scope.questions = questions;\n      });\n  }\n\n  $scope.$on('personalSettingsForm', function(event, value) {\n    $scope.personalSettingsForm = value.personalSettingsForm;\n  });\n  $scope.$on('accountSettingsForm', function(event, value) {\n    $scope.accountSettingsForm = value.accountSettingsForm;\n  });\n\n  var onError = function(message) {\n    var msg = 'Failed to update settings';\n    if (message) {\n      msg += ': ' + message;\n    }\n    $scope.errorMessage = msg;\n    $scope.successMessage = '';\n  };\n\n  if (support.fileUploader) {\n    $scope.validImage = true;\n    var uploader = $scope.uploader = $fileUploader.create({\n      scope: $scope,\n      url: '/api/user/'+$scope.user.id+'/picture',\n      headers: $http.defaults.headers.common,\n      filters: [\n        function (item) {\n          var is_image = (item.type.substring(0, 5) === 'image');\n          $scope.validImage = is_image;\n          uploader.queue.splice(0, uploader.queue.length);\n          return is_image;\n        }\n      ]\n    });\n\n    // Make sure we only have one file in the uploader queue\n    uploader.bind('afteraddingfile', function () {\n      if (uploader.queue.length > 1) {\n        uploader.queue.splice(0, uploader.queue.length-1);\n      }\n    });\n  }\n\n  $scope.resendEmailConfirmation = function() {\n    var emailConfirmPromise = Authenticator.requestConfirmEmail();\n    emailConfirmPromise.then(\n      function() {\n        Messages.info('Sent email confirmation email.');\n      },\n      function(errorMessage) {\n        Messages.error(errorMessage);\n      });\n  };\n\n  $scope.save = function() {\n    var saveUserPromise = $scope.user.save();\n    if (uploader) {\n      uploader.uploadAll();\n    }\n    var allPromises = [saveUserPromise];\n    if ($scope.questions) {\n      var saveAnswerPromises = [];\n      for (var i=0; i<$scope.questions.length; i++) {\n        var answer = $scope.questions[i].answer;\n        if (answer.text) {\n          var saveAnswerPromise = answer.save();\n          saveAnswerPromises.push(saveAnswerPromise);\n          allPromises.push(saveAnswerPromise);\n        }\n      }\n    }\n    var combinedPromise = $q.all(allPromises);\n    saveUserPromise.then(\n      function(user) {\n        Session.activeUser.updateFromData(user.toData());\n      },\n      onError);\n    combinedPromise.then(\n      function() {\n        justSaved = true;\n        $location.path('/');\n      });\n  };\n\n}]);\n\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./controllers/user_controllers.js\n ** module id = 9\n ** module chunks = 0\n **/","'use strict';\n\nrequire( './mainview_directives.js' );\nrequire( './user_directives.js' );\nrequire( './label_directives.js' );\nrequire( './institution_directives.js' );\nrequire( './survey_directives.js' );\n\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./directives/index.js\n ** module id = 10\n ** module chunks = 0\n **/","'use strict';\n\nvar angular = require( 'angular' );\n\nvar module = angular.module('communityshare.directives.institutions', [\n'communityshare.services.user'\n]);\n\nmodule.directive(\n'csInstitutions',\n [\"Session\", \"Institution\", function(Session, Institution) {\n   return {\n     scope: {\n       user: '=',\n       methods: '=',\n       isEducator: '@',\n       isCommunityPartner: '@'\n     },\n     templateUrl: './static/templates/institution_adder.html',\n     controller: [\"$scope\", function($scope) {\n       $scope.isEducator = ($scope.isEducator === 'true');\n       $scope.isCommunityPartner = ($scope.isCommunityPartner === 'true');\n       $scope.updateInstitutions = function() {\n         if ($scope.noInstitutions) {\n           $scope.user.institution_associations = [];\n           $scope.user.addNewInstitutionAssociation();\n           $scope.institutionsForm.submitted = false;\n         }\n       };\n       $scope.$watch('institutionsForm', function() {\n         $scope.methods.form = $scope.institutionsForm;\n       });\n       $scope.methods.isValid = function() {\n         return $scope.institutionsForm.$valid || $scope.noInstitutions;\n       };\n       // FIXME: Not scaleable.  Change to get the most popular.\n       var institutionsPromise = Institution.get_many();\n       $scope.options = {institutions: [],\n                         institutionTypes: []\n                        };\n       if ($scope.isCommunityPartner) {\n         $scope.institutionTypes = [\n           'Corporation', 'Freelancer', 'Nonprofit', 'Academic',\n           'Government', 'Other'\n           ];\n         $scope.roles = [];\n       } else if ($scope.isEducator) {\n         $scope.institutionTypes = [\n           'Public District School',\n           'Public Charter',\n           'Private School',\n           'Home School',\n           'Higher Education',\n           'Nonprofit',\n           'After School Program',\n           'Other'\n         ];\n        $scope.roles = [\n          'Classroom teacher',\n          'Curriculum Coordinator',\n          'Administator',\n          'Parent',\n          'Other'\n        ];\n       }\n       if ($scope.user.institution_associations.length === 0) {\n         $scope.user.institution_associations.push({institution: {}});\n       }\n       institutionsPromise.then(\n         function(institutions) {\n           $scope.institutions = institutions;\n         });\n     }]\n   };\n }]);\n\nmodule.directive(\n'csInstitutionAssociationEdit',\nfunction() {\n  return {\n    templateUrl: 'static/templates/institution_association.html',\n    controller: [\"$scope\", function($scope) {\n      $scope.$watch('institutionsForm.submitted', function() {\n        if ($scope.institutionsForm) {\n          $scope.submitted = $scope.institutionsForm.submitted;\n        }\n      });\n    }]\n  };\n});\n\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./directives/institution_directives.js\n ** module id = 11\n ** module chunks = 0\n **/","'use strict';\n\nvar angular = require( 'angular' );\n\nvar module = angular.module('communityshare.directives.labels', [\n'communityshare.services.search'\n]);\n\nmodule.factory(\n'makeBaseLabels',\nfunction() {\n  var makeBaseLabels = function() {\n    var labels = {\n      // Grade levels\n      gradeLevels: {\n        suggested: ['K-5', '6-8', '9-12', 'College', 'Adult'] ,\n        other: ['K-3', '4-5', '6-8', '9-12', 'Preschool']\n      },\n      subjectAreas: {\n        communityPartnerSuggested: [\n          'Science', 'Technology', 'Engineering', 'Math',\n          'Visual Arts', 'Digital Media', 'Wildlife Biology',\n          'English/Literature', 'Performing Arts', 'History',\n          'PE/Sports', 'Foreign Languages', 'Government',\n          'Health', 'Journalism', 'Culinary Arts',\n          'Entrepreneurship'\n        ],\n        educatorSuggested: [\n          'Science', 'Technology', 'Engineering', 'Math',\n          'Visual Arts', 'Digital Media', 'Wildlife Biology',\n          'English/Literature', 'Performing Arts', 'History',\n          'PE/Sports', 'Foreign Languages', 'Government',\n          'Health', 'Journalism', 'Culinary Arts',\n          'Entrepreneurship'\n        ],\n        other: []\n      },\n      // Level of Engagement\n      engagementLevels: {\n        suggested: [\n          'Guest Speaker', 'Host Field Trip', 'Judge Student Competition',\n          'Participate in Career Day', 'Collaborate on a Class Project',\n          'Mentor Students', 'Brainstorm Curriculum Ideas with Educator',\n          'Hands-On Demonstration'\n        ],\n        other: [\n        ]\n      }\n    };\n\n    var allLabels = {\n      gradeLevels: labels.gradeLevels.suggested.concat(\n        labels.gradeLevels.other),\n      engagementLevels: labels.engagementLevels.suggested.concat(\n        labels.engagementLevels.other),\n      subjectAreas: labels.subjectAreas.communityPartnerSuggested.concat(\n        labels.subjectAreas.educatorSuggested).concat(\n          labels.subjectAreas.other)\n    };\n    var educatorSuggestedLabels = {\n      gradeLevels: labels.gradeLevels.suggested,\n      engagementLevels: labels.engagementLevels.suggested,\n      subjectAreas: labels.subjectAreas.educatorSuggested\n    };\n    var communityPartnerSuggestedLabels = {\n      gradeLevels: labels.gradeLevels.suggested,\n      engagementLevels: labels.engagementLevels.suggested,\n      subjectAreas: labels.subjectAreas.communityPartnerSuggested\n    };\n    var communityPartnerAndEducatorSuggestedLabels = {\n      gradeLevels: labels.gradeLevels.suggested,\n      engagementLevels: labels.engagementLevels.suggested,\n      subjectAreas: labels.subjectAreas.communityPartnerSuggested.concat(\n        labels.subjectAreas.educatorSuggested)\n    };\n\n\n    return {'educatorSuggested': educatorSuggestedLabels,\n            'communityPartnerSuggested': communityPartnerSuggestedLabels,\n            'communityPartnerAndEducatorSuggested': communityPartnerAndEducatorSuggestedLabels,\n            'all': allLabels};\n  };\n\n  return makeBaseLabels;\n});\n\nmodule.factory(\n'labelMapping',\n[\"makeBaseLabels\", function(makeBaseLabels) {\n  var labellists = makeBaseLabels().all;\n  var labelMapping = {};\n  for (var key in labellists) {\n    for (var i=0; i<labellists[key].length; i++) {\n      var label = labellists[key][i];\n      labelMapping[label] = key;\n    }\n  }\n  return labelMapping;\n}]);\n\nmodule.factory(\n'orderLabels',\n[\"labelMapping\", function(labelMapping) {\n  var orderLabels = function(labels) {\n    var gradeLevels = [];\n    var subjectAreas = [];\n    var engagementLevels = [];\n    for (var i=0; i<labels.length; i++) {\n      var label = labels[i];\n      if (labelMapping[label] === 'gradeLevels') {\n        gradeLevels.push(label);\n      } else if (labelMapping[label] == 'engagementLevels') {\n        engagementLevels.push(label);\n      } else {\n        subjectAreas.push(label);\n      }\n    }\n    var combinedLabels = gradeLevels.concat(subjectAreas).concat(engagementLevels);\n    return combinedLabels;\n  };\n  return orderLabels;\n}]);\n\nmodule.factory(\n'LabelDisplay',\n[\"makeBaseLabels\", \"labelMapping\", function(makeBaseLabels, labelMapping) {\n  var LabelDisplay = function(search, type) {\n    this.search = search;\n    var baseLabels = makeBaseLabels();\n    this.all = {};\n    this.active = {};\n    if (type === 'educator') {\n      this.all = baseLabels.educatorSuggested;\n    } else {\n      this.all = baseLabels.communityPartnerSuggested;\n    }\n    for (var i=0; i<search.labels.length; i++) {\n      var label = search.labels[i];\n      this.active[label] = true;\n      var key = labelMapping[label];\n      if (key === undefined) {\n        key = 'subjectAreas';\n        this.all[key].push(label);\n      }\n    }\n  };\n  LabelDisplay.prototype.setSelected = function(label) {\n    this.active[label] = true;\n    var index = this.search.labels.indexOf(label);\n    if (index === -1) {\n      this.search.labels.push(label);\n    }\n    this.search.dirty = true;\n  };\n  LabelDisplay.prototype.setUnselected = function(label) {\n    this.active[label] = false;\n    var index = this.search.labels.indexOf(label);\n    if (index >= 0) {\n      this.search.labels.splice(index, 1);\n    }\n    this.search.dirty = true;\n  };\n  LabelDisplay.prototype.toggle = function(label) {\n    if (this.active[label]) {\n      this.setUnselected(label);\n    } else {\n      this.setSelected(label);\n    }\n  };\n  return LabelDisplay;\n}]);\n\nmodule.directive(\n'csNewLabel',\n function() {\n   return {\n     scope: {\n       methods: '='\n     },\n     controller: [\"$scope\", function($scope) {\n       $scope.update = function() {\n         if ($scope.methods.onUpdate) {\n           $scope.methods.onUpdate();\n         }\n       };\n     }],\n     link: function(scope, elm) {\n       elm.bind('keydown', function(event) {\n         var ENTERCODE = 13;\n         var TABCODE = 9;\n         if ((event.keyCode === ENTERCODE) || (event.keyCode === TABCODE)) {\n           scope.$apply(scope.update);\n         }\n       });\n     }\n   };\n });\n\nvar LabelsController = function($scope, LabelDisplay, getAllLabels) {\n// Problem with search getting overridden.\n$scope.display = new LabelDisplay($scope.search, $scope.type);\n$scope.newLabel = {\n  name: ''\n};\nvar labelsPromise = getAllLabels();\n$scope.allLabels = [];\nlabelsPromise.then(\n  function(labels) {\n    $scope.allLabels = labels;\n  },\n  function(){});\n$scope.typeaheadSelect = function() {\n  $scope.newLabelMethods.onUpdate();\n};\n$scope.newLabelMethods = {\n  onUpdate: function() {\n    var splitNames\n      , newLabelName\n      , i\n      , index\n      ;\n\n    splitNames = $scope.newLabel.name.split(',');\n    for (i = 0; i < splitNames.length; i++) {\n      newLabelName = splitNames[i].trim().toLowerCase();\n      if (newLabelName) {\n        index = $scope.display.all.subjectAreas.indexOf(newLabelName);\n        if (index < 0) {\n          $scope.display.all.subjectAreas.push(newLabelName);\n        }\n        $scope.display.setSelected(newLabelName);\n      }\n    }\n    $scope.newLabel.name = '';\n  }\n};\n$scope.toggleLabel = function(label) {\n  if (!$scope.onlyShowActive) {\n    $scope.display.toggle(label);\n  }\n};\n};\nLabelsController.$inject = [\"$scope\", \"LabelDisplay\", \"getAllLabels\"];\n\n/*\n- list of labels.\n\n- create directive whre you choose them (need titles, and suggested labels)\n\n- create directive where you display them (need classification and ordering)\n\ncs-choose-labels search titles suggestion-type\n\ncs-display-labels search\n\n*/\n\n\nmodule.directive(\n'csLabels',\nfunction() {\n  return {\n    scope: {\n      search: '=',\n      gradeLevelsTitle: '@',\n      engagementLevelsTitle: '@',\n      subjectAreasTitle: '@',\n      subjectAreasLabel: '@',\n      type: '@',\n      onlyShowActive: '@'\n    },\n    templateUrl: './static/templates/labels.html',\n    controller: LabelsController\n  };\n});\n\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./directives/label_directives.js\n ** module id = 12\n ** module chunks = 0\n **/","'use strict';\n\nvar angular = require( 'angular' );\n\nvar module = angular.module('communityshare.directives.mainview', [\n'ui.bootstrap.alert'\n]);\n\nmodule.directive(\n'csRegistrationWrapper',\nfunction() {\n  return {\n    templateUrl: '/static/templates/registration_wrapper.html',\n    transclude: true\n  };\n});\n\nmodule.directive(\n'csStandardWrapper',\nfunction() {\n  return {\n    templateUrl: '/static/templates/standard_wrapper.html',\n    transclude: true\n  };\n});\n\nmodule.directive(\n'csSplashWrapper',\nfunction() {\n  return {\n    templateUrl: '/static/templates/splash_wrapper.html',\n    transclude: true\n  };\n});\n\nmodule.directive(\n'csSideNav',\nfunction() {\n  return {\n    templateUrl: '/static/templates/sidenav.html',\n    replace: true\n  };\n});\n\nmodule.directive(\n'csNavBar',\nfunction() {\n  return {\n    templateUrl: '/static/templates/navbar.html',\n    controller: 'NavbarController',\n    replace: true\n  };\n});\n\nmodule.directive(\n'csFooter',\nfunction() {\n  return {\n    templateUrl: '/static/templates/footer.html',\n    replace: true\n  };\n});\n\nmodule.directive(\n'csUserAgreement',\nfunction() {\n  return {\n    templateUrl: '/static/templates/user_agreement.html'\n  };\n});\n\nmodule.directive(\n'csForbidden',\n[\"Session\", function(Session) {\n  return {\n    templateUrl: '/static/templates/forbidden.html',\n    controller: [\"$scope\", \"$location\", function($scope, $location) {\n      $scope.thisLocation = $location.path();\n      if (!(Session.activeUser)) {\n        $location.path('/login').search('goto', $scope.thisLocation);\n      }\n    }]\n  };\n}]);\n\nmodule.directive(\n'csDatepicker',\nfunction() {\n  return {\n    scope: {\n      'ngModel': '='\n    },\n    templateUrl: '/static/templates/datepicker.html',\n    controller: [\"$scope\", function($scope) {\n\n      $scope.today = function() {\n        $scope.ngModel = new Date();\n      };\n\n      $scope.clear = function () {\n        $scope.ngModel = null;\n      };\n\n      $scope.minDate = new Date();\n      $scope.maxDate = new Date();\n      $scope.maxDate.setFullYear($scope.maxDate.getFullYear()+1);\n\n      $scope.open = function($event) {\n        $event.preventDefault();\n        $event.stopPropagation();\n        $scope.opened = true;\n      };\n\n      $scope.dateOptions = {\n        formatYear: 'yy',\n        startingDay: 1\n      };\n    }]\n  };\n});\n\n\n// These directive based upon:\n// http://stackoverflow.com/questions/21466495/using-angularjs-how-do-i-set-all-form-fields-to-dirty-at-once\n\nmodule.directive('formSubmitted', function () {\nreturn {\n  restrict: 'A',\n  require: 'form',\n  link: function (scope, element) {\n    scope.submitted = false;\n    element.on('submit', function () {\n      scope.$apply(function () {\n        scope.submitted = true;\n      });\n    });\n  }\n};\n});\n\nmodule.directive(\n'inputErrorHelper',\nfunction () {\n  return {\n    restrict: 'A',\n    require: '^form',\n    scope: {\n      inputTag: '@',\n      fieldName: '@'\n    },\n\n    link: function (scope, element, attrs, formController) {\n\n      var inputTagType = scope.inputTag || 'input';\n      var inputElement = element.find(inputTagType);\n      var fieldName = scope.fieldName || inputElement.attr('name');\n      var formScope = element.scope();\n\n      scope.makeDirty = function() {\n        var field = formController[fieldName];\n        field.$setViewValue(field.$viewValue);\n      };\n\n      formScope.$watch('submitted', function (submitted) {\n        if (submitted) {\n          scope.makeDirty();\n        }\n      });\n      inputElement.bind('blur', function() {\n        scope.$apply(function() {\n          scope.makeDirty();\n        });\n      });\n    }\n  };\n});\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./directives/mainview_directives.js\n ** module id = 13\n ** module chunks = 0\n **/","'use strict';\n\nvar angular = require( 'angular' );\n\nvar module = angular.module('communityshare.directives.survey', [\n]);\n\nmodule.directive(\n'csQuestion',\nfunction() {\n  return {\n    scope: {\n      question: '=',\n      answers: '='\n    },\n    controller: [\"$scope\", function($scope) {\n      // Set custom_answer to ' ' so that it is not initally\n      // selected.\n      $scope.custom_answer = ' ';\n    }],\n    templateUrl: 'static/templates/question.html'\n  };\n});\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./directives/survey_directives.js\n ** module id = 14\n ** module chunks = 0\n **/","'use strict';\n\nvar angular = require( 'angular' );\n\nvar module = angular.module('communityshare.directives.user', [\n  'communityshare.services.survey',\n  'communityshare.directives.survey'\n]);\n\nmodule.directive(\n'csCommunityPartnerView',\nfunction() {\n  return {\n    scope: {\n      methods: '=',\n      user: '='},\n    templateUrl: './static/templates/community_partner_view.html',\n    controller: [\"Session\", \"$scope\", \"CommunityPartnerUtils\", \"Search\", \"Messages\", function(Session, $scope, CommunityPartnerUtils, Search, Messages) {\n      $scope.methods.onUserUpdate = function(user) {\n        if (user.is_community_partner) {\n          var searchesPromise = user.getSearches();\n          var searchPromise = CommunityPartnerUtils.searchesPromiseToSearchPromise(\n            searchesPromise);\n          searchPromise.then(\n            function(search) {\n              $scope.search = search;\n            },\n            function(message) {\n              Messages.error(message);\n            });\n        }\n      };\n      if ($scope.user) {\n        $scope.methods.onUserUpdate($scope.user);\n      }\n    }]\n  };\n});\n\nmodule.directive(\n'csEducatorView',\nfunction() {\n  return {\n    scope: {\n      methods: '=',\n      user: '='},\n    templateUrl: './static/templates/educator_view.html',\n    controller: [\"Session\", \"$scope\", \"Search\", \"Messages\", function(Session, $scope, Search, Messages) {\n      $scope.methods.onUserUpdate = function(user) {\n        var searchesPromise = user.getSearches();\n        searchesPromise.then(\n          function(searches) {\n            var searchesAsEducator = [];\n            for (var i=0; i<searches.length; i++) {\n              var search = searches[i];\n              if (search.searcher_role === 'educator') {\n                searchesAsEducator.push(search);\n              }\n            }\n            $scope.searches = searchesAsEducator;\n          },\n          function(message) {\n            Messages.error(message);\n          });\n      };\n      if ($scope.user) {\n        $scope.methods.onUserUpdate($scope.user);\n      }\n    }]\n  };\n});\n\nmodule.directive('csParserHook', function() {\nreturn {\n  require: 'ngModel',\n  scope: {\n    methods: '='\n  },\n  link: function(scope, elem, attrs, ctrl) {\n    var methodName = attrs.csParserHook;\n    ctrl.$parsers.push(function(value) {\n      var output;\n      if (scope.methods[methodName]) {\n        output = scope.methods[methodName](value);\n      }\n      return output;\n    });\n  }\n};\n});\n\nmodule.directive('csMatch', function() {\nreturn {\n  require: 'ngModel',\n  scope: {\n    methods: '='\n  },\n  link: function(scope, elem, attrs, ctrl) {\n\n    var methodName = attrs.csMatch;\n    var otherValue;\n\n    var isMatch = function(value1, value2) {\n      if (value1 === undefined) {\n        value1 = '';\n      }\n      if (value2 === undefined) {\n        value2 = '';\n      }\n      return (value1 === value2);\n    };\n\n    ctrl.$parsers.push(function(value) {\n      var output;\n      var matches = isMatch(value, otherValue);\n      ctrl.$setValidity('match', matches);\n      if (matches) {\n        output = value;\n      }\n      return output;\n    });\n\n    scope.methods[methodName] = function(value) {\n      otherValue = value;\n      var matches = isMatch(value, ctrl.$viewValue);\n      ctrl.$setValidity('match', matches);\n      return value;\n    };\n\n  }\n};\n});\n\nmodule.directive('emitScope', function() {\nreturn {\n  link: function(scope, element, attrs) {\n    scope.$emit(attrs.emitScope, scope);\n  }\n};\n});\n\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./directives/user_directives.js\n ** module id = 15\n ** module chunks = 0\n **/","'use strict';\n\nvar angular = require( 'angular' );\n\nvar module = angular.module(\n'communityshare.services.authentication',\n[\n  'ngResource',\n  'communityshare.services.user',\n  'communityshare.services.conversation'\n]);\n\nmodule.factory(\n'activeUserLoader',\n[\"SessionBase\", function(SessionBase) {\n  return SessionBase.getActiveUserPromise;\n}]);\n\nmodule.factory(\n'SessionBase',\n[\"$q\", function($q) {\n  var SessionBase = {};\n  var deferred;\n  SessionBase.clearUser = function() {\n    deferred = $q.defer();\n    SessionBase.activeUser = undefined;\n  };\n  SessionBase.setUser = function(user) {\n    deferred.resolve(user);\n    SessionBase.activeUser = user;\n    if (user) {\n      user.updateUnviewedConversations();\n    }\n  };\n  SessionBase.getActiveUserPromise = function() {\n    return deferred.promise;\n  };\n  SessionBase.clearUser();\n  return SessionBase;\n}]);\n\nmodule.factory(\n'Session',\n[\"SessionBase\", \"Authenticator\", function(SessionBase, Authenticator) {\n  Authenticator.authenticateFromCookie();\n  return SessionBase;\n}]);\n\nmodule.factory(\n'Authenticator',\n[\"$q\", \"$http\", \"User\", \"SessionBase\", \"$cookies\", \"$cookieStore\", function($q, $http, User, SessionBase, $cookies, $cookieStore) {\n  var Authenticator = {};\n  Authenticator.clean = function() {\n    $http.defaults.headers.common.Authorization = '';\n    $cookieStore.remove('apiKey');\n    SessionBase.clearUser();\n    SessionBase.setUser(undefined);\n  };\n  Authenticator.setApiKey = function(key) {\n    $http.defaults.headers.common.Authorization =\n      'Basic:api:' + key;\n    $cookies.apiKey = key;\n  };\n  Authenticator.setEmail = function(email) {\n    $cookies.email = email;\n  };\n\n  Authenticator.authenticateFromCookie =\n    function() {\n      var deferred = $q.defer();\n      var apiKey = $cookies.apiKey;\n      var email = $cookies.email;\n      if ((apiKey) && (email)){\n        Authenticator.setApiKey(apiKey);\n        var userPromise = User.getByEmail(email);\n        userPromise.then(\n          function(user) {\n            SessionBase.setUser(user);\n          },\n          function(message) {\n            SessionBase.setUser(undefined);\n            deferred.reject(message);\n          }\n        );\n      } else {\n        var message = 'No cookie found';\n        SessionBase.setUser(undefined);\n        deferred.reject(message);\n      }\n    };\n\n  Authenticator.authenticateWithEmailAndPassword =\n    function(email, password) {\n      $http.defaults.headers.common.Authorization =\n        'Basic:' + email + ':' + password;\n      var url = '/api/requestapikey';\n      var promiseApiKey = $http({\n        url: url,\n        method: 'GET'\n      });\n      promiseApiKey.then(\n        function(response) {\n          var apiKey = response.data.apiKey;\n          Authenticator.setApiKey(apiKey);\n          $cookies.email = email;\n        },\n        function(response) {\n        });\n      var userPromise = User.getByEmail(email);\n      SessionBase.clearUser();\n      userPromise.then(\n        function(user) {\n          SessionBase.setUser(user);\n        },\n        function(response) {\n          SessionBase.setUser(undefined);\n        }\n      );\n      return userPromise;\n    };\n\n  Authenticator.requestResetPassword = function(email) {\n    var url = 'api/requestresetpassword/'+email;\n    var deferred = $q.defer();\n    var promise = $http({\n      url: url,\n      method: 'GET'\n    });\n    promise.then(\n      function(response) {\n        deferred.resolve(response.data);\n      },\n      function(response) {\n        var message;\n        if (response.data && response.data.message) {\n          message = response.data.message;\n        }\n        deferred.reject(message);\n      });\n    return deferred.promise;\n  };\n\n  Authenticator.requestConfirmEmail = function() {\n    var deferred = $q.defer();\n    var url = 'api/requestconfirmemail';\n    var promise = $http({\n      url: url,\n      method: 'GET'\n    });\n    promise.then(\n      function(response) {\n        deferred.resolve(undefined);\n      },\n      function(response) {\n        var message = 'Failed to send email confirmation email';\n        if (response.data && response.data.message) {\n          message += ': ' + response.data.message;\n        }\n        response.reject(message);\n      });\n    return deferred.promise;\n  };\n\n  Authenticator.confirmEmail = function(key) {\n    var deferred = $q.defer();\n    var url = 'api/confirmemail';\n    var promise = $http({\n      url: url,\n      method: 'POST',\n      data: {\n        key: key\n      }\n    });\n    SessionBase.clearUser();\n    promise.then(\n      function(response) {\n        var apiKey = response.data.apiKey;\n        var user = new User(response.data.data);\n        Authenticator.setApiKey(apiKey);\n        SessionBase.setUser(user);\n        deferred.resolve(user);\n      },\n      function(response) {\n        var message = '';\n        if (response.data && response.data.message) {\n          message = response.data.message;\n        }\n        deferred.reject(message);\n      });\n    return deferred.promise;\n  };\n\n  Authenticator.resetPassword = function(key, password) {\n    var deferred = $q.defer();\n    var url = 'api/resetpassword';\n    var promise = $http({\n      url: url,\n      method: 'POST',\n      data: {\n        key: key,\n        password: password\n      }\n    });\n    promise.then(\n      function(response) {\n        deferred.resolve(response.data);\n      },\n      function(response) {\n        var message = '';\n        if (response.data && response.data.message) {\n          message = response.data.message;\n        }\n        deferred.reject(message);\n      });\n    return deferred.promise;\n  };\n  return Authenticator;\n}]\n);\n\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./services/authentication_services.js\n ** module id = 16\n ** module chunks = 0\n **/","'use strict';\n\nvar angular = require( 'angular' );\n\nvar module = angular.module(\n'communityshare.services.conversation',\n[\n  'communityshare.services.item',\n  'communityshare.services.user',\n  'communityshare.services.share'\n]);\n\nmodule.factory(\n'conversationLoader',\n[\"Conversation\", \"$q\", function(Conversation, $q) {\n  return function(conversationId) {\n    var deferred = $q.defer();\n    var conversationPromise = Conversation.get(conversationId);\n    conversationPromise.then(\n      function(conversation) {\n        deferred.resolve(conversation);\n      },\n      function() {\n        deferred.resolve(undefined);\n      });\n    return deferred.promise;\n  };\n}]);\n\nmodule.factory(\n'Conversation',\n[\"SessionBase\", \"itemFactory\", \"UserBase\", \"Message\", \"Messages\", \"Share\", function(SessionBase, itemFactory, UserBase, Message, Messages, Share) {\n  var Conversation = itemFactory('conversation');\n  Conversation.prototype.toData = function() {\n    var fields = ['id', 'title', 'search_id', 'userA_id', 'userB_id'];\n    var d = {};\n    for (var i=0; i<fields.length; i++) {\n      var field = fields[i];\n      d[field] = this[field];\n    }\n    return d;\n  };\n  Conversation.prototype.updateFromData = function(data) {\n    var _this = this;\n    for (var key in data) {\n      this[key] = data[key];\n    }\n    if (this.userA) {\n      this.userA = UserBase.make(this.userA);\n    }\n    if (this.userB) {\n      this.userB = UserBase.make(this.userB);\n    }\n    SessionBase.getActiveUserPromise().then(\n      function(activeUser) {\n        if (activeUser) {\n          if (activeUser.id === _this.userA_id) {\n            _this.otherUser = _this.userB;\n          } else if (activeUser.id === _this.userB_id) {\n            _this.otherUser = _this.userA;\n          }\n        }\n      });\n    this.datetime_last_message = undefined;\n    if (this.messages) {\n      for (var i=0; i<this.messages.length; i++) {\n        var messageData = this.messages[i];\n        this.messages[i] = new Message(messageData);\n        if (messageData.sender_user_id === this.userA.id) {\n          this.messages[i].sender_user = this.userA;\n        } else if (messageData.sender_user_id === this.userB.id) {\n          this.messages[i].sender_user = this.userB;\n        }\n        if ((this.datetime_last_message === undefined) ||\n            (this.messages[i].date_created > this.datetime_last_message)) {\n          this.datetime_last_message = this.messages[i].date_created;\n        }\n      }\n    }\n  };\n  Conversation.prototype.getUnviewedMessages = function() {\n    var unviewedMessages = [];\n    if (this.otherUser) {\n      for (var i=0; i<this.messages.length; i++) {\n        var message = this.messages[i];\n        if ((message.sender_user_id === this.otherUser.id) &&\n            !(message.viewed)) {\n          unviewedMessages.push(message);\n        }\n      }\n    }\n    return unviewedMessages;\n  };\n  Conversation.prototype.markMessagesAsViewed = function() {\n    var messages = this.getUnviewedMessages();\n    for (var i=0; i<messages.length; i++) {\n      var message = messages[i];\n      message.viewed = true;\n      message.save();\n    }\n  };\n  Conversation.prototype.makeShare = function() {\n    var share;\n    if (this.otherUser) {\n      var educator_user_id;\n      var community_partner_user_id;\n      if (SessionBase.activeUser.is_educator) {\n        educator_user_id = SessionBase.activeUser.id;\n      } else if (SessionBase.activeUser.is_community_partner) {\n        community_partner_user_id = SessionBase.activeUser.id;\n      }\n      if (this.otherUser.is_educator) {\n        educator_user_id = this.otherUser.id;\n      } else if (this.otherUser.is_community_partner) {\n        community_partner_user_id = this.otherUser.id;\n      }\n      if ((educator_user_id === undefined) || (community_partner_user_id === undefined)) {\n        Messages.error('A share required both an educator and a community partner.');\n      } else {\n        share = new Share({\n          conversation_id: this.id,\n          educator_user_id: educator_user_id,\n          community_partner_user_id: community_partner_user_id,\n          title: undefined,\n          description: undefined,\n          educator_approved: false,\n          community_partner_approved: false\n        });\n        share.addNewEvent();\n      }\n    }\n    return share;\n  };\n\n  Conversation.getUnviewedForUser = function(user_id) {\n    var data = {\n      user_id: user_id,\n      with_unviewed_messages: true\n    };\n    var conversationsPromise = Conversation.get_many(data=data);\n    return conversationsPromise;\n  };\n\n  return Conversation;\n}]);\n\nmodule.factory(\n'Message',\n[\"itemFactory\", function(itemFactory) {\n  var Message = itemFactory('message');\n  Message.prototype.toData = function() {\n    var fields = ['id', 'conversation_id', 'sender_user_id', 'content', 'date_created', 'user'];\n    var d = {};\n    for (var i=0; i<fields.length; i++) {\n      var field = fields[i];\n      d[field] = this[field];\n    }\n    return d;\n  };\n  Message.prototype.updateFromData = function(data) {\n    for (var key in data) {\n      this[key] = data[key];\n    }\n    if (this.date_created) {\n      this.date_created = new Date(this.date_created);\n    } else {\n      this.date_created = new Date();\n    }\n  };\n  return Message;\n}]);\n\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./services/conversation_services.js\n ** module id = 17\n ** module chunks = 0\n **/","'use strict';\n\nrequire( './authentication_services.js' );\nrequire( './map_services.js' );\nrequire( './modal_services.js' );\nrequire( './conversation_services.js' );\nrequire( './utility_services.js' );\nrequire( './share_services.js' );\nrequire( './item_services.js' );\nrequire( './user_services.js' );\nrequire( './search_services.js' );\nrequire( './message_services.js' );\nrequire( './survey_services.js' );\nrequire( './statistic_services.js' );\nrequire( './stacktrace_services.js' );\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./services/index.js\n ** module id = 18\n ** module chunks = 0\n **/","'use strict';\n\nvar angular = require( 'angular' );\n\nvar module = angular.module(\n'communityshare.services.item',\n[\n  'ngResource',\n  'ngCookies'\n]);\n\nmodule.factory(\n'itemFactory',\n[\"$q\", \"$http\", \"SessionBase\", function($q, $http, SessionBase) {\n  var itemFactory = function(resourceName) {\n    var Item = function(itemData) {\n      this.updateFromData(itemData);\n      if (this.initialize) {\n        this.initialize();\n      }\n    };\n    Item.cache = {};\n    Item.searchCache = {};\n    Item.prototype.toData = function() {\n      var data = JSON.parse(JSON.stringify(this));\n      return data;\n    };\n    Item.prototype.clone = function() {\n      var data = this.toData();\n      var item = new Item(data);\n      return item;\n    };\n    Item.makeUrl = function(id) {\n      var url = '/api/' + resourceName;\n      if (id !== undefined) {\n        url += '/' + id;\n      }\n      return url;\n    };\n    Item.make = function(itemData) {\n      var item = Item.cache[itemData.id];\n      if (item === undefined) {\n        item = new Item(itemData);\n        Item.cache[itemData.id] = item;\n      } else {\n        item.updateFromData(itemData);\n      }\n      return item;\n    };\n\n    Item.get = function(id, forceRefresh) {\n      var deferred = $q.defer();\n      var item = Item.cache[id];\n      if ((item === undefined) || forceRefresh) {\n        var dataPromise = $http({\n          method: 'GET',\n          url: Item.makeUrl(id)\n        });\n        dataPromise.then(\n          function(data) {\n            var item = Item.make(data.data.data);\n            deferred.resolve(item);\n          },\n          function(response) {\n            deferred.reject(response.message);\n          }\n        );\n      } else {\n        deferred.resolve(item);\n      }\n      return deferred.promise;\n    };\n    Item.get_many = function(searchParams, forceRefresh) {\n      var deferred = $q.defer();\n\n      var searchHash = JSON.stringify(searchParams);\n      var items = Item.searchCache[searchHash];\n      if ((items === undefined) || forceRefresh) {\n\n        var dataPromise = $http({\n          method: 'GET',\n          url: Item.makeUrl(),\n          params: searchParams\n        });\n\n        dataPromise.then(\n          function(response) {\n            var items = [];\n            for (var i=0; i<response.data.data.length; i++) {\n              var item = Item.make(response.data.data[i]);\n              items.push(item);\n            }\n            Item.searchCache[searchHash] = items;\n            deferred.resolve(items);\n          },\n          function(response) {\n            deferred.reject(response.data.message);\n          }\n        );\n\n      } else {\n        deferred.resolve(items);\n      }\n      return deferred.promise;\n    };\n    Item.prototype._baseUpdateFromData = function(itemData) {\n      for (var key in itemData) {\n        this[key] = itemData[key];\n      }\n    };\n    Item.prototype.updateFromData = function(itemData) {\n      for (var key in itemData) {\n        this[key] = itemData[key];\n      }\n    };\n    Item.prototype.save = function() {\n      var _this = this;\n      var deferred = $q.defer();\n      var method;\n      if (this.id === undefined) {\n        method = 'POST';\n      } else {\n        method = 'PUT';\n      }\n      var dataPromise = $http({\n          method: method,\n          url: Item.makeUrl(this.id),\n          data: this.toData()\n        });\n      dataPromise.then(\n        function(response) {\n          _this.updateFromData(response.data.data);\n          // Properties of the current user can also be set.\n          if (response.data.user !== undefined) {\n            SessionBase.activeUser.updateFromData(response.data.user);\n          }\n          deferred.resolve(_this);\n        },\n        function(response) {\n          var message = '';\n          if (response.data.message) {\n            message = response.data.message;\n          }\n          deferred.reject(message);\n        }\n      );\n      return deferred.promise;\n\n    };\n    Item.prototype.destroy = function() {\n      var _this = this;\n      var deferred = $q.defer();\n      var dataPromise = $http({\n          method: 'DELETE',\n          url: Item.makeUrl(this.id)\n        });\n      dataPromise.then(\n        function() {\n          _this.active = false;\n          Item.cache[_this.id] = undefined;\n          // Remove the items from the cached searches.\n          for (var searchHash in Item.searchCache) {\n            var items = Item.searchCache[searchHash];\n            var index = items.indexOf(_this);\n            if (index >= 0) {\n              items.splice(index, 1);\n            }\n          }\n          deferred.resolve();\n        },\n        function(response) {\n          var message = '';\n          if (response.data.message) {\n            message = response.data.message;\n          }\n          deferred.reject(message);\n        }\n      );\n      return deferred.promise;\n    };\n\n    return Item;\n  };\n  return itemFactory;\n}]);\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./services/item_services.js\n ** module id = 19\n ** module chunks = 0\n **/","'use strict';\n\nvar angular = require( 'angular' );\n\nvar module = angular.module(\n'communityshare.services.map',\n[\n]);\n\nmodule.factory(\n'locationFromAddress',\n[\"$q\", function($q) {\n  var geocoder = new google.maps.Geocoder();\n  var locationFromAddress = function(address) {\n    var deferred = $q.defer();\n    geocoder.geocode( { 'address': address}, function(results, status) {\n      if (status === google.maps.GeocoderStatus.OK) {\n        deferred.resolve(results[0].geometry.location);\n      } else {\n        deferred.reject('Geocode was not successful for the following reason: ' + status);\n      }\n    });\n    return deferred.promise;\n  };\n  return locationFromAddress;\n}]);\n\nmodule.factory(\n'Map',\n[\"$q\", \"locationFromAddress\", function($q, locationFromAddress) {\n\n  var Map = function(elementId) {\n    var element = document.getElementById(elementId);\n    if (element) {\n      //  Setup map\n      var latlng = new google.maps.LatLng(32.223303, -110.970905);\n      var mapOptions = {\n        zoom: 10,\n        center: latlng\n      };\n      this.map = new google.maps.Map(document.getElementById(elementId), mapOptions);\n    }\n  };\n\n  Map.prototype.codeAddress = function(address) {\n    var _this = this;\n    var deferred = $q.defer();\n    var locationPromise = locationFromAddress(address);\n    locationPromise.then(\n      function(location) {\n        if (_this.map) {\n          _this.map.setCenter(location);\n          _this.map.setZoom(13);\n        }\n        deferred.resolve(location);\n      },\n      function(message) {\n        deferred.reject(message);\n      });\n    return deferred.promise;\n  };\n\n  return Map;\n}]);\n\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./services/map_services.js\n ** module id = 20\n ** module chunks = 0\n **/","'use strict';\n\nvar angular = require( 'angular' );\n\nvar module = angular.module(\n'communityshare.services.message',\n[\n]);\n\nmodule.factory(\n'Messages',\n[\"$log\", \"$timeout\", function($log, $timeout) {\n  var MESSAGETIME = 5000; //milliseconds\n\n  var Message = function(text, type) {\n    this.text = text;\n    this.type = type;\n  };\n\n  var MessageHolder = function() {\n    this.messages = [];\n  };\n  MessageHolder.prototype.error = function(errorText) {\n    var _this = this;\n    var newMessage = new Message(errorText, 'danger');\n    this.messages.push(newMessage);\n    $log.error(errorText);\n    $timeout(function() {\n      _this.removeMessage(newMessage);\n    }, MESSAGETIME);\n  };\n  MessageHolder.prototype.info = function(messageText) {\n    var newMessage = new Message(messageText, 'info');\n    this.messages.push(newMessage);\n    $log.info(messageText);\n  };\n  MessageHolder.prototype.removeMessage = function(message) {\n\n    var index = this.messages.indexOf(message);\n    if (index >= 0) {\n      this.messages.splice(index, 1);\n    }\n  };\n\n  return new MessageHolder();\n}]);\n\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./services/message_services.js\n ** module id = 21\n ** module chunks = 0\n **/","'use strict';\n\nvar angular = require( 'angular' );\n\nvar module = angular.module('communityshare.services.modal', []);\n\n\nmodule.factory(\n'makeDialog', [\"$modal\", function($modal) {\n  return function(title, msg, btns) {\n    var opts = {\n      templateUrl: './static/templates/dialog.html',\n      controller: function($scope, $modalInstance, title, msg, btns) {\n        $scope.title = title;\n        $scope.msg = msg;\n        $scope.btns = btns;\n        $scope.onClick = function(returnValue) {\n          $modalInstance.close(returnValue);\n        };\n      },\n      resolve: {\n        'title': function() {return title;},\n        'msg': function() {return msg;},\n        'btns': function() {return btns;}\n      }\n    };\n    var m = $modal.open(opts);\n    return m;\n  };\n}]);\n\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./services/modal_services.js\n ** module id = 22\n ** module chunks = 0\n **/","'use strict';\n\nvar angular = require( 'angular' );\n\nvar module = angular.module(\n'communityshare.services.search',\n[\n  'communityshare.services.item',\n  'communityshare.services.user'\n]);\n\nmodule.factory(\n'getAllLabels',\n[\"$q\", \"$http\", function($q, $http) {\n  var getAllLabels = function() {\n    var url = '/api/labels';\n    var labelsPromise = $http({\n      method: 'GET',\n      url: url\n    });\n    var deferred = $q.defer();\n    labelsPromise.then(\n      function(response) {\n        var labels = response.data.data;\n        deferred.resolve(labels);\n      },\n      function(response) {\n        var message = response.data.message;\n        deferred.reject(message);\n      });\n    return deferred.promise;\n  };\n  return getAllLabels;\n}]);\n\nmodule.factory(\n'LabelMapping',\n[\"makeBaseLabels\", function(makeBaseLabels) {\n  var labellists = makeBaseLabels().all;\n  var labelMapping = {};\n  for (var key in labellists) {\n    for (var i=0; i<labellists[key].length; i++) {\n      var label = labellists[key][i];\n      labelMapping[label] = key;\n    }\n  }\n  return labelMapping;\n}]);\n\nmodule.factory(\n'Search',\n[\"itemFactory\", \"$q\", \"$http\", \"labelMapping\", \"UserBase\", \"orderLabels\", function(itemFactory, $q, $http, labelMapping, UserBase, orderLabels) {\n\n  var compareLabels = function(targetLabels, retrievedLabels) {\n    var matchingLabels = {};\n    var missingLabels = [];\n    var lcTargetLabels = [];\n    for (var i=0; i<targetLabels.length; i++) {\n      lcTargetLabels.push(targetLabels[i].toLowerCase());\n    }\n    var lcRetrievedLabels = [];\n    for (var j=0; j<retrievedLabels.length; j++) {\n      lcRetrievedLabels.push(retrievedLabels[j].toLowerCase());\n    }\n    for (var k=0; k<lcTargetLabels.length; k++) {\n      var lcTargetLabel = lcTargetLabels[k];\n      var index = lcRetrievedLabels.indexOf(lcTargetLabel);\n      if (index === -1) {\n        missingLabels.push(targetLabels[k]);\n      }\n      matchingLabels[targetLabels[k]] = (index >= 0);\n      if (index !== -1) {\n        matchingLabels[retrievedLabels[index]] = true;\n      }\n    }\n    var comparison = {\n      'matching': matchingLabels,\n      'missing': missingLabels\n    };\n    return comparison;\n  };\n\n  var Search = itemFactory('search');\n  Search.prototype.initialize = function() {\n    if(this.searcher_user) {\n      this.searcher_user = UserBase.make(this.searcher_user);\n    }\n  };\n  Search.prototype.updateFromData = function(data) {\n    for (var key in data) {\n      this[key] = data[key];\n    }\n    if (this.created) {\n      this.created = new Date(this.created);\n    }\n    if (this.labels) {\n      this.labels = orderLabels(this.labels);\n    }\n  };\n  Search.prototype.isProfile = function(user) {\n    var isProfile = (\n      (user.community_partner_profile_search.id === this.id) ||\n        (user.educator_profile_search.id === this.id));\n    return isProfile;\n  };\n  Search.getResults = function(searchId, page) {\n    var deferred = $q.defer();\n    if (typeof page === 'undefined') page = 0;\n    var url = '/api/search/' + searchId + '/' + page + '/results';\n    var resultsPromise = $http({\n      method: 'GET',\n      url: url\n    });\n    var searchPromise = Search.get(searchId);\n    var searchAndResultsPromise = $q.all([searchPromise, resultsPromise]);\n    searchAndResultsPromise.then(\n      function(responses) {\n        var baseSearch = responses[0];\n        var resultsResponse = responses[1];\n        var searches = [];\n        for (var i=0; i<resultsResponse.data.data.length; i++) {\n          var search = new Search(resultsResponse.data.data[i]);\n          var comparison = compareLabels(baseSearch.labels, search.labels);\n          search.matchingLabels = comparison.matching;\n          search.missingLabels = comparison.missing;\n          search.targetLabels = baseSearch.labels;\n          searches.push(search);\n        }\n        deferred.resolve(searches);\n      },\n      function(response) {\n        var msg = '';\n        if (response.message) {\n          msg = response.message;\n        }\n        deferred.reject('Error loading search results: ' + msg);\n      });\n    return deferred.promise;\n  };\n  return Search;\n}]);\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./services/search_services.js\n ** module id = 23\n ** module chunks = 0\n **/","'use strict';\n\nvar angular = require( 'angular' );\n\nvar module = angular.module(\n'communityshare.services.share',\n[\n  'communityshare.services.item'\n]);\n\nmodule.factory(\n'Share',\n[\"itemFactory\", \"EvntBase\", \"SessionBase\", function(itemFactory, EvntBase, SessionBase) {\n  var Share = itemFactory('share');\n  Share.prototype.updateFromData = function(shareData) {\n    this._baseUpdateFromData(shareData);\n    this.largest_datetime_start = undefined;\n    if (this.events) {\n      for (var i=0; i<this.events.length; i++) {\n        this.events[i] = EvntBase.make(this.events[i]);\n        if ((this.largest_datetime_start === undefined) ||\n            (this.events[i].datetime_start > this.largest_datetime_start)) {\n          this.largest_datetime_start = this.events[i].datetime_start;\n        }\n      }\n    } else {\n      this.events = [];\n    }\n    var iAmCommunityPartner = false;\n    var iAmEducator = false;\n    if (SessionBase.activeUser) {\n      iAmCommunityPartner = (\n        SessionBase.activeUser.id === this.community_partner_user_id);\n      iAmEducator = (\n        SessionBase.activeUser.id === this.educator_user_id);\n    }\n    if (this.educator && this.community_partner) {\n      if (iAmEducator) {\n        this.otherUser = this.community_partner;\n      } else if (iAmCommunityPartner) {\n        this.otherUser = this.educator;\n      }\n    }\n    this.canApprove = false;\n    if ((iAmEducator) && (!this.educator_approved) && (this.community_partner_approved)) {\n      this.canApprove = true;\n    } else if ((iAmCommunityPartner) && (!this.community_partner_approved) && (this.educator_approved)) {\n      this.canApprove = true;\n    }\n    this.approved = (this.educator_approved && this.community_partner_approved);\n  };\n  Share.prototype.hasActiveEvent = function() {\n    var hasEvents = false;\n    for (var i=0; i<this.events.length; i++) {\n      var evnt = this.events[i];\n      if ((evnt.id >= 0) && (evnt.active)) {\n        hasEvents = true;\n      }\n    }\n    return hasEvents;\n  };\n  Share.prototype.addNewEvent = function() {\n    var evnt = new EvntBase({\n      share_id: this.id,\n      title: this.title,\n      active: true,\n      description: '',\n      datetime_start: undefined,\n      datetime_stop: undefined\n    });\n    this.events.push(evnt);\n  };\n  Share.sortShares = function(shares) {\n    var futureShares = [];\n    var pastShares = [];\n    for (var i=0; i<shares.length; i++) {\n      var share = shares[i];\n      if (share.largest_datetime_start > new Date()) {\n        futureShares.push(share);\n      } else {\n        pastShares.push(share);\n      }\n    }\n    futureShares.sort(function(a, b) {return a.datetime_start > b.datetime_start;});\n    pastShares.sort(function(a, b) {return a.datetime_start > b.datetime_start;});\n    return {\n      future: futureShares,\n      past: pastShares\n    };\n  };\n\n  return Share;\n}]);\n\nmodule.factory(\n'EvntBase',\n[\"itemFactory\", function(itemFactory) {\n  var Evnt = itemFactory('event');\n  return Evnt;\n}]);\n\nvar splitDateTime = function(datetime) {\nvar date = new Date(datetime.getFullYear(),\n                    datetime.getMonth(),\n                    datetime.getDate());\nvar time = new Date(1900, 0, 1,\n                    datetime.getHours(),\n                    datetime.getMinutes());\nvar combined = {\n  date: date,\n  time: time\n};\nreturn combined;\n};\n\nvar combineDateTime = function(date, time) {\nvar combined = new Date(\n  date.getFullYear(),\n  date.getMonth(),\n  date.getDate(),\n  time.getHours(),\n  time.getMinutes());\nreturn combined;\n};\n\nmodule.factory(\n'eventLoader',\n[\"Evnt\", \"$q\", function(Evnt, $q) {\n  return function(eventId) {\n    var deferred = $q.defer();\n    var eventPromise = Evnt.get(eventId);\n    eventPromise.then(\n      function(event) {\n        deferred.resolve(event);\n      },\n      function() {\n        deferred.resolve(undefined);\n      });\n    return deferred.promise;\n  };\n}]);\n\nmodule.factory(\n'Evnt',\n[\"EvntBase\", \"Share\", function(EvntBase, Share) {\n  var default_datetime = new Date();\n  default_datetime.setHours(0, 0, 0, 0);\n  EvntBase.prototype.updateFromData = function(eventData) {\n    this._baseUpdateFromData(eventData);\n    if (this.datetime_start === undefined) {\n      this.datetime_start = default_datetime;\n    }\n    if (this.datetime_stop === undefined) {\n      this.datetime_stop = default_datetime;\n    }\n    this.datetime_start = new Date(this.datetime_start);\n    var splitstart = splitDateTime(this.datetime_start);\n    this.date = splitstart.date;\n    this.time_start = splitstart.time;\n    this.datetime_stop = new Date(this.datetime_stop);\n    var splitstop = splitDateTime(this.datetime_stop);\n    this.time_stop = splitstop.time;\n    if (this.share) {\n      this.share = new Share(this.share);\n    }\n  };\n  EvntBase.prototype.updateDateTimes = function() {\n    this.datetime_start = combineDateTime(this.date, this.time_start);\n    this.datetime_stop = combineDateTime(this.date, this.time_stop);\n  };\n  return EvntBase;\n}]);\n\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./services/share_services.js\n ** module id = 24\n ** module chunks = 0\n **/","'use strict';\n//http://www.bennadel.com/blog/2542-logging-client-side-errors-with-angularjs-and-stacktrace-js.htm\n\nvar angular = require( 'angular' );\n\nvar module = angular.module('communityshare.services.stacktrace', []);\n\nmodule.factory(\n'stacktraceService',\nfunction () {\n  return({ print: printStackTrace });\n}\n);\n\nmodule.provider(\n'$exceptionHandler', {\n  $get: [\"errorLogService\", function (errorLogService) {\n    return(errorLogService);\n  }]\n}\n);\n\nmodule.factory(\n'errorLogService',\n[\"$log\", \"$window\", \"stacktraceService\", function ($log, $window, stacktraceService) {\n  function log (exception, cause) {\n    $log.error.apply($log, arguments);\n    try {\n      var errorMessage = exception.toString();\n      var stackTrace = stacktraceService.print({ e: exception });\n      $.ajax({\n        type: 'POST',\n        url: 'http://localhost:3030/error-log',\n        contentType: 'application/json',\n        data: angular.toJson({\n          errorUrl: $window.location.href,\n          errorMessage: errorMessage,\n          stackTrace: stackTrace,\n          cause: ( cause || '' ),\n          browser: navigator.userAgent\n        })\n      });\n    }\n    catch (loggingError) {\n      $log.warn('Error logging failed');\n      $log.log(loggingError);\n    }\n  }\n  return(log);\n}]\n);\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./services/stacktrace_services.js\n ** module id = 25\n ** module chunks = 0\n **/","'use strict';\n\nvar angular = require( 'angular' );\n\nvar module = angular.module(\n'communityshare.services.statistics',\n[]);\n\nmodule.factory(\n'getStatistics',\n[\"$q\", \"$http\", function($q, $http) {\n  var getStatistics = function() {\n    var url = '/api/statistics';\n    var statisticsPromise = $http({\n      method: 'GET',\n      url: url\n    });\n    var deferred = $q.defer();\n    statisticsPromise.then(\n      function(response) {\n        deferred.resolve(response.data.data);\n      },\n      function(response) {\n        var msg = 'Failed to fetch statistics';\n        if (response.data.message) {\n          msg += ': ' + response.data.message;\n        }\n        deferred.reject(msg);\n      });\n    return deferred.promise;\n  };\n  return getStatistics;\n}]);\n\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./services/statistic_services.js\n ** module id = 26\n ** module chunks = 0\n **/","'use strict';\n\nvar angular = require( 'angular' );\n\nvar module = angular.module(\n'communityshare.services.survey',\n[]);\n\nmodule.factory(\n'Answer',\n[\"itemFactory\", function(itemFactory) {\n  var Answer = itemFactory('answer');\n  return Answer;\n}]);\n\nmodule.factory(\n'Question',\n[\"itemFactory\", \"$q\", \"Answer\", function(itemFactory, $q, Answer) {\n  var Question = itemFactory('question');\n  Question.get_many_with_answers = function(\n    user_id, searchParams, answerParams, forceRefresh) {\n    var deferred = $q.defer();\n    var questionsPromise = Question.get_many(searchParams, forceRefresh);\n    // FIXME: Not scalable. Grabbing all answers for a given user.\n    if (!answerParams) {\n      answerParams = {};\n    }\n    answerParams.responder_id = user_id;\n    var answersPromise = Answer.get_many(answerParams);\n    $q.all([questionsPromise, answersPromise]).then(\n      function(data) {\n        var questions = data[0];\n        var answers = data[1];\n        var answersByQuestionId = {};\n        for (var i=0; i<answers.length; i++) {\n          var answer = answers[i];\n          if (!(answer.question_id in answersByQuestionId)) {\n            answersByQuestionId[answer.question_id] = [];\n          }\n          answersByQuestionId[answer.question_id].push(answer);\n        }\n        var sort_fn = function(a, b) {\n            return a.created_date - b.created_date;\n        };\n        for (var j=0; j<questions.length; j++) {\n          var question = questions[j];\n          var some_answers = [];\n          if (question.id in answersByQuestionId) {\n            some_answers = answersByQuestionId[question.id];\n          }\n          some_answers.sort(sort_fn);\n          if (some_answers.length > 0) {\n            question.answer = some_answers[0];\n            question.answers = some_answers;\n          } else {\n            question.answer = new Answer({question_id: question.id});\n          }\n        }\n        deferred.resolve(questions);\n      },\n      function(message) {\n        deferred.reject(message);\n      }\n    );\n    return deferred.promise;\n  };\n  return Question;\n}]);\n\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./services/survey_services.js\n ** module id = 27\n ** module chunks = 0\n **/","'use strict';\n\nvar angular = require( 'angular' );\n\nvar module = angular.module(\n'communityshare.services.user',\n[\n  'communityshare.services.item',\n  'communityshare.services.message'\n]);\n\nmodule.factory(\n'signUp',\n[\"$q\", \"$http\", \"User\", \"Authenticator\", \"Session\", \"Messages\", function($q, $http, User, Authenticator, Session, Messages) {\n  var signUp = function(user, password) {\n    var deferred = $q.defer();\n    var dataPromise = $http({\n      method: 'POST',\n      url: '/api/usersignup',\n      data: {\n        'user': user.toData(),\n        'password': password\n      }});\n    Session.clearUser();\n    dataPromise.then(\n      function(response) {\n        var user = User.make(response.data.data);\n        Authenticator.setApiKey(response.data.apiKey);\n        Authenticator.setEmail(user.email);\n        if (user.warningMessage) {\n          Messages.error('Failed to send email to confirm address.');\n        }\n        Session.setUser(user);\n        user.updateUnviewedConversations();\n        deferred.resolve(user);\n      },\n      function(response) {\n        Session.setUser(undefined);\n        deferred.reject(response.data.message);\n      }\n    );\n    return deferred.promise;\n  };\n  return signUp;\n}]);\n\nmodule.factory(\n'UserBase',\n[\"itemFactory\", function(itemFactory) {\n  var UserBase = itemFactory('user');\n  UserBase.prototype.toData = function() {\n    this.cleanInstitutionAssociations();\n    var data = JSON.parse(JSON.stringify(this));\n    if (this.id) {\n      data.educator_profile_search = this.educator_profile_search.toData();\n      data.community_partner_profile_search = this.community_partner_profile_search.toData();\n    } else {\n      data.educator_profile_search = null;\n      data.community_partner_profile_search = null;\n    }\n    return data;\n  };\n  return UserBase;\n}]);\n\nmodule.factory(\n'userLoader',\n[\"User\", \"$q\", function(User, $q) {\n  return function(userId) {\n    var deferred = $q.defer();\n    var userPromise = User.get(userId);\n    userPromise.then(\n      function(user) {\n        deferred.resolve(user);\n      },\n      function() {\n        deferred.resolve(undefined);\n      });\n    return deferred.promise;\n  };\n}]);\n\n\nmodule.factory(\n'User',\n[\"UserBase\", \"$q\", \"$http\", \"Search\", \"Conversation\", \"SessionBase\", \"Evnt\", \"Messages\", function(UserBase, $q, $http, Search, Conversation, SessionBase, Evnt, Messages) {\n\n  UserBase.search = function(searchParams) {\n    var deferred = $q.defer();\n    var dataPromise = $http({\n      method: 'GET',\n      url: '/api/usersearch',\n      params: searchParams\n    });\n    dataPromise.then(\n      function(response) {\n        var users = [];\n        for (var i=0; i<response.data.data.length; i++) {\n          users.push(UserBase.make(response.data.data[i]));\n        }\n        deferred.resolve(users);\n      },\n      function(response) {\n        deferred.reject(response.message);\n      }\n    );\n    return deferred.promise;\n  };\n\n  UserBase.prototype.cleanInstitutionAssociations = function() {\n    // Remove any insitutions with no names\n    var filteredInstitutionAssociations = [];\n    for (var i=0; i<this.institution_associations.length; i++) {\n      var institution_association = this.institution_associations[i];\n      if (institution_association.institution && institution_association.institution.name) {\n        filteredInstitutionAssociations.push(institution_association);\n      }\n    }\n    this.institution_associations = filteredInstitutionAssociations;\n  };\n\n  UserBase.prototype.addInstitutionAssociationRemoveMethod = function(ia) {\n    var _this = this;\n    ia.remove = function() {\n      var index = _this.institution_associations.indexOf(ia);\n      if (index > -1) {\n        _this.institution_associations.splice(index, 1);\n      }\n    };\n  };\n\n  UserBase.prototype.updateFromData = function(data) {\n    this._baseUpdateFromData(data);\n    if (this.educator_profile_search) {\n      this.educator_profile_search = new Search(\n        this.educator_profile_search);\n    } else {\n      this.educator_profile_search = new Search({\n        searcher_user_id: this.id,\n        searcher_role: 'educator',\n        searching_for_role: 'partner',\n        zipcode: this.zipcode,\n        labels: []\n      });\n    }\n    if (this.community_partner_profile_search) {\n      this.community_partner_profile_search = new Search(\n        this.community_partner_profile_search);\n    } else {\n      this.community_partner_profile_search = new Search({\n        searcher_user_id: this.id,\n        searcher_role: 'partner',\n        searching_for_role: 'educator',\n        zipcode: this.zipcode,\n        labels: []\n      });\n    }\n    if (this.is_administrator) {\n      this.accountCreationStatus = 'done';\n    } else if ((this.educator_profile_search.labels.length === 0) &&\n        (this.community_partner_profile_search.labels.length === 0)) {\n      this.accountCreationStatus = 'choice';\n    } else if (!this.bio) {\n      this.accountCreationStatus = 'personal';\n    } else {\n      this.accountCreationStatus = 'done';\n    }\n\n    if (this.institution_associations === undefined)  {\n      this.institution_associations = [];\n      this.addNewInstitutionAssociation();\n    } else {\n      for (var i=0; i<this.institution_associations.length; i++) {\n        var ia = this.institution_associations[i];\n        this.addInstitutionAssociationRemoveMethod(ia);\n      }\n    }\n  };\n\n  UserBase.prototype.initialize = function() {\n    var _this = this;\n    if (SessionBase.activeUser) {\n      var conversationsPromise = Conversation.get_many(\n        {user_id: SessionBase.activeUser.id});\n      conversationsPromise.then(\n        function(conversations) {\n          _this.conversationsWithMe = [];\n          for (var i=0; i<conversations.length; i++) {\n            var conversation = conversations[i];\n            if (conversation.otherUser.id === _this.id) {\n              _this.conversationsWithMe.push(conversation);\n            }\n          }\n        });\n    }\n  };\n\n  UserBase.prototype.addNewInstitutionAssociation = function() {\n    var ia = {\n      institution: {},\n      role: ''\n    };\n    this.institution_associations.push(ia);\n    this.addInstitutionAssociationRemoveMethod(ia);\n  };\n\n  UserBase.getByEmail = function(email) {\n    var deferred = $q.defer();\n    var dataPromise = $http({\n      method: 'GET',\n      url: '/api/userbyemail/' + email\n    });\n    dataPromise.then(\n      function(data) {\n        var user = UserBase.make(data.data.data);\n        deferred.resolve(user);\n      },\n      function(response) {\n        deferred.reject(response.message);\n      }\n    );\n    return deferred.promise;\n  };\n\n  UserBase.prototype.getSearches = function() {\n    var searchParams = {\n      'searcher_user_id': this.id,\n      'active': true\n    };\n    var searchesPromise = Search.get_many(searchParams);\n    return searchesPromise;\n  };\n\n  UserBase.prototype.getRecentConversations = function() {\n    var now = new Date();\n    var oneMonthAgo = new Date(now.getFullYear(), now.getMonth()-1, now.getDate());\n    var conversationParams = {\n      user_id: this.id,\n      'messages.date_created.greaterthan': oneMonthAgo\n    };\n    var conversationsPromise = Conversation.get_many(\n      conversationParams, true);\n    return conversationsPromise;\n  };\n\n  UserBase.prototype.getUpcomingEvents = function() {\n    var now = new Date();\n    var today = new Date(now.getFullYear(), now.getMonth(), now.getDate());\n    var params = {\n      user_id: SessionBase.activeUser.id,\n      'datetime_start.greaterthan': today\n    };\n    var eventsPromise = Evnt.get_many(params);\n    return eventsPromise;\n  };\n\n  UserBase.prototype.updateUnviewedConversations = function() {\n    var _this = this;\n    var conversationsPromise = Conversation.getUnviewedForUser(this.id);\n    conversationsPromise.then(\n      function(conversations) {\n        var nUnviewedMessages = 0;\n        for (var i=0; i<conversations.length; i++) {\n          var conversation = conversations[i];\n          var messages = conversation.getUnviewedMessages();\n          nUnviewedMessages += messages.length;\n        }\n        _this.nUnviewedMessages = nUnviewedMessages;\n      },\n      function(message) {\n        var msg = '';\n        if (message) {\n          msg = ': ' + message;\n        }\n        Messages.error('Failed to get messages: ' + msg);\n      });\n  };\n\n  return UserBase;\n}]);\n\nmodule.factory(\n'Institution',\n[\"itemFactory\", function(itemFactory) {\n  var Institution = itemFactory('institution');\n  return Institution;\n}]);\n\n// A function that bring up a modal to send a message to someone.\nmodule.factory(\n'startConversation',\n[\"$modal\", \"$location\", \"Conversation\", \"Messages\", function($modal, $location, Conversation, Messages) {\n  var startConversation = function(thisUser, otherUser, search, directToConversation) {\n    var userId = otherUser.id;\n    var searchId;\n    if (search) {\n      searchId = search.id;\n    }\n    // See if we have a conversation with this user\n    var conversationsPromise = Conversation.get_many(\n      {user_id: thisUser.id,\n       other_user_id: otherUser.id\n      }, true);\n    // Options for the new conversation modal.\n    var newConversationOpts = {\n      templateUrl: './static/templates/new_conversation.html',\n      controller: 'NewConversationController',\n      resolve: {\n        userId: function() {return userId;},\n        searchId: function() {return searchId;}\n      }\n    };\n    var withNewConversation = function(conversation) {\n      if (conversation && directToConversation) {\n        $location.path('/conversation/' + conversation.id);\n      }\n    };\n    conversationsPromise.then(\n      function(conversations) {\n        // If we have one conversation with that user go\n        // directly to that page.\n        if (conversations.length === 1) {\n          $location.path('/conversation/' + conversations[0].id);\n        }\n        // If we have no conversations pop up the new converation\n        // modal.\n        else if (conversations.length === 0) {\n          var m = $modal.open(newConversationOpts);\n          m.result.then(withNewConversation);\n        }\n        // If we have more than one conversation (which shouldn't happen\n        // with our current UI) we display a choose conversation modal.\n        else {\n          var opts = {\n            templateUrl: './static/templates/choose_conversation.html',\n            controller: function($scope) {\n              $scope.conversations = conversations;\n              //$scope.user = user;\n              $scope.showConversation = function(conversation) {\n                $location.path('/conversation/' + conversation.id);\n              };\n            }\n          };\n          $modal.open(opts);\n        }\n      },\n      function(errorMessage) {\n        Messages.info(errorMessage);\n      }\n    );\n  };\n  return startConversation;\n}]);\n\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./services/user_services.js\n ** module id = 28\n ** module chunks = 0\n **/","'use strict';\n\nvar angular = require( 'angular' );\n\nvar module = angular.module('communityshare.services.utility', []);\n\nmodule.factory('support', function() {\nvar isIE =  function(version, comparison) {\n  var cc = 'IE';\n  var b = document.createElement('B');\n  var docElem = document.documentElement;\n  var isIE;\n  if(version){\n    cc += ' ' + version;\n    if(comparison){ cc = comparison + ' ' + cc; }\n  }\n  b.innerHTML = '<!--[if '+ cc +']><b id=\"iecctest\"></b><![endif]-->';\n  docElem.appendChild(b);\n  isIE = !!document.getElementById('iecctest');\n  docElem.removeChild(b);\n  return isIE;\n};\nreturn {\n  nativePlaceholderSupport: (function() {\n    var i = document.createElement('input');\n    return i.placeholder !== undefined;\n  })(),\n  isIE: isIE,\n  fileUploader: !isIE(8, 'lte')\n};\n});\n\n\nmodule.filter('truncate', function () {\nreturn function (text, length, end) {\n  if (end === undefined) {\n    end = \"...\";\n  }\n  var output;\n  if ((text.length <= length) || (text.length - end.length <= length)) {\n    output = text;\n  }\n  else {\n    output = String(text).substring(0, length-end.length) + end;\n  }\n  return output ;\n};\n});\n\nmodule.factory('parseyyyyMMdd', function() {\nreturn function(yyyyMMdd) {\n  var date = new Date(yyyyMMdd.substring(0, 4), yyyyMMdd.substring(4, 6),\n                      yyyyMMdd.substring(6, 8));\n  date.setMonth(date.getMonth()-1);\n  return date;\n};\n});\n\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./services/utility_services.js\n ** module id = 29\n ** module chunks = 0\n **/"],"sourceRoot":""}